<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >cpu sm2p256v1_compressed-Throughput</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:238 (9 samples, 0.32%)</title><rect x="1180.4" y="389" width="3.7" height="15.0" fill="rgb(235,93,17)" rx="2" ry="2" />
<text  x="1183.37" y="399.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:121 (96 samples, 3.41%)</title><rect x="304.5" y="117" width="40.2" height="15.0" fill="rgb(239,183,44)" rx="2" ry="2" />
<text  x="307.48" y="127.5" >jav..</text>
</g>
<g >
<title>java.lang.StringLatin1.canEncode:51 (9 samples, 0.32%)</title><rect x="1164.9" y="133" width="3.7" height="15.0" fill="rgb(221,165,22)" rx="2" ry="2" />
<text  x="1167.87" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4146 (10 samples, 0.35%)</title><rect x="200.6" y="133" width="4.2" height="15.0" fill="rgb(207,86,14)" rx="2" ry="2" />
<text  x="203.59" y="143.5" ></text>
</g>
<g >
<title>java.io.FilterInputStream.read:95 (3 samples, 0.11%)</title><rect x="1188.3" y="453" width="1.3" height="15.0" fill="rgb(206,184,34)" rx="2" ry="2" />
<text  x="1191.32" y="463.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3537 (3 samples, 0.11%)</title><rect x="1080.3" y="69" width="1.2" height="15.0" fill="rgb(254,212,33)" rx="2" ry="2" />
<text  x="1083.25" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4101 (28 samples, 0.99%)</title><rect x="1090.3" y="165" width="11.7" height="15.0" fill="rgb(220,170,10)" rx="2" ry="2" />
<text  x="1093.31" y="175.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:650 (25 samples, 0.89%)</title><rect x="769.0" y="53" width="10.5" height="15.0" fill="rgb(239,4,17)" rx="2" ry="2" />
<text  x="772.02" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (2 samples, 0.07%)</title><rect x="949.6" y="85" width="0.8" height="15.0" fill="rgb(213,140,3)" rx="2" ry="2" />
<text  x="952.56" y="95.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (7 samples, 0.25%)</title><rect x="1068.5" y="85" width="3.0" height="15.0" fill="rgb(236,195,34)" rx="2" ry="2" />
<text  x="1071.52" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (3 samples, 0.11%)</title><rect x="930.3" y="101" width="1.2" height="15.0" fill="rgb(249,206,44)" rx="2" ry="2" />
<text  x="933.29" y="111.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:510 (1 samples, 0.04%)</title><rect x="1141.8" y="149" width="0.4" height="15.0" fill="rgb(248,4,27)" rx="2" ry="2" />
<text  x="1144.83" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1550 (9 samples, 0.32%)</title><rect x="609.4" y="69" width="3.8" height="15.0" fill="rgb(219,35,53)" rx="2" ry="2" />
<text  x="612.42" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedMain.main:86 (5 samples, 0.18%)</title><rect x="1184.6" y="469" width="2.0" height="15.0" fill="rgb(230,23,31)" rx="2" ry="2" />
<text  x="1187.55" y="479.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1196 (37 samples, 1.31%)</title><rect x="396.2" y="85" width="15.5" height="15.0" fill="rgb(224,81,48)" rx="2" ry="2" />
<text  x="399.21" y="95.5" ></text>
</g>
<g >
<title>sun.nio.fs.WindowsNativeDispatcher.GetVolumePathName0:-1 (1 samples, 0.04%)</title><rect x="1184.1" y="309" width="0.5" height="15.0" fill="rgb(205,126,48)" rx="2" ry="2" />
<text  x="1187.14" y="319.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DirectMethodHandleAccessor.invoke:104 (2,793 samples, 99.15%)</title><rect x="10.0" y="325" width="1169.9" height="15.0" fill="rgb(224,135,5)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >jdk.internal.reflect.DirectMethodHandleAccessor.invoke:104</text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:700 (13 samples, 0.46%)</title><rect x="854.5" y="37" width="5.4" height="15.0" fill="rgb(250,164,45)" rx="2" ry="2" />
<text  x="857.47" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1654 (46 samples, 1.63%)</title><rect x="827.7" y="69" width="19.2" height="15.0" fill="rgb(248,65,49)" rx="2" ry="2" />
<text  x="830.66" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:249 (3 samples, 0.11%)</title><rect x="59.0" y="101" width="1.3" height="15.0" fill="rgb(243,151,47)" rx="2" ry="2" />
<text  x="62.01" y="111.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.doSingle:138 (5 samples, 0.18%)</title><rect x="1184.6" y="421" width="2.0" height="15.0" fill="rgb(214,217,38)" rx="2" ry="2" />
<text  x="1187.55" y="431.5" ></text>
</g>
<g >
<title>java.lang.Thread.run:1589 (2,803 samples, 99.50%)</title><rect x="10.0" y="469" width="1174.1" height="15.0" fill="rgb(225,14,31)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >java.lang.Thread.run:1589</text>
</g>
<g >
<title>java.lang.String.coder:4559 (1 samples, 0.04%)</title><rect x="1076.1" y="69" width="0.4" height="15.0" fill="rgb(243,190,48)" rx="2" ry="2" />
<text  x="1079.06" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.length:1499 (4 samples, 0.14%)</title><rect x="1074.8" y="85" width="1.7" height="15.0" fill="rgb(250,52,41)" rx="2" ry="2" />
<text  x="1077.81" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1635 (5 samples, 0.18%)</title><rect x="823.9" y="69" width="2.1" height="15.0" fill="rgb(248,216,7)" rx="2" ry="2" />
<text  x="826.89" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1208 (197 samples, 6.99%)</title><rect x="60.3" y="117" width="82.5" height="15.0" fill="rgb(209,111,8)" rx="2" ry="2" />
<text  x="63.27" y="127.5" >java.math..</text>
</g>
<g >
<title>java.math.BigInteger.toString:4089 (2 samples, 0.07%)</title><rect x="156.2" y="165" width="0.8" height="15.0" fill="rgb(205,226,31)" rx="2" ry="2" />
<text  x="159.19" y="175.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1211 (2 samples, 0.07%)</title><rect x="142.8" y="117" width="0.8" height="15.0" fill="rgb(210,136,44)" rx="2" ry="2" />
<text  x="145.79" y="127.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:421 (4 samples, 0.14%)</title><rect x="1185.0" y="373" width="1.6" height="15.0" fill="rgb(234,24,5)" rx="2" ry="2" />
<text  x="1187.97" y="383.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.read:361 (3 samples, 0.11%)</title><rect x="1188.3" y="437" width="1.3" height="15.0" fill="rgb(252,68,49)" rx="2" ry="2" />
<text  x="1191.32" y="447.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:165 (14 samples, 0.50%)</title><rect x="931.5" y="101" width="5.9" height="15.0" fill="rgb(224,223,38)" rx="2" ry="2" />
<text  x="934.55" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4197 (22 samples, 0.78%)</title><rect x="171.7" y="149" width="9.2" height="15.0" fill="rgb(230,147,11)" rx="2" ry="2" />
<text  x="174.69" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1652 (4 samples, 0.14%)</title><rect x="826.0" y="69" width="1.7" height="15.0" fill="rgb(230,1,19)" rx="2" ry="2" />
<text  x="828.99" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.execute:191 (1 samples, 0.04%)</title><rect x="1184.6" y="325" width="0.4" height="15.0" fill="rgb(224,224,47)" rx="2" ry="2" />
<text  x="1187.55" y="335.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1127 (122 samples, 4.33%)</title><rect x="82.9" y="101" width="51.1" height="15.0" fill="rgb(208,16,46)" rx="2" ry="2" />
<text  x="85.89" y="111.5" >java...</text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:522 (1 samples, 0.04%)</title><rect x="1145.6" y="149" width="0.4" height="15.0" fill="rgb(245,127,12)" rx="2" ry="2" />
<text  x="1148.60" y="159.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:519 (2 samples, 0.07%)</title><rect x="1144.8" y="149" width="0.8" height="15.0" fill="rgb(226,41,23)" rx="2" ry="2" />
<text  x="1147.76" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1091 (2 samples, 0.07%)</title><rect x="61.9" y="101" width="0.9" height="15.0" fill="rgb(222,59,22)" rx="2" ry="2" />
<text  x="64.94" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4554 (2 samples, 0.07%)</title><rect x="1067.3" y="85" width="0.8" height="15.0" fill="rgb(250,62,40)" rx="2" ry="2" />
<text  x="1070.27" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (2 samples, 0.07%)</title><rect x="545.3" y="53" width="0.9" height="15.0" fill="rgb(222,91,5)" rx="2" ry="2" />
<text  x="548.34" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1531 (2 samples, 0.07%)</title><rect x="586.0" y="69" width="0.8" height="15.0" fill="rgb(249,69,40)" rx="2" ry="2" />
<text  x="588.97" y="79.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$DMH+0x0000000800001800.212628335.invokeSpecial:-1 (2,793 samples, 99.15%)</title><rect x="10.0" y="261" width="1169.9" height="15.0" fill="rgb(241,52,10)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >java.lang.invoke.LambdaForm$DMH+0x0000000800001800.212628335.invokeSpecial:-1</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:263 (2 samples, 0.07%)</title><rect x="1083.6" y="69" width="0.8" height="15.0" fill="rgb(209,8,4)" rx="2" ry="2" />
<text  x="1086.60" y="79.5" ></text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:578 (2,793 samples, 99.15%)</title><rect x="10.0" y="341" width="1169.9" height="15.0" fill="rgb(254,91,31)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >java.lang.reflect.Method.invoke:578</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1595 (86 samples, 3.05%)</title><rect x="744.7" y="69" width="36.0" height="15.0" fill="rgb(240,187,28)" rx="2" ry="2" />
<text  x="747.72" y="79.5" >jav..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1138 (10 samples, 0.35%)</title><rect x="138.6" y="101" width="4.2" height="15.0" fill="rgb(235,107,0)" rx="2" ry="2" />
<text  x="141.60" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (73 samples, 2.59%)</title><rect x="911.4" y="117" width="30.6" height="15.0" fill="rgb(249,108,27)" rx="2" ry="2" />
<text  x="914.44" y="127.5" >ja..</text>
</g>
<g >
<title>java.lang.ProcessImpl.waitFor:569 (1 samples, 0.04%)</title><rect x="1184.6" y="293" width="0.4" height="15.0" fill="rgb(222,19,15)" rx="2" ry="2" />
<text  x="1187.55" y="303.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (2 samples, 0.07%)</title><rect x="285.6" y="117" width="0.9" height="15.0" fill="rgb(209,150,46)" rx="2" ry="2" />
<text  x="288.63" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1513 (5 samples, 0.18%)</title><rect x="574.7" y="69" width="2.1" height="15.0" fill="rgb(205,112,48)" rx="2" ry="2" />
<text  x="577.66" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.beforeIteration:131 (1 samples, 0.04%)</title><rect x="1184.6" y="341" width="0.4" height="15.0" fill="rgb(220,5,18)" rx="2" ry="2" />
<text  x="1187.55" y="351.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (8 samples, 0.28%)</title><rect x="965.5" y="101" width="3.3" height="15.0" fill="rgb(220,191,14)" rx="2" ry="2" />
<text  x="968.48" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (7 samples, 0.25%)</title><rect x="1081.5" y="85" width="2.9" height="15.0" fill="rgb(218,145,31)" rx="2" ry="2" />
<text  x="1084.51" y="95.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:325 (1 samples, 0.04%)</title><rect x="1184.6" y="373" width="0.4" height="15.0" fill="rgb(205,53,54)" rx="2" ry="2" />
<text  x="1187.55" y="383.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1112 (1 samples, 0.04%)</title><rect x="67.8" y="101" width="0.4" height="15.0" fill="rgb(223,192,23)" rx="2" ry="2" />
<text  x="70.81" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:241 (9 samples, 0.32%)</title><rect x="977.6" y="85" width="3.8" height="15.0" fill="rgb(234,30,13)" rx="2" ry="2" />
<text  x="980.63" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (6 samples, 0.21%)</title><rect x="529.8" y="53" width="2.6" height="15.0" fill="rgb(235,145,44)" rx="2" ry="2" />
<text  x="532.84" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.stopProfilers:260 (4 samples, 0.14%)</title><rect x="1185.0" y="357" width="1.6" height="15.0" fill="rgb(251,107,40)" rx="2" ry="2" />
<text  x="1187.97" y="367.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKey:42 (319 samples, 11.32%)</title><rect x="20.5" y="197" width="133.6" height="15.0" fill="rgb(229,224,10)" rx="2" ry="2" />
<text  x="23.47" y="207.5" >org.sample.SM2Ut..</text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (5 samples, 0.18%)</title><rect x="409.6" y="53" width="2.1" height="15.0" fill="rgb(223,169,10)" rx="2" ry="2" />
<text  x="412.62" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:527 (19 samples, 0.67%)</title><rect x="1156.5" y="149" width="7.9" height="15.0" fill="rgb(230,197,46)" rx="2" ry="2" />
<text  x="1159.49" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1158 (1,331 samples, 47.25%)</title><rect x="351.8" y="101" width="557.5" height="15.0" fill="rgb(216,123,45)" rx="2" ry="2" />
<text  x="354.81" y="111.5" >java.math.MutableBigInteger.divide:1158</text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (16 samples, 0.57%)</title><rect x="952.1" y="101" width="6.7" height="15.0" fill="rgb(254,155,23)" rx="2" ry="2" />
<text  x="955.07" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:68 (1 samples, 0.04%)</title><rect x="434.7" y="69" width="0.5" height="15.0" fill="rgb(243,125,35)" rx="2" ry="2" />
<text  x="437.75" y="79.5" ></text>
</g>
<g >
<title>java.nio.file.Files.isWritable:2633 (1 samples, 0.04%)</title><rect x="1184.1" y="405" width="0.5" height="15.0" fill="rgb(212,174,33)" rx="2" ry="2" />
<text  x="1187.14" y="415.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4170 (8 samples, 0.28%)</title><rect x="1022.0" y="133" width="3.4" height="15.0" fill="rgb(227,155,40)" rx="2" ry="2" />
<text  x="1025.03" y="143.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:262 (2 samples, 0.07%)</title><rect x="1163.6" y="133" width="0.8" height="15.0" fill="rgb(236,102,51)" rx="2" ry="2" />
<text  x="1166.61" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (6 samples, 0.21%)</title><rect x="1086.1" y="85" width="2.5" height="15.0" fill="rgb(246,139,13)" rx="2" ry="2" />
<text  x="1089.12" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1494 (10 samples, 0.35%)</title><rect x="532.8" y="69" width="4.2" height="15.0" fill="rgb(211,167,4)" rx="2" ry="2" />
<text  x="535.77" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1107 (1 samples, 0.04%)</title><rect x="67.4" y="101" width="0.4" height="15.0" fill="rgb(226,128,53)" rx="2" ry="2" />
<text  x="70.39" y="111.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (2,793 samples, 99.15%)</title><rect x="10.0" y="357" width="1169.9" height="15.0" fill="rgb(237,212,35)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2491 (1 samples, 0.04%)</title><rect x="53.1" y="149" width="0.5" height="15.0" fill="rgb(223,218,54)" rx="2" ry="2" />
<text  x="56.15" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1473 (1 samples, 0.04%)</title><rect x="532.4" y="53" width="0.4" height="15.0" fill="rgb(206,208,23)" rx="2" ry="2" />
<text  x="535.35" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1547 (25 samples, 0.89%)</title><rect x="599.0" y="69" width="10.4" height="15.0" fill="rgb(225,84,12)" rx="2" ry="2" />
<text  x="601.95" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1614 (3 samples, 0.11%)</title><rect x="787.0" y="69" width="1.3" height="15.0" fill="rgb(225,94,52)" rx="2" ry="2" />
<text  x="790.03" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4150 (146 samples, 5.18%)</title><rect x="286.5" y="133" width="61.1" height="15.0" fill="rgb(216,199,9)" rx="2" ry="2" />
<text  x="289.46" y="143.5" >java.m..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1543 (2 samples, 0.07%)</title><rect x="597.7" y="69" width="0.8" height="15.0" fill="rgb(234,96,8)" rx="2" ry="2" />
<text  x="600.70" y="79.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_thrpt_jmhStub:120 (1 samples, 0.04%)</title><rect x="1179.1" y="229" width="0.4" height="15.0" fill="rgb(206,25,13)" rx="2" ry="2" />
<text  x="1182.11" y="239.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1537 (1 samples, 0.04%)</title><rect x="590.2" y="69" width="0.4" height="15.0" fill="rgb(210,74,39)" rx="2" ry="2" />
<text  x="593.16" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.InputStreamDrainer.run:80 (7 samples, 0.25%)</title><rect x="1186.6" y="469" width="3.0" height="15.0" fill="rgb(235,81,50)" rx="2" ry="2" />
<text  x="1189.65" y="479.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_thrpt_jmhStub:119 (2,791 samples, 99.08%)</title><rect x="10.0" y="229" width="1169.1" height="15.0" fill="rgb(215,144,23)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_thrpt_jmhStub:119</text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1144 (2,793 samples, 99.15%)</title><rect x="10.0" y="437" width="1169.9" height="15.0" fill="rgb(234,219,25)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1144</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (29 samples, 1.03%)</title><rect x="750.6" y="53" width="12.1" height="15.0" fill="rgb(228,1,16)" rx="2" ry="2" />
<text  x="753.59" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:701 (13 samples, 0.46%)</title><rect x="859.9" y="37" width="5.5" height="15.0" fill="rgb(221,135,6)" rx="2" ry="2" />
<text  x="862.92" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1539 (1 samples, 0.04%)</title><rect x="596.9" y="69" width="0.4" height="15.0" fill="rgb(231,47,46)" rx="2" ry="2" />
<text  x="599.86" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1562 (8 samples, 0.28%)</title><rect x="711.6" y="69" width="3.4" height="15.0" fill="rgb(211,68,32)" rx="2" ry="2" />
<text  x="714.63" y="79.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.readBytes:-1 (4 samples, 0.14%)</title><rect x="1186.6" y="437" width="1.7" height="15.0" fill="rgb(207,194,0)" rx="2" ry="2" />
<text  x="1189.65" y="447.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:227 (1 samples, 0.04%)</title><rect x="1179.9" y="389" width="0.5" height="15.0" fill="rgb(225,224,18)" rx="2" ry="2" />
<text  x="1182.95" y="399.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (1 samples, 0.04%)</title><rect x="975.9" y="69" width="0.5" height="15.0" fill="rgb(209,124,25)" rx="2" ry="2" />
<text  x="978.95" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1554 (7 samples, 0.25%)</title><rect x="618.2" y="69" width="3.0" height="15.0" fill="rgb(254,145,40)" rx="2" ry="2" />
<text  x="621.22" y="79.5" ></text>
</g>
<g >
<title>sun.nio.fs.WindowsNativeDispatcher.GetVolumePathName:601 (1 samples, 0.04%)</title><rect x="1184.1" y="325" width="0.5" height="15.0" fill="rgb(225,155,39)" rx="2" ry="2" />
<text  x="1187.14" y="335.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.getProperties:73 (1 samples, 0.04%)</title><rect x="1142.2" y="117" width="0.5" height="15.0" fill="rgb(209,165,54)" rx="2" ry="2" />
<text  x="1145.25" y="127.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.dcmd.DCmdStop.execute:57 (1 samples, 0.04%)</title><rect x="1184.1" y="453" width="0.5" height="15.0" fill="rgb(244,165,31)" rx="2" ry="2" />
<text  x="1187.14" y="463.5" ></text>
</g>
<g >
<title>java.nio.file.Files.isAccessible:2567 (1 samples, 0.04%)</title><rect x="1184.1" y="389" width="0.5" height="15.0" fill="rgb(205,167,35)" rx="2" ry="2" />
<text  x="1187.14" y="399.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:162 (13 samples, 0.46%)</title><rect x="924.8" y="101" width="5.5" height="15.0" fill="rgb(252,184,29)" rx="2" ry="2" />
<text  x="927.85" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3181 (9 samples, 0.32%)</title><rect x="932.0" y="85" width="3.7" height="15.0" fill="rgb(234,40,20)" rx="2" ry="2" />
<text  x="934.97" y="95.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:147 (2 samples, 0.07%)</title><rect x="1036.7" y="117" width="0.8" height="15.0" fill="rgb(210,145,0)" rx="2" ry="2" />
<text  x="1039.69" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1094 (1 samples, 0.04%)</title><rect x="62.8" y="101" width="0.4" height="15.0" fill="rgb(247,98,44)" rx="2" ry="2" />
<text  x="65.78" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:397 (2 samples, 0.07%)</title><rect x="904.3" y="53" width="0.9" height="15.0" fill="rgb(227,157,54)" rx="2" ry="2" />
<text  x="907.32" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (36 samples, 1.28%)</title><rect x="984.3" y="85" width="15.1" height="15.0" fill="rgb(234,173,11)" rx="2" ry="2" />
<text  x="987.33" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:405 (2 samples, 0.07%)</title><rect x="908.1" y="53" width="0.8" height="15.0" fill="rgb(228,154,39)" rx="2" ry="2" />
<text  x="911.09" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1612 (2 samples, 0.07%)</title><rect x="784.1" y="69" width="0.8" height="15.0" fill="rgb(247,183,18)" rx="2" ry="2" />
<text  x="787.10" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3181 (1 samples, 0.04%)</title><rect x="950.4" y="85" width="0.4" height="15.0" fill="rgb(244,225,37)" rx="2" ry="2" />
<text  x="953.40" y="95.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:528 (10 samples, 0.35%)</title><rect x="1164.4" y="149" width="4.2" height="15.0" fill="rgb(232,50,14)" rx="2" ry="2" />
<text  x="1167.45" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1208 (7 samples, 0.25%)</title><rect x="417.2" y="85" width="2.9" height="15.0" fill="rgb(225,37,8)" rx="2" ry="2" />
<text  x="420.16" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4203 (1 samples, 0.04%)</title><rect x="180.9" y="149" width="0.4" height="15.0" fill="rgb(210,9,10)" rx="2" ry="2" />
<text  x="183.91" y="159.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.bigIntegerToHex:66 (1 samples, 0.04%)</title><rect x="1189.6" y="469" width="0.4" height="15.0" fill="rgb(219,114,37)" rx="2" ry="2" />
<text  x="1192.58" y="479.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1677 (14 samples, 0.50%)</title><rect x="903.5" y="69" width="5.8" height="15.0" fill="rgb(254,206,29)" rx="2" ry="2" />
<text  x="906.48" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1532 (6 samples, 0.21%)</title><rect x="586.8" y="69" width="2.5" height="15.0" fill="rgb(237,227,47)" rx="2" ry="2" />
<text  x="589.81" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (36 samples, 1.28%)</title><rect x="944.5" y="117" width="15.1" height="15.0" fill="rgb(233,199,14)" rx="2" ry="2" />
<text  x="947.53" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (77 samples, 2.73%)</title><rect x="487.1" y="53" width="32.3" height="15.0" fill="rgb(231,15,36)" rx="2" ry="2" />
<text  x="490.11" y="63.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1105 (9 samples, 0.32%)</title><rect x="63.2" y="101" width="3.8" height="15.0" fill="rgb(234,219,34)" rx="2" ry="2" />
<text  x="66.20" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1527 (2 samples, 0.07%)</title><rect x="580.1" y="69" width="0.8" height="15.0" fill="rgb(239,16,0)" rx="2" ry="2" />
<text  x="583.10" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1205 (8 samples, 0.28%)</title><rect x="56.9" y="117" width="3.4" height="15.0" fill="rgb(235,106,50)" rx="2" ry="2" />
<text  x="59.92" y="127.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.read:293 (3 samples, 0.11%)</title><rect x="1188.3" y="373" width="1.3" height="15.0" fill="rgb(235,204,42)" rx="2" ry="2" />
<text  x="1191.32" y="383.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3182 (4 samples, 0.14%)</title><rect x="935.7" y="85" width="1.7" height="15.0" fill="rgb(216,39,48)" rx="2" ry="2" />
<text  x="938.74" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (14 samples, 0.50%)</title><rect x="744.7" y="53" width="5.9" height="15.0" fill="rgb(246,15,34)" rx="2" ry="2" />
<text  x="747.72" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (18 samples, 0.64%)</title><rect x="557.1" y="53" width="7.5" height="15.0" fill="rgb(253,94,45)" rx="2" ry="2" />
<text  x="560.06" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3822 (1 samples, 0.04%)</title><rect x="1101.6" y="101" width="0.4" height="15.0" fill="rgb(209,59,23)" rx="2" ry="2" />
<text  x="1104.62" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:361 (15 samples, 0.53%)</title><rect x="462.8" y="69" width="6.3" height="15.0" fill="rgb(220,188,50)" rx="2" ry="2" />
<text  x="465.82" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:102 (1 samples, 0.04%)</title><rect x="205.2" y="117" width="0.4" height="15.0" fill="rgb(216,5,53)" rx="2" ry="2" />
<text  x="208.20" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1624 (4 samples, 0.14%)</title><rect x="817.2" y="69" width="1.7" height="15.0" fill="rgb(239,140,53)" rx="2" ry="2" />
<text  x="820.19" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (4 samples, 0.14%)</title><rect x="1088.6" y="85" width="1.7" height="15.0" fill="rgb(208,39,27)" rx="2" ry="2" />
<text  x="1091.63" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1553 (12 samples, 0.43%)</title><rect x="613.2" y="69" width="5.0" height="15.0" fill="rgb(237,216,43)" rx="2" ry="2" />
<text  x="616.19" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (18 samples, 0.64%)</title><rect x="880.4" y="53" width="7.6" height="15.0" fill="rgb(249,36,23)" rx="2" ry="2" />
<text  x="883.44" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (10 samples, 0.35%)</title><rect x="937.4" y="101" width="4.2" height="15.0" fill="rgb(253,161,31)" rx="2" ry="2" />
<text  x="940.41" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1183 (81 samples, 2.88%)</title><rect x="355.2" y="85" width="33.9" height="15.0" fill="rgb(207,209,26)" rx="2" ry="2" />
<text  x="358.16" y="95.5" >ja..</text>
</g>
<g >
<title>java.math.BigInteger.padWithZeros:4112 (12 samples, 0.43%)</title><rect x="969.7" y="117" width="5.0" height="15.0" fill="rgb(224,153,46)" rx="2" ry="2" />
<text  x="972.67" y="127.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:164 (17 samples, 0.60%)</title><rect x="1064.3" y="117" width="7.2" height="15.0" fill="rgb(231,187,50)" rx="2" ry="2" />
<text  x="1067.33" y="127.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.readBytes:-1 (3 samples, 0.11%)</title><rect x="1188.3" y="357" width="1.3" height="15.0" fill="rgb(235,47,51)" rx="2" ry="2" />
<text  x="1191.32" y="367.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1621 (2 samples, 0.07%)</title><rect x="789.5" y="69" width="0.9" height="15.0" fill="rgb(219,47,54)" rx="2" ry="2" />
<text  x="792.55" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:397 (2 samples, 0.07%)</title><rect x="879.6" y="53" width="0.8" height="15.0" fill="rgb(236,58,9)" rx="2" ry="2" />
<text  x="882.61" y="63.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:250 (3 samples, 0.11%)</title><rect x="1161.5" y="133" width="1.3" height="15.0" fill="rgb(226,198,13)" rx="2" ry="2" />
<text  x="1164.52" y="143.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (4 samples, 0.14%)</title><rect x="1096.6" y="101" width="1.7" height="15.0" fill="rgb(244,58,38)" rx="2" ry="2" />
<text  x="1099.59" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1563 (8 samples, 0.28%)</title><rect x="715.0" y="69" width="3.3" height="15.0" fill="rgb(224,175,37)" rx="2" ry="2" />
<text  x="717.98" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:248 (4 samples, 0.14%)</title><rect x="412.5" y="69" width="1.7" height="15.0" fill="rgb(219,228,16)" rx="2" ry="2" />
<text  x="415.55" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (62 samples, 2.20%)</title><rect x="1038.4" y="117" width="25.9" height="15.0" fill="rgb(252,154,36)" rx="2" ry="2" />
<text  x="1041.36" y="127.5" >j..</text>
</g>
<g >
<title>java.lang.String.isLatin1:4567 (4 samples, 0.14%)</title><rect x="1139.3" y="149" width="1.7" height="15.0" fill="rgb(222,103,5)" rx="2" ry="2" />
<text  x="1142.31" y="159.5" ></text>
</g>
<g >
<title>sun.nio.fs.WindowsFileStore.create:93 (1 samples, 0.04%)</title><rect x="1184.1" y="357" width="0.5" height="15.0" fill="rgb(215,72,44)" rx="2" ry="2" />
<text  x="1187.14" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.util.ArraysSupport.newLength:638 (1 samples, 0.04%)</title><rect x="981.8" y="53" width="0.4" height="15.0" fill="rgb(247,35,44)" rx="2" ry="2" />
<text  x="984.81" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:362 (1 samples, 0.04%)</title><rect x="469.1" y="69" width="0.4" height="15.0" fill="rgb(242,130,1)" rx="2" ry="2" />
<text  x="472.10" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (10 samples, 0.35%)</title><rect x="1086.1" y="101" width="4.2" height="15.0" fill="rgb(210,143,44)" rx="2" ry="2" />
<text  x="1089.12" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4131 (3 samples, 0.11%)</title><rect x="183.0" y="133" width="1.3" height="15.0" fill="rgb(245,209,16)" rx="2" ry="2" />
<text  x="186.00" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4148 (30 samples, 1.06%)</title><rect x="204.8" y="133" width="12.5" height="15.0" fill="rgb(215,164,25)" rx="2" ry="2" />
<text  x="207.78" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1526 (3 samples, 0.11%)</title><rect x="578.8" y="69" width="1.3" height="15.0" fill="rgb(247,207,37)" rx="2" ry="2" />
<text  x="581.85" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1467 (4 samples, 0.14%)</title><rect x="485.4" y="53" width="1.7" height="15.0" fill="rgb(211,39,24)" rx="2" ry="2" />
<text  x="488.43" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1496 (4 samples, 0.14%)</title><rect x="539.5" y="69" width="1.6" height="15.0" fill="rgb(228,111,3)" rx="2" ry="2" />
<text  x="542.47" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:543 (1 samples, 0.04%)</title><rect x="848.6" y="53" width="0.4" height="15.0" fill="rgb(232,177,16)" rx="2" ry="2" />
<text  x="851.61" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1497 (2 samples, 0.07%)</title><rect x="541.1" y="69" width="0.9" height="15.0" fill="rgb(249,226,39)" rx="2" ry="2" />
<text  x="544.15" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:406 (3 samples, 0.11%)</title><rect x="902.2" y="53" width="1.3" height="15.0" fill="rgb(248,45,14)" rx="2" ry="2" />
<text  x="905.23" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (18 samples, 0.64%)</title><rect x="427.2" y="69" width="7.5" height="15.0" fill="rgb(251,120,30)" rx="2" ry="2" />
<text  x="430.21" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.length:1499 (2 samples, 0.07%)</title><rect x="975.5" y="85" width="0.9" height="15.0" fill="rgb(220,152,14)" rx="2" ry="2" />
<text  x="978.53" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:552 (57 samples, 2.02%)</title><rect x="854.5" y="53" width="23.8" height="15.0" fill="rgb(218,140,47)" rx="2" ry="2" />
<text  x="857.47" y="63.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1220 (84 samples, 2.98%)</title><rect x="435.2" y="85" width="35.2" height="15.0" fill="rgb(230,174,11)" rx="2" ry="2" />
<text  x="438.17" y="95.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:165 (4 samples, 0.14%)</title><rect x="950.4" y="101" width="1.7" height="15.0" fill="rgb(248,124,27)" rx="2" ry="2" />
<text  x="953.40" y="111.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.read1:310 (3 samples, 0.11%)</title><rect x="1188.3" y="405" width="1.3" height="15.0" fill="rgb(220,98,12)" rx="2" ry="2" />
<text  x="1191.32" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (16 samples, 0.57%)</title><rect x="46.4" y="133" width="6.7" height="15.0" fill="rgb(222,85,0)" rx="2" ry="2" />
<text  x="49.44" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (4 samples, 0.14%)</title><rect x="905.2" y="53" width="1.6" height="15.0" fill="rgb(233,27,17)" rx="2" ry="2" />
<text  x="908.16" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1141 (1 samples, 0.04%)</title><rect x="947.5" y="101" width="0.4" height="15.0" fill="rgb(247,193,3)" rx="2" ry="2" />
<text  x="950.47" y="111.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:518 (4 samples, 0.14%)</title><rect x="1143.1" y="149" width="1.7" height="15.0" fill="rgb(215,10,18)" rx="2" ry="2" />
<text  x="1146.08" y="159.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (111 samples, 3.94%)</title><rect x="975.5" y="117" width="46.5" height="15.0" fill="rgb(211,131,27)" rx="2" ry="2" />
<text  x="978.53" y="127.5" >java..</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (12 samples, 0.43%)</title><rect x="827.7" y="53" width="5.0" height="15.0" fill="rgb(207,107,25)" rx="2" ry="2" />
<text  x="830.66" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (10 samples, 0.35%)</title><rect x="138.6" y="85" width="4.2" height="15.0" fill="rgb(251,59,14)" rx="2" ry="2" />
<text  x="141.60" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1196 (2 samples, 0.07%)</title><rect x="56.1" y="117" width="0.8" height="15.0" fill="rgb(248,56,43)" rx="2" ry="2" />
<text  x="59.08" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1232 (1,048 samples, 37.20%)</title><rect x="470.4" y="85" width="438.9" height="15.0" fill="rgb(237,149,17)" rx="2" ry="2" />
<text  x="473.35" y="95.5" >java.math.MutableBigInteger.divideKnuth:1232</text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4133 (7 samples, 0.25%)</title><rect x="184.3" y="133" width="2.9" height="15.0" fill="rgb(244,164,12)" rx="2" ry="2" />
<text  x="187.26" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1613 (5 samples, 0.18%)</title><rect x="784.9" y="69" width="2.1" height="15.0" fill="rgb(233,162,16)" rx="2" ry="2" />
<text  x="787.94" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1492 (13 samples, 0.46%)</title><rect x="478.7" y="69" width="5.5" height="15.0" fill="rgb(242,205,4)" rx="2" ry="2" />
<text  x="481.73" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (23 samples, 0.82%)</title><rect x="1076.5" y="101" width="9.6" height="15.0" fill="rgb(206,17,16)" rx="2" ry="2" />
<text  x="1079.48" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.mod:2826 (2 samples, 0.07%)</title><rect x="45.6" y="181" width="0.8" height="15.0" fill="rgb(246,101,53)" rx="2" ry="2" />
<text  x="48.61" y="191.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedRunner.run:72 (5 samples, 0.18%)</title><rect x="1184.6" y="453" width="2.0" height="15.0" fill="rgb(206,145,14)" rx="2" ry="2" />
<text  x="1187.55" y="463.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (15 samples, 0.53%)</title><rect x="762.7" y="53" width="6.3" height="15.0" fill="rgb(226,221,2)" rx="2" ry="2" />
<text  x="765.74" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1187 (2 samples, 0.07%)</title><rect x="55.2" y="117" width="0.9" height="15.0" fill="rgb(239,114,48)" rx="2" ry="2" />
<text  x="58.24" y="127.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (3 samples, 0.11%)</title><rect x="408.4" y="53" width="1.2" height="15.0" fill="rgb(209,119,31)" rx="2" ry="2" />
<text  x="411.36" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (9 samples, 0.32%)</title><rect x="843.2" y="53" width="3.7" height="15.0" fill="rgb(249,76,42)" rx="2" ry="2" />
<text  x="846.16" y="63.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_Throughput:83 (2,793 samples, 99.15%)</title><rect x="10.0" y="245" width="1169.9" height="15.0" fill="rgb(230,68,51)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_Throughput:83</text>
</g>
<g >
<title>java.lang.Long.toString:164 (8 samples, 0.28%)</title><rect x="965.5" y="117" width="3.3" height="15.0" fill="rgb(226,76,54)" rx="2" ry="2" />
<text  x="968.48" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4155 (4 samples, 0.14%)</title><rect x="959.6" y="133" width="1.7" height="15.0" fill="rgb(249,76,20)" rx="2" ry="2" />
<text  x="962.61" y="143.5" ></text>
</g>
<g >
<title>jdk.jfr.Recording.setDestination:478 (1 samples, 0.04%)</title><rect x="1184.1" y="437" width="0.5" height="15.0" fill="rgb(240,147,7)" rx="2" ry="2" />
<text  x="1187.14" y="447.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (5 samples, 0.18%)</title><rect x="1086.5" y="69" width="2.1" height="15.0" fill="rgb(215,149,29)" rx="2" ry="2" />
<text  x="1089.54" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:146 (1 samples, 0.04%)</title><rect x="1036.3" y="117" width="0.4" height="15.0" fill="rgb(239,163,4)" rx="2" ry="2" />
<text  x="1039.27" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:102 (13 samples, 0.46%)</title><rect x="421.8" y="69" width="5.4" height="15.0" fill="rgb(226,74,52)" rx="2" ry="2" />
<text  x="424.76" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (1 samples, 0.04%)</title><rect x="540.7" y="53" width="0.4" height="15.0" fill="rgb(224,181,19)" rx="2" ry="2" />
<text  x="543.73" y="63.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitForInterruptibly:-1 (4 samples, 0.14%)</title><rect x="1185.0" y="277" width="1.6" height="15.0" fill="rgb(242,148,50)" rx="2" ry="2" />
<text  x="1187.97" y="287.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$MH+0x0000000800116c00.2135476918.invokeExact_MT:-1 (2,793 samples, 99.15%)</title><rect x="10.0" y="293" width="1169.9" height="15.0" fill="rgb(224,41,31)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >java.lang.invoke.LambdaForm$MH+0x0000000800116c00.2135476918.invokeExact_MT:-1</text>
</g>
<g >
<title>java.math.MutableBigInteger.compare:266 (5 samples, 0.18%)</title><rect x="389.9" y="69" width="2.1" height="15.0" fill="rgb(240,72,9)" rx="2" ry="2" />
<text  x="392.93" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (2 samples, 0.07%)</title><rect x="142.8" y="101" width="0.8" height="15.0" fill="rgb(249,22,43)" rx="2" ry="2" />
<text  x="145.79" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2492 (2 samples, 0.07%)</title><rect x="53.6" y="149" width="0.8" height="15.0" fill="rgb(235,165,6)" rx="2" ry="2" />
<text  x="56.56" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (5 samples, 0.18%)</title><rect x="344.7" y="117" width="2.1" height="15.0" fill="rgb(237,59,30)" rx="2" ry="2" />
<text  x="347.69" y="127.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (2 samples, 0.07%)</title><rect x="1089.5" y="69" width="0.8" height="15.0" fill="rgb(246,154,45)" rx="2" ry="2" />
<text  x="1092.47" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1511 (17 samples, 0.60%)</title><rect x="567.5" y="69" width="7.2" height="15.0" fill="rgb(241,222,7)" rx="2" ry="2" />
<text  x="570.54" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4172 (110 samples, 3.90%)</title><rect x="1025.4" y="133" width="46.1" height="15.0" fill="rgb(226,134,46)" rx="2" ry="2" />
<text  x="1028.38" y="143.5" >java..</text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$MH+0x0000000800116800.660380052.invoke:-1 (2,793 samples, 99.15%)</title><rect x="10.0" y="277" width="1169.9" height="15.0" fill="rgb(253,20,48)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >java.lang.invoke.LambdaForm$MH+0x0000000800116800.660380052.invoke:-1</text>
</g>
<g >
<title>jdk.jfr.internal.dcmd.AbstractDCmd.execute:87 (1 samples, 0.04%)</title><rect x="1184.1" y="469" width="0.5" height="15.0" fill="rgb(213,2,39)" rx="2" ry="2" />
<text  x="1187.14" y="479.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1466 (3 samples, 0.11%)</title><rect x="484.2" y="53" width="1.2" height="15.0" fill="rgb(246,62,9)" rx="2" ry="2" />
<text  x="487.18" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1119 (1 samples, 0.04%)</title><rect x="75.8" y="101" width="0.4" height="15.0" fill="rgb(253,118,52)" rx="2" ry="2" />
<text  x="78.76" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (2 samples, 0.07%)</title><rect x="346.8" y="117" width="0.8" height="15.0" fill="rgb(252,37,40)" rx="2" ry="2" />
<text  x="349.78" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.toString:453 (27 samples, 0.96%)</title><rect x="1090.7" y="149" width="11.3" height="15.0" fill="rgb(224,165,45)" rx="2" ry="2" />
<text  x="1093.72" y="159.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (5 samples, 0.18%)</title><rect x="997.3" y="53" width="2.1" height="15.0" fill="rgb(234,107,49)" rx="2" ry="2" />
<text  x="1000.31" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (8 samples, 0.28%)</title><rect x="838.6" y="53" width="3.3" height="15.0" fill="rgb(223,121,10)" rx="2" ry="2" />
<text  x="841.56" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3538 (8 samples, 0.28%)</title><rect x="978.0" y="69" width="3.4" height="15.0" fill="rgb(228,9,4)" rx="2" ry="2" />
<text  x="981.04" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1126 (4 samples, 0.14%)</title><rect x="81.2" y="101" width="1.7" height="15.0" fill="rgb(217,220,14)" rx="2" ry="2" />
<text  x="84.21" y="111.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitForInterruptibly:-1 (1 samples, 0.04%)</title><rect x="1184.6" y="277" width="0.4" height="15.0" fill="rgb(241,27,28)" rx="2" ry="2" />
<text  x="1187.55" y="287.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (2 samples, 0.07%)</title><rect x="397.9" y="53" width="0.8" height="15.0" fill="rgb(228,5,35)" rx="2" ry="2" />
<text  x="400.89" y="63.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:247 (2 samples, 0.07%)</title><rect x="1156.5" y="133" width="0.8" height="15.0" fill="rgb(234,1,34)" rx="2" ry="2" />
<text  x="1159.49" y="143.5" ></text>
</g>
<g >
<title>sun.security.ec.ECPublicKeyImpl.getW:84 (2 samples, 0.07%)</title><rect x="19.6" y="181" width="0.9" height="15.0" fill="rgb(209,132,35)" rx="2" ry="2" />
<text  x="22.63" y="191.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:1487 (22 samples, 0.78%)</title><rect x="1092.8" y="133" width="9.2" height="15.0" fill="rgb(212,59,30)" rx="2" ry="2" />
<text  x="1095.82" y="143.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:525 (5 samples, 0.18%)</title><rect x="1146.4" y="149" width="2.1" height="15.0" fill="rgb(220,160,36)" rx="2" ry="2" />
<text  x="1149.44" y="159.5" ></text>
</g>
<g >
<title>java.lang.String.toUpperCase:3487 (126 samples, 4.47%)</title><rect x="1126.3" y="165" width="52.8" height="15.0" fill="rgb(253,109,50)" rx="2" ry="2" />
<text  x="1129.33" y="175.5" >java...</text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (1 samples, 0.04%)</title><rect x="1178.7" y="117" width="0.4" height="15.0" fill="rgb(207,36,1)" rx="2" ry="2" />
<text  x="1181.69" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1141 (2 samples, 0.07%)</title><rect x="924.0" y="101" width="0.8" height="15.0" fill="rgb(222,211,48)" rx="2" ry="2" />
<text  x="927.01" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1190 (4 samples, 0.14%)</title><rect x="144.9" y="181" width="1.7" height="15.0" fill="rgb(220,198,14)" rx="2" ry="2" />
<text  x="147.88" y="191.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:651 (3 samples, 0.11%)</title><rect x="779.5" y="53" width="1.2" height="15.0" fill="rgb(216,192,28)" rx="2" ry="2" />
<text  x="782.49" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4152 (78 samples, 2.77%)</title><rect x="909.3" y="133" width="32.7" height="15.0" fill="rgb(213,190,40)" rx="2" ry="2" />
<text  x="912.35" y="143.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1491 (5 samples, 0.18%)</title><rect x="476.6" y="69" width="2.1" height="15.0" fill="rgb(234,75,50)" rx="2" ry="2" />
<text  x="479.64" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.doPeriodic:189 (10 samples, 0.35%)</title><rect x="1179.9" y="405" width="4.2" height="15.0" fill="rgb(226,113,27)" rx="2" ry="2" />
<text  x="1182.95" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.compare:268 (9 samples, 0.32%)</title><rect x="392.0" y="69" width="3.8" height="15.0" fill="rgb(254,152,30)" rx="2" ry="2" />
<text  x="395.02" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:170 (1 samples, 0.04%)</title><rect x="941.6" y="101" width="0.4" height="15.0" fill="rgb(231,124,46)" rx="2" ry="2" />
<text  x="944.60" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (28 samples, 0.99%)</title><rect x="205.6" y="117" width="11.7" height="15.0" fill="rgb(251,78,51)" rx="2" ry="2" />
<text  x="208.62" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (8 samples, 0.28%)</title><rect x="920.7" y="101" width="3.3" height="15.0" fill="rgb(235,167,46)" rx="2" ry="2" />
<text  x="923.66" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1523 (5 samples, 0.18%)</title><rect x="576.8" y="69" width="2.0" height="15.0" fill="rgb(254,106,27)" rx="2" ry="2" />
<text  x="579.75" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1616 (3 samples, 0.11%)</title><rect x="788.3" y="69" width="1.2" height="15.0" fill="rgb(219,118,9)" rx="2" ry="2" />
<text  x="791.29" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (1 samples, 0.04%)</title><rect x="54.0" y="133" width="0.4" height="15.0" fill="rgb(252,20,15)" rx="2" ry="2" />
<text  x="56.98" y="143.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:281 (5 samples, 0.18%)</title><rect x="1184.6" y="389" width="2.0" height="15.0" fill="rgb(236,193,11)" rx="2" ry="2" />
<text  x="1187.55" y="399.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.JVM.emitEvent:-1 (9 samples, 0.32%)</title><rect x="1180.4" y="357" width="3.7" height="15.0" fill="rgb(225,181,23)" rx="2" ry="2" />
<text  x="1183.37" y="367.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1510 (4 samples, 0.14%)</title><rect x="565.9" y="69" width="1.6" height="15.0" fill="rgb(250,60,0)" rx="2" ry="2" />
<text  x="568.86" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (17 samples, 0.60%)</title><rect x="1064.3" y="101" width="7.2" height="15.0" fill="rgb(238,178,7)" rx="2" ry="2" />
<text  x="1067.33" y="111.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:317 (2,793 samples, 99.15%)</title><rect x="10.0" y="389" width="1169.9" height="15.0" fill="rgb(206,132,18)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >java.util.concurrent.FutureTask.run:317</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:259 (1 samples, 0.04%)</title><rect x="1081.5" y="69" width="0.4" height="15.0" fill="rgb(220,130,37)" rx="2" ry="2" />
<text  x="1084.51" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4153 (42 samples, 1.49%)</title><rect x="942.0" y="133" width="17.6" height="15.0" fill="rgb(220,90,46)" rx="2" ry="2" />
<text  x="945.02" y="143.5" ></text>
</g>
<g >
<title>org.sample.BenchmarkPublicKeys.sm2p256v1_compressed:21 (2,791 samples, 99.08%)</title><rect x="10.0" y="213" width="1169.1" height="15.0" fill="rgb(231,125,49)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >org.sample.BenchmarkPublicKeys.sm2p256v1_compressed:21</text>
</g>
<g >
<title>jdk.internal.util.ArraysSupport.newLength:638 (1 samples, 0.04%)</title><rect x="1083.2" y="53" width="0.4" height="15.0" fill="rgb(207,153,28)" rx="2" ry="2" />
<text  x="1086.18" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1138 (1 samples, 0.04%)</title><rect x="946.6" y="101" width="0.4" height="15.0" fill="rgb(235,145,15)" rx="2" ry="2" />
<text  x="949.63" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:364 (2 samples, 0.07%)</title><rect x="469.5" y="69" width="0.9" height="15.0" fill="rgb(216,64,10)" rx="2" ry="2" />
<text  x="472.52" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1192 (18 samples, 0.64%)</title><rect x="146.6" y="181" width="7.5" height="15.0" fill="rgb(223,222,36)" rx="2" ry="2" />
<text  x="149.56" y="191.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.Utils.tryWith:507 (4 samples, 0.14%)</title><rect x="1185.0" y="309" width="1.6" height="15.0" fill="rgb(253,178,19)" rx="2" ry="2" />
<text  x="1187.97" y="319.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (23 samples, 0.82%)</title><rect x="989.8" y="69" width="9.6" height="15.0" fill="rgb(221,130,1)" rx="2" ry="2" />
<text  x="992.77" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:650 (3 samples, 0.11%)</title><rect x="841.9" y="53" width="1.3" height="15.0" fill="rgb(227,61,26)" rx="2" ry="2" />
<text  x="844.91" y="63.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (6 samples, 0.21%)</title><rect x="342.2" y="101" width="2.5" height="15.0" fill="rgb(252,135,17)" rx="2" ry="2" />
<text  x="345.18" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1128 (11 samples, 0.39%)</title><rect x="134.0" y="101" width="4.6" height="15.0" fill="rgb(244,40,31)" rx="2" ry="2" />
<text  x="136.99" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1557 (9 samples, 0.32%)</title><rect x="707.9" y="69" width="3.7" height="15.0" fill="rgb(218,60,52)" rx="2" ry="2" />
<text  x="710.86" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:531 (8 samples, 0.28%)</title><rect x="1168.6" y="149" width="3.4" height="15.0" fill="rgb(220,194,37)" rx="2" ry="2" />
<text  x="1171.64" y="159.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.bigIntegerToHex:66 (2,259 samples, 80.19%)</title><rect x="155.8" y="181" width="946.2" height="15.0" fill="rgb(223,146,26)" rx="2" ry="2" />
<text  x="158.77" y="191.5" >org.sample.SM2Util.bigIntegerToHex:66</text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:170 (2 samples, 0.07%)</title><rect x="958.8" y="101" width="0.8" height="15.0" fill="rgb(218,22,34)" rx="2" ry="2" />
<text  x="961.78" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1207 (7 samples, 0.25%)</title><rect x="414.2" y="85" width="3.0" height="15.0" fill="rgb(224,60,48)" rx="2" ry="2" />
<text  x="417.22" y="95.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:523 (1 samples, 0.04%)</title><rect x="1146.0" y="149" width="0.4" height="15.0" fill="rgb(233,185,3)" rx="2" ry="2" />
<text  x="1149.02" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1594 (9 samples, 0.32%)</title><rect x="741.0" y="69" width="3.7" height="15.0" fill="rgb(222,47,40)" rx="2" ry="2" />
<text  x="743.95" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4160 (18 samples, 0.64%)</title><rect x="961.3" y="133" width="7.5" height="15.0" fill="rgb(207,181,11)" rx="2" ry="2" />
<text  x="964.29" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (4 samples, 0.14%)</title><rect x="1081.9" y="69" width="1.7" height="15.0" fill="rgb(232,217,45)" rx="2" ry="2" />
<text  x="1084.93" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1675 (60 samples, 2.13%)</title><rect x="878.3" y="69" width="25.2" height="15.0" fill="rgb(211,85,53)" rx="2" ry="2" />
<text  x="881.35" y="79.5" >j..</text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (1 samples, 0.04%)</title><rect x="931.1" y="85" width="0.4" height="15.0" fill="rgb(254,26,2)" rx="2" ry="2" />
<text  x="934.13" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4177 (45 samples, 1.60%)</title><rect x="1071.5" y="133" width="18.8" height="15.0" fill="rgb(210,17,3)" rx="2" ry="2" />
<text  x="1074.46" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1168 (214 samples, 7.60%)</title><rect x="54.4" y="133" width="89.6" height="15.0" fill="rgb(217,224,15)" rx="2" ry="2" />
<text  x="57.40" y="143.5" >java.math...</text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1152 (1,335 samples, 47.39%)</title><rect x="350.1" y="117" width="559.2" height="15.0" fill="rgb(229,84,31)" rx="2" ry="2" />
<text  x="353.13" y="127.5" >java.math.MutableBigInteger.divide:1152</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:139 (2 samples, 0.07%)</title><rect x="397.9" y="69" width="0.8" height="15.0" fill="rgb(236,118,24)" rx="2" ry="2" />
<text  x="400.89" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:703 (11 samples, 0.39%)</title><rect x="873.7" y="37" width="4.6" height="15.0" fill="rgb(223,190,22)" rx="2" ry="2" />
<text  x="876.74" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (29 samples, 1.03%)</title><rect x="273.5" y="117" width="12.1" height="15.0" fill="rgb(247,144,46)" rx="2" ry="2" />
<text  x="276.48" y="127.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl:156 (2,793 samples, 99.15%)</title><rect x="10.0" y="309" width="1169.9" height="15.0" fill="rgb(236,90,22)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl:156</text>
</g>
<g >
<title>java.lang.String.toUpperCase:3511 (143 samples, 5.08%)</title><rect x="1119.2" y="181" width="59.9" height="15.0" fill="rgb(234,94,42)" rx="2" ry="2" />
<text  x="1122.21" y="191.5" >java.l..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1205 (6 samples, 0.21%)</title><rect x="411.7" y="85" width="2.5" height="15.0" fill="rgb(233,140,23)" rx="2" ry="2" />
<text  x="414.71" y="95.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4555 (1 samples, 0.04%)</title><rect x="1068.1" y="85" width="0.4" height="15.0" fill="rgb(222,157,25)" rx="2" ry="2" />
<text  x="1071.10" y="95.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:247 (1 samples, 0.04%)</title><rect x="1142.2" y="133" width="0.5" height="15.0" fill="rgb(239,75,50)" rx="2" ry="2" />
<text  x="1145.25" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1529 (1 samples, 0.04%)</title><rect x="585.5" y="69" width="0.5" height="15.0" fill="rgb(215,207,27)" rx="2" ry="2" />
<text  x="588.55" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:155 (2 samples, 0.07%)</title><rect x="1037.5" y="117" width="0.9" height="15.0" fill="rgb(225,216,16)" rx="2" ry="2" />
<text  x="1040.53" y="127.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKey:48 (179 samples, 6.35%)</title><rect x="1104.1" y="197" width="75.0" height="15.0" fill="rgb(211,125,10)" rx="2" ry="2" />
<text  x="1107.13" y="207.5" >org.samp..</text>
</g>
<g >
<title>sun.nio.fs.WindowsFileSystemProvider.checkAccess:425 (1 samples, 0.04%)</title><rect x="1184.1" y="373" width="0.5" height="15.0" fill="rgb(242,108,49)" rx="2" ry="2" />
<text  x="1187.14" y="383.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1502 (1 samples, 0.04%)</title><rect x="565.4" y="69" width="0.5" height="15.0" fill="rgb(218,104,43)" rx="2" ry="2" />
<text  x="568.44" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:512 (1 samples, 0.04%)</title><rect x="1142.7" y="149" width="0.4" height="15.0" fill="rgb(236,15,35)" rx="2" ry="2" />
<text  x="1145.67" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4139 (28 samples, 0.99%)</title><rect x="187.2" y="133" width="11.7" height="15.0" fill="rgb(233,137,32)" rx="2" ry="2" />
<text  x="190.19" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:550 (10 samples, 0.35%)</title><rect x="849.9" y="53" width="4.2" height="15.0" fill="rgb(209,126,51)" rx="2" ry="2" />
<text  x="852.87" y="63.5" ></text>
</g>
<g >
<title>sun.nio.fs.WindowsFileStore.createFromPath:115 (1 samples, 0.04%)</title><rect x="1184.1" y="341" width="0.5" height="15.0" fill="rgb(208,149,27)" rx="2" ry="2" />
<text  x="1187.14" y="351.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:143 (11 samples, 0.39%)</title><rect x="1031.7" y="117" width="4.6" height="15.0" fill="rgb(248,17,21)" rx="2" ry="2" />
<text  x="1034.66" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:356 (1 samples, 0.04%)</title><rect x="437.3" y="69" width="0.4" height="15.0" fill="rgb(225,8,31)" rx="2" ry="2" />
<text  x="440.26" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:248 (4 samples, 0.14%)</title><rect x="57.3" y="101" width="1.7" height="15.0" fill="rgb(211,53,52)" rx="2" ry="2" />
<text  x="60.33" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (1 samples, 0.04%)</title><rect x="144.0" y="133" width="0.5" height="15.0" fill="rgb(234,164,26)" rx="2" ry="2" />
<text  x="147.04" y="143.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:156 (2 samples, 0.07%)</title><rect x="962.5" y="117" width="0.9" height="15.0" fill="rgb(243,17,6)" rx="2" ry="2" />
<text  x="965.55" y="127.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.Utils.tryWith:507 (1 samples, 0.04%)</title><rect x="1184.6" y="309" width="0.4" height="15.0" fill="rgb(209,203,34)" rx="2" ry="2" />
<text  x="1187.55" y="319.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.fill:255 (3 samples, 0.11%)</title><rect x="1188.3" y="389" width="1.3" height="15.0" fill="rgb(242,202,44)" rx="2" ry="2" />
<text  x="1191.32" y="399.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1106 (1 samples, 0.04%)</title><rect x="67.0" y="101" width="0.4" height="15.0" fill="rgb(217,176,2)" rx="2" ry="2" />
<text  x="69.97" y="111.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.WriteableUserPath.&lt;init&gt;:65 (1 samples, 0.04%)</title><rect x="1184.1" y="421" width="0.5" height="15.0" fill="rgb(245,116,25)" rx="2" ry="2" />
<text  x="1187.14" y="431.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1579 (20 samples, 0.71%)</title><rect x="728.8" y="69" width="8.4" height="15.0" fill="rgb(210,72,15)" rx="2" ry="2" />
<text  x="731.81" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (5 samples, 0.18%)</title><rect x="909.3" y="117" width="2.1" height="15.0" fill="rgb(213,23,39)" rx="2" ry="2" />
<text  x="912.35" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1536 (2 samples, 0.07%)</title><rect x="589.3" y="69" width="0.9" height="15.0" fill="rgb(214,107,50)" rx="2" ry="2" />
<text  x="592.32" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1473 (1 samples, 0.04%)</title><rect x="564.6" y="53" width="0.4" height="15.0" fill="rgb(245,89,32)" rx="2" ry="2" />
<text  x="567.60" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1634 (12 samples, 0.43%)</title><rect x="818.9" y="69" width="5.0" height="15.0" fill="rgb(253,174,30)" rx="2" ry="2" />
<text  x="821.87" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1486 (11 samples, 0.39%)</title><rect x="471.6" y="69" width="4.6" height="15.0" fill="rgb(239,188,23)" rx="2" ry="2" />
<text  x="474.61" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:511 (1 samples, 0.04%)</title><rect x="1142.2" y="149" width="0.5" height="15.0" fill="rgb(225,169,38)" rx="2" ry="2" />
<text  x="1145.25" y="159.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:252 (2 samples, 0.07%)</title><rect x="1162.8" y="133" width="0.8" height="15.0" fill="rgb(223,202,0)" rx="2" ry="2" />
<text  x="1165.77" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4099 (2,228 samples, 79.09%)</title><rect x="157.0" y="165" width="933.3" height="15.0" fill="rgb(251,213,23)" rx="2" ry="2" />
<text  x="160.03" y="175.5" >java.math.BigInteger.toString:4099</text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1467 (2 samples, 0.07%)</title><rect x="544.5" y="53" width="0.8" height="15.0" fill="rgb(226,200,41)" rx="2" ry="2" />
<text  x="547.50" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4529 (10 samples, 0.35%)</title><rect x="1094.1" y="117" width="4.2" height="15.0" fill="rgb(233,113,16)" rx="2" ry="2" />
<text  x="1097.08" y="127.5" ></text>
</g>
<g >
<title>java.util.Locale.getLanguage:1299 (4 samples, 0.14%)</title><rect x="1143.1" y="133" width="1.7" height="15.0" fill="rgb(243,171,18)" rx="2" ry="2" />
<text  x="1146.08" y="143.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_thrpt_jmhStub:121 (1 samples, 0.04%)</title><rect x="1179.5" y="229" width="0.4" height="15.0" fill="rgb(212,134,2)" rx="2" ry="2" />
<text  x="1182.53" y="239.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1577 (1 samples, 0.04%)</title><rect x="718.3" y="69" width="0.5" height="15.0" fill="rgb(237,10,34)" rx="2" ry="2" />
<text  x="721.34" y="79.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:642 (2,793 samples, 99.15%)</title><rect x="10.0" y="453" width="1169.9" height="15.0" fill="rgb(225,29,46)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:642</text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder$$Lambda$114+0x000000080017e828.59178272.run:-1 (10 samples, 0.35%)</title><rect x="1179.9" y="453" width="4.2" height="15.0" fill="rgb(247,136,8)" rx="2" ry="2" />
<text  x="1182.95" y="463.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKey:37 (22 samples, 0.78%)</title><rect x="10.0" y="197" width="9.2" height="15.0" fill="rgb(253,158,24)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:577 (2,793 samples, 99.15%)</title><rect x="10.0" y="405" width="1169.9" height="15.0" fill="rgb(206,143,42)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >java.util.concurrent.Executors$RunnableAdapter.call:577</text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:551 (1 samples, 0.04%)</title><rect x="854.1" y="53" width="0.4" height="15.0" fill="rgb(226,225,11)" rx="2" ry="2" />
<text  x="857.05" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3892 (2 samples, 0.07%)</title><rect x="407.5" y="53" width="0.9" height="15.0" fill="rgb(209,111,51)" rx="2" ry="2" />
<text  x="410.52" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.afterIteration:146 (4 samples, 0.14%)</title><rect x="1185.0" y="341" width="1.6" height="15.0" fill="rgb(249,208,11)" rx="2" ry="2" />
<text  x="1187.97" y="351.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (1 samples, 0.04%)</title><rect x="947.0" y="101" width="0.5" height="15.0" fill="rgb(219,185,7)" rx="2" ry="2" />
<text  x="950.05" y="111.5" ></text>
</g>
<g >
<title>java.lang.Number.&lt;init&gt;:59 (1 samples, 0.04%)</title><rect x="946.6" y="85" width="0.4" height="15.0" fill="rgb(235,2,40)" rx="2" ry="2" />
<text  x="949.63" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1123 (7 samples, 0.25%)</title><rect x="78.3" y="101" width="2.9" height="15.0" fill="rgb(226,13,43)" rx="2" ry="2" />
<text  x="81.28" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4534 (9 samples, 0.32%)</title><rect x="1098.3" y="117" width="3.7" height="15.0" fill="rgb(237,93,35)" rx="2" ry="2" />
<text  x="1101.26" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:391 (3 samples, 0.11%)</title><rect x="878.3" y="53" width="1.3" height="15.0" fill="rgb(231,124,18)" rx="2" ry="2" />
<text  x="881.35" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3182 (3 samples, 0.11%)</title><rect x="950.8" y="85" width="1.3" height="15.0" fill="rgb(218,200,1)" rx="2" ry="2" />
<text  x="953.82" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1578 (24 samples, 0.85%)</title><rect x="718.8" y="69" width="10.0" height="15.0" fill="rgb(249,19,13)" rx="2" ry="2" />
<text  x="721.75" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:396 (2 samples, 0.07%)</title><rect x="903.5" y="53" width="0.8" height="15.0" fill="rgb(227,220,49)" rx="2" ry="2" />
<text  x="906.48" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (1 samples, 0.04%)</title><rect x="930.7" y="85" width="0.4" height="15.0" fill="rgb(227,2,29)" rx="2" ry="2" />
<text  x="933.71" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1113 (1 samples, 0.04%)</title><rect x="68.2" y="101" width="0.4" height="15.0" fill="rgb(210,79,17)" rx="2" ry="2" />
<text  x="71.23" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1211 (36 samples, 1.28%)</title><rect x="420.1" y="85" width="15.1" height="15.0" fill="rgb(220,76,49)" rx="2" ry="2" />
<text  x="423.09" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:240 (1 samples, 0.04%)</title><rect x="1077.3" y="85" width="0.4" height="15.0" fill="rgb(233,14,18)" rx="2" ry="2" />
<text  x="1080.32" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (31 samples, 1.10%)</title><rect x="398.7" y="69" width="13.0" height="15.0" fill="rgb(210,123,20)" rx="2" ry="2" />
<text  x="401.73" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1538 (15 samples, 0.53%)</title><rect x="590.6" y="69" width="6.3" height="15.0" fill="rgb(224,166,36)" rx="2" ry="2" />
<text  x="593.58" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (4 samples, 0.14%)</title><rect x="519.4" y="53" width="1.6" height="15.0" fill="rgb(206,21,38)" rx="2" ry="2" />
<text  x="522.36" y="63.5" ></text>
</g>
<g >
<title>all (2,817 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(228,215,20)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:244 (4 samples, 0.14%)</title><rect x="1084.4" y="85" width="1.7" height="15.0" fill="rgb(251,72,32)" rx="2" ry="2" />
<text  x="1087.44" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (5 samples, 0.18%)</title><rect x="942.4" y="117" width="2.1" height="15.0" fill="rgb(231,66,44)" rx="2" ry="2" />
<text  x="945.44" y="127.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine$RequestHook.execute:69 (9 samples, 0.32%)</title><rect x="1180.4" y="373" width="3.7" height="15.0" fill="rgb(219,146,51)" rx="2" ry="2" />
<text  x="1183.37" y="383.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.implRead:382 (3 samples, 0.11%)</title><rect x="1188.3" y="421" width="1.3" height="15.0" fill="rgb(215,30,5)" rx="2" ry="2" />
<text  x="1191.32" y="431.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:509 (1 samples, 0.04%)</title><rect x="1141.4" y="149" width="0.4" height="15.0" fill="rgb(245,193,25)" rx="2" ry="2" />
<text  x="1144.41" y="159.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4553 (5 samples, 0.18%)</title><rect x="1177.0" y="133" width="2.1" height="15.0" fill="rgb(221,165,51)" rx="2" ry="2" />
<text  x="1180.01" y="143.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1:442 (10 samples, 0.35%)</title><rect x="1179.9" y="437" width="4.2" height="15.0" fill="rgb(245,41,6)" rx="2" ry="2" />
<text  x="1182.95" y="447.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainder:2482 (234 samples, 8.31%)</title><rect x="46.4" y="165" width="98.1" height="15.0" fill="rgb(236,135,6)" rx="2" ry="2" />
<text  x="49.44" y="175.5" >java.math.B..</text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2490 (16 samples, 0.57%)</title><rect x="46.4" y="149" width="6.7" height="15.0" fill="rgb(248,118,13)" rx="2" ry="2" />
<text  x="49.44" y="159.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:526 (19 samples, 0.67%)</title><rect x="1148.5" y="149" width="8.0" height="15.0" fill="rgb(216,142,23)" rx="2" ry="2" />
<text  x="1151.53" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1493 (116 samples, 4.12%)</title><rect x="484.2" y="69" width="48.6" height="15.0" fill="rgb(245,175,11)" rx="2" ry="2" />
<text  x="487.18" y="79.5" >java..</text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (34 samples, 1.21%)</title><rect x="888.0" y="53" width="14.2" height="15.0" fill="rgb(246,152,20)" rx="2" ry="2" />
<text  x="890.98" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1555 (207 samples, 7.35%)</title><rect x="621.2" y="69" width="86.7" height="15.0" fill="rgb(247,77,17)" rx="2" ry="2" />
<text  x="624.15" y="79.5" >java.math...</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (2 samples, 0.07%)</title><rect x="981.4" y="85" width="0.8" height="15.0" fill="rgb(212,15,49)" rx="2" ry="2" />
<text  x="984.40" y="95.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.bigIntegerToHex:67 (5 samples, 0.18%)</title><rect x="1102.0" y="181" width="2.1" height="15.0" fill="rgb(239,217,48)" rx="2" ry="2" />
<text  x="1105.03" y="191.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked:75 (5 samples, 0.18%)</title><rect x="1184.6" y="437" width="2.0" height="15.0" fill="rgb(227,119,26)" rx="2" ry="2" />
<text  x="1187.55" y="447.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:155 (2 samples, 0.07%)</title><rect x="961.7" y="117" width="0.8" height="15.0" fill="rgb(243,57,8)" rx="2" ry="2" />
<text  x="964.71" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1488 (1 samples, 0.04%)</title><rect x="476.2" y="69" width="0.4" height="15.0" fill="rgb(243,52,50)" rx="2" ry="2" />
<text  x="479.22" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (3 samples, 0.11%)</title><rect x="546.2" y="53" width="1.2" height="15.0" fill="rgb(213,59,42)" rx="2" ry="2" />
<text  x="549.17" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4204 (2,170 samples, 77.03%)</title><rect x="181.3" y="149" width="909.0" height="15.0" fill="rgb(207,199,22)" rx="2" ry="2" />
<text  x="184.32" y="159.5" >java.math.BigInteger.toString:4204</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (14 samples, 0.50%)</title><rect x="832.7" y="53" width="5.9" height="15.0" fill="rgb(247,188,15)" rx="2" ry="2" />
<text  x="835.69" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:359 (60 samples, 2.13%)</title><rect x="437.7" y="69" width="25.1" height="15.0" fill="rgb(217,149,46)" rx="2" ry="2" />
<text  x="440.68" y="79.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (9 samples, 0.32%)</title><rect x="737.2" y="53" width="3.8" height="15.0" fill="rgb(251,19,16)" rx="2" ry="2" />
<text  x="740.18" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (21 samples, 0.75%)</title><rect x="521.0" y="53" width="8.8" height="15.0" fill="rgb(229,138,43)" rx="2" ry="2" />
<text  x="524.04" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (45 samples, 1.60%)</title><rect x="1071.5" y="117" width="18.8" height="15.0" fill="rgb(235,26,45)" rx="2" ry="2" />
<text  x="1074.46" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1117 (17 samples, 0.60%)</title><rect x="68.6" y="101" width="7.2" height="15.0" fill="rgb(210,176,43)" rx="2" ry="2" />
<text  x="71.64" y="111.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.read:269 (4 samples, 0.14%)</title><rect x="1186.6" y="453" width="1.7" height="15.0" fill="rgb(227,64,40)" rx="2" ry="2" />
<text  x="1189.65" y="463.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (1 samples, 0.04%)</title><rect x="1021.6" y="69" width="0.4" height="15.0" fill="rgb(221,153,28)" rx="2" ry="2" />
<text  x="1024.61" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1542 (1 samples, 0.04%)</title><rect x="597.3" y="69" width="0.4" height="15.0" fill="rgb(206,36,28)" rx="2" ry="2" />
<text  x="600.28" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:233 (5 samples, 0.18%)</title><rect x="1184.6" y="405" width="2.0" height="15.0" fill="rgb(207,61,22)" rx="2" ry="2" />
<text  x="1187.55" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:547 (2 samples, 0.07%)</title><rect x="849.0" y="53" width="0.9" height="15.0" fill="rgb(244,33,25)" rx="2" ry="2" />
<text  x="852.03" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:241 (9 samples, 0.32%)</title><rect x="1077.7" y="85" width="3.8" height="15.0" fill="rgb(209,16,4)" rx="2" ry="2" />
<text  x="1080.74" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1605 (8 samples, 0.28%)</title><rect x="780.7" y="69" width="3.4" height="15.0" fill="rgb(230,75,34)" rx="2" ry="2" />
<text  x="783.75" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1544 (1 samples, 0.04%)</title><rect x="598.5" y="69" width="0.5" height="15.0" fill="rgb(218,50,4)" rx="2" ry="2" />
<text  x="601.53" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (54 samples, 1.92%)</title><rect x="999.4" y="85" width="22.6" height="15.0" fill="rgb(209,162,19)" rx="2" ry="2" />
<text  x="1002.41" y="95.5" >j..</text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (10 samples, 0.35%)</title><rect x="423.0" y="53" width="4.2" height="15.0" fill="rgb(218,26,34)" rx="2" ry="2" />
<text  x="426.02" y="63.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.getProperties:74 (2 samples, 0.07%)</title><rect x="1156.5" y="117" width="0.8" height="15.0" fill="rgb(248,208,42)" rx="2" ry="2" />
<text  x="1159.49" y="127.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitFor:569 (4 samples, 0.14%)</title><rect x="1185.0" y="293" width="1.6" height="15.0" fill="rgb(227,89,46)" rx="2" ry="2" />
<text  x="1187.97" y="303.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (2 samples, 0.07%)</title><rect x="949.6" y="101" width="0.8" height="15.0" fill="rgb(241,155,48)" rx="2" ry="2" />
<text  x="952.56" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4140 (4 samples, 0.14%)</title><rect x="198.9" y="133" width="1.7" height="15.0" fill="rgb(223,42,1)" rx="2" ry="2" />
<text  x="201.92" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:585 (5 samples, 0.18%)</title><rect x="1074.4" y="101" width="2.1" height="15.0" fill="rgb(242,57,23)" rx="2" ry="2" />
<text  x="1077.39" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:702 (20 samples, 0.71%)</title><rect x="865.4" y="37" width="8.3" height="15.0" fill="rgb(208,62,1)" rx="2" ry="2" />
<text  x="868.36" y="47.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4167 (113 samples, 4.01%)</title><rect x="974.7" y="133" width="47.3" height="15.0" fill="rgb(234,181,13)" rx="2" ry="2" />
<text  x="977.69" y="143.5" >java..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (2,793 samples, 99.15%)</title><rect x="10.0" y="373" width="1169.9" height="15.0" fill="rgb(251,128,6)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (2 samples, 0.07%)</title><rect x="981.4" y="69" width="0.8" height="15.0" fill="rgb(210,215,24)" rx="2" ry="2" />
<text  x="984.40" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1674 (75 samples, 2.66%)</title><rect x="846.9" y="69" width="31.4" height="15.0" fill="rgb(205,178,51)" rx="2" ry="2" />
<text  x="849.93" y="79.5" >ja..</text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.execute:191 (4 samples, 0.14%)</title><rect x="1185.0" y="325" width="1.6" height="15.0" fill="rgb(206,228,36)" rx="2" ry="2" />
<text  x="1187.97" y="335.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:162 (4 samples, 0.14%)</title><rect x="947.9" y="101" width="1.7" height="15.0" fill="rgb(246,50,16)" rx="2" ry="2" />
<text  x="950.88" y="111.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:141 (5 samples, 0.18%)</title><rect x="1029.6" y="117" width="2.1" height="15.0" fill="rgb(231,58,28)" rx="2" ry="2" />
<text  x="1032.57" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1192 (16 samples, 0.57%)</title><rect x="389.1" y="85" width="6.7" height="15.0" fill="rgb(209,220,10)" rx="2" ry="2" />
<text  x="392.09" y="95.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKey:39 (3 samples, 0.11%)</title><rect x="19.2" y="197" width="1.3" height="15.0" fill="rgb(238,192,39)" rx="2" ry="2" />
<text  x="22.22" y="207.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1623 (64 samples, 2.27%)</title><rect x="790.4" y="69" width="26.8" height="15.0" fill="rgb(251,138,17)" rx="2" ry="2" />
<text  x="793.38" y="79.5" >j..</text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3822 (1 samples, 0.04%)</title><rect x="968.4" y="85" width="0.4" height="15.0" fill="rgb(207,101,15)" rx="2" ry="2" />
<text  x="971.41" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4151 (1,341 samples, 47.60%)</title><rect x="347.6" y="133" width="561.7" height="15.0" fill="rgb(250,176,19)" rx="2" ry="2" />
<text  x="350.62" y="143.5" >java.math.BigInteger.smallToString:4151</text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2494 (215 samples, 7.63%)</title><rect x="54.4" y="149" width="90.1" height="15.0" fill="rgb(237,218,44)" rx="2" ry="2" />
<text  x="57.40" y="159.5" >java.math...</text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (23 samples, 0.82%)</title><rect x="547.4" y="53" width="9.7" height="15.0" fill="rgb(239,5,14)" rx="2" ry="2" />
<text  x="550.43" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1219 (1 samples, 0.04%)</title><rect x="143.6" y="117" width="0.4" height="15.0" fill="rgb(219,228,54)" rx="2" ry="2" />
<text  x="146.62" y="127.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (1 samples, 0.04%)</title><rect x="273.1" y="101" width="0.4" height="15.0" fill="rgb(224,27,20)" rx="2" ry="2" />
<text  x="276.06" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1528 (11 samples, 0.39%)</title><rect x="580.9" y="69" width="4.6" height="15.0" fill="rgb(238,18,26)" rx="2" ry="2" />
<text  x="583.94" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:503 (10 samples, 0.35%)</title><rect x="1179.9" y="421" width="4.2" height="15.0" fill="rgb(251,32,15)" rx="2" ry="2" />
<text  x="1182.95" y="431.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1138 (6 samples, 0.21%)</title><rect x="918.1" y="101" width="2.6" height="15.0" fill="rgb(220,185,1)" rx="2" ry="2" />
<text  x="921.14" y="111.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKey:46 (2,268 samples, 80.51%)</title><rect x="154.1" y="197" width="950.0" height="15.0" fill="rgb(240,118,38)" rx="2" ry="2" />
<text  x="157.10" y="207.5" >org.sample.SM2Util.getHexPublicKey:46</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1495 (6 samples, 0.21%)</title><rect x="537.0" y="69" width="2.5" height="15.0" fill="rgb(219,63,36)" rx="2" ry="2" />
<text  x="539.96" y="79.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:317 (2,793 samples, 99.15%)</title><rect x="10.0" y="421" width="1169.9" height="15.0" fill="rgb(218,207,6)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >java.util.concurrent.FutureTask.run:317</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:121 (1 samples, 0.04%)</title><rect x="273.1" y="117" width="0.4" height="15.0" fill="rgb(243,58,17)" rx="2" ry="2" />
<text  x="276.06" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.bitLengthForInt:2727 (6 samples, 0.21%)</title><rect x="851.5" y="37" width="2.6" height="15.0" fill="rgb(242,170,49)" rx="2" ry="2" />
<text  x="854.54" y="47.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (5 samples, 0.18%)</title><rect x="963.4" y="117" width="2.1" height="15.0" fill="rgb(252,120,45)" rx="2" ry="2" />
<text  x="966.38" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:533 (17 samples, 0.60%)</title><rect x="1172.0" y="149" width="7.1" height="15.0" fill="rgb(237,94,27)" rx="2" ry="2" />
<text  x="1174.99" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1501 (1 samples, 0.04%)</title><rect x="565.0" y="69" width="0.4" height="15.0" fill="rgb(212,182,34)" rx="2" ry="2" />
<text  x="568.02" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.startProfilers:249 (1 samples, 0.04%)</title><rect x="1184.6" y="357" width="0.4" height="15.0" fill="rgb(209,173,46)" rx="2" ry="2" />
<text  x="1187.55" y="367.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1581 (9 samples, 0.32%)</title><rect x="737.2" y="69" width="3.8" height="15.0" fill="rgb(218,202,19)" rx="2" ry="2" />
<text  x="740.18" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1677 (1 samples, 0.04%)</title><rect x="1189.6" y="453" width="0.4" height="15.0" fill="rgb(247,90,2)" rx="2" ry="2" />
<text  x="1192.58" y="463.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:406 (1 samples, 0.04%)</title><rect x="908.9" y="53" width="0.4" height="15.0" fill="rgb(225,102,0)" rx="2" ry="2" />
<text  x="911.93" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (1 samples, 0.04%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(236,44,47)" rx="2" ry="2" />
<text  x="1192.58" y="447.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:249 (10 samples, 0.35%)</title><rect x="1157.3" y="133" width="4.2" height="15.0" fill="rgb(234,14,3)" rx="2" ry="2" />
<text  x="1160.33" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4149 (165 samples, 5.86%)</title><rect x="217.3" y="133" width="69.2" height="15.0" fill="rgb(220,150,36)" rx="2" ry="2" />
<text  x="220.35" y="143.5" >java.ma..</text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4163 (14 samples, 0.50%)</title><rect x="968.8" y="133" width="5.9" height="15.0" fill="rgb(208,224,6)" rx="2" ry="2" />
<text  x="971.83" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (14 samples, 0.50%)</title><rect x="976.4" y="101" width="5.8" height="15.0" fill="rgb(250,29,2)" rx="2" ry="2" />
<text  x="979.37" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (2 samples, 0.07%)</title><rect x="56.1" y="101" width="0.8" height="15.0" fill="rgb(248,71,19)" rx="2" ry="2" />
<text  x="59.08" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1195 (1 samples, 0.04%)</title><rect x="395.8" y="85" width="0.4" height="15.0" fill="rgb(221,102,19)" rx="2" ry="2" />
<text  x="398.79" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1122 (5 samples, 0.18%)</title><rect x="76.2" y="101" width="2.1" height="15.0" fill="rgb(218,36,44)" rx="2" ry="2" />
<text  x="79.18" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.mod:2830 (1 samples, 0.04%)</title><rect x="144.5" y="181" width="0.4" height="15.0" fill="rgb(239,223,24)" rx="2" ry="2" />
<text  x="147.46" y="191.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (95 samples, 3.37%)</title><rect x="982.2" y="101" width="39.8" height="15.0" fill="rgb(243,104,41)" rx="2" ry="2" />
<text  x="985.23" y="111.5" >jav..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1499 (55 samples, 1.95%)</title><rect x="542.0" y="69" width="23.0" height="15.0" fill="rgb(254,17,28)" rx="2" ry="2" />
<text  x="544.98" y="79.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (3 samples, 0.11%)</title><rect x="906.8" y="53" width="1.3" height="15.0" fill="rgb(212,65,28)" rx="2" ry="2" />
<text  x="909.83" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (2 samples, 0.07%)</title><rect x="1088.6" y="69" width="0.9" height="15.0" fill="rgb(228,70,28)" rx="2" ry="2" />
<text  x="1091.63" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4554 (7 samples, 0.25%)</title><rect x="965.5" y="85" width="2.9" height="15.0" fill="rgb(211,54,2)" rx="2" ry="2" />
<text  x="968.48" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:585 (2 samples, 0.07%)</title><rect x="975.5" y="101" width="0.9" height="15.0" fill="rgb(207,203,18)" rx="2" ry="2" />
<text  x="978.53" y="111.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:506 (1 samples, 0.04%)</title><rect x="1141.0" y="149" width="0.4" height="15.0" fill="rgb(217,22,49)" rx="2" ry="2" />
<text  x="1143.99" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.mod:2829 (234 samples, 8.31%)</title><rect x="46.4" y="181" width="98.1" height="15.0" fill="rgb(218,65,19)" rx="2" ry="2" />
<text  x="49.44" y="191.5" >java.math.B..</text>
</g>
</g>
</svg>
