<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >cpu sm2p256v1_uncompressed-Throughput</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:98 (1 samples, 0.04%)</title><rect x="35.9" y="133" width="0.4" height="15.0" fill="rgb(248,165,39)" rx="2" ry="2" />
<text  x="38.86" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (2 samples, 0.07%)</title><rect x="1070.2" y="69" width="0.9" height="15.0" fill="rgb(207,188,39)" rx="2" ry="2" />
<text  x="1073.19" y="79.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKeyUncompressed:55 (1,257 samples, 45.91%)</title><rect x="12.2" y="197" width="541.7" height="15.0" fill="rgb(243,92,38)" rx="2" ry="2" />
<text  x="15.15" y="207.5" >org.sample.SM2Util.getHexPublicKeyUncompressed:55</text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.isToDisk:514 (1 samples, 0.04%)</title><rect x="1179.7" y="405" width="0.4" height="15.0" fill="rgb(213,202,4)" rx="2" ry="2" />
<text  x="1182.66" y="415.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.&lt;init&gt;:119 (53 samples, 1.94%)</title><rect x="558.2" y="149" width="22.8" height="15.0" fill="rgb(230,142,2)" rx="2" ry="2" />
<text  x="561.20" y="159.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1562 (3 samples, 0.11%)</title><rect x="862.5" y="69" width="1.3" height="15.0" fill="rgb(205,182,3)" rx="2" ry="2" />
<text  x="865.46" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1542 (1 samples, 0.04%)</title><rect x="798.7" y="69" width="0.4" height="15.0" fill="rgb(238,86,30)" rx="2" ry="2" />
<text  x="801.68" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.length:1499 (1 samples, 0.04%)</title><rect x="1021.9" y="117" width="0.5" height="15.0" fill="rgb(235,199,46)" rx="2" ry="2" />
<text  x="1024.92" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1542 (1 samples, 0.04%)</title><rect x="269.0" y="69" width="0.4" height="15.0" fill="rgb(226,24,0)" rx="2" ry="2" />
<text  x="272.01" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4152 (61 samples, 2.23%)</title><rect x="437.5" y="133" width="26.3" height="15.0" fill="rgb(219,225,26)" rx="2" ry="2" />
<text  x="440.52" y="143.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (11 samples, 0.40%)</title><rect x="771.1" y="53" width="4.7" height="15.0" fill="rgb(240,147,33)" rx="2" ry="2" />
<text  x="774.10" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1634 (3 samples, 0.11%)</title><rect x="927.1" y="69" width="1.3" height="15.0" fill="rgb(248,140,12)" rx="2" ry="2" />
<text  x="930.11" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.toUpperCase:3511 (183 samples, 6.68%)</title><rect x="1092.2" y="181" width="78.8" height="15.0" fill="rgb(252,229,51)" rx="2" ry="2" />
<text  x="1095.17" y="191.5" >java.lang..</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (9 samples, 0.33%)</title><rect x="894.4" y="53" width="3.8" height="15.0" fill="rgb(211,177,36)" rx="2" ry="2" />
<text  x="897.35" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:170 (1 samples, 0.04%)</title><rect x="472.4" y="101" width="0.5" height="15.0" fill="rgb(206,92,52)" rx="2" ry="2" />
<text  x="475.43" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (7 samples, 0.26%)</title><rect x="1025.4" y="85" width="3.0" height="15.0" fill="rgb(213,61,10)" rx="2" ry="2" />
<text  x="1028.37" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:702 (9 samples, 0.33%)</title><rect x="946.9" y="37" width="3.9" height="15.0" fill="rgb(251,8,7)" rx="2" ry="2" />
<text  x="949.93" y="47.5" ></text>
</g>
<g >
<title>java.lang.String.length:1499 (1 samples, 0.04%)</title><rect x="484.1" y="117" width="0.4" height="15.0" fill="rgb(205,227,48)" rx="2" ry="2" />
<text  x="487.07" y="127.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKeyUncompressed:57 (185 samples, 6.76%)</title><rect x="1091.3" y="197" width="79.7" height="15.0" fill="rgb(234,104,10)" rx="2" ry="2" />
<text  x="1094.31" y="207.5" >org.sampl..</text>
</g>
<g >
<title>java.lang.Number.&lt;init&gt;:59 (3 samples, 0.11%)</title><rect x="466.4" y="85" width="1.3" height="15.0" fill="rgb(222,8,5)" rx="2" ry="2" />
<text  x="469.40" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:391 (1 samples, 0.04%)</title><rect x="420.3" y="53" width="0.4" height="15.0" fill="rgb(213,208,44)" rx="2" ry="2" />
<text  x="423.28" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (24 samples, 0.88%)</title><rect x="423.7" y="53" width="10.4" height="15.0" fill="rgb(251,29,9)" rx="2" ry="2" />
<text  x="426.73" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (2 samples, 0.07%)</title><rect x="470.3" y="85" width="0.8" height="15.0" fill="rgb(247,47,11)" rx="2" ry="2" />
<text  x="473.28" y="95.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (1 samples, 0.04%)</title><rect x="1029.7" y="53" width="0.4" height="15.0" fill="rgb(223,66,28)" rx="2" ry="2" />
<text  x="1032.68" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1531 (2 samples, 0.07%)</title><rect x="790.1" y="69" width="0.8" height="15.0" fill="rgb(233,143,52)" rx="2" ry="2" />
<text  x="793.06" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (2 samples, 0.07%)</title><rect x="470.3" y="101" width="0.8" height="15.0" fill="rgb(218,3,34)" rx="2" ry="2" />
<text  x="473.28" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (1 samples, 0.04%)</title><rect x="483.6" y="85" width="0.5" height="15.0" fill="rgb(242,132,36)" rx="2" ry="2" />
<text  x="486.64" y="95.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_thrpt_jmhStub:122 (1 samples, 0.04%)</title><rect x="1179.2" y="229" width="0.5" height="15.0" fill="rgb(214,186,39)" rx="2" ry="2" />
<text  x="1182.23" y="239.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (2 samples, 0.07%)</title><rect x="140.6" y="53" width="0.8" height="15.0" fill="rgb(217,123,8)" rx="2" ry="2" />
<text  x="143.58" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (5 samples, 0.18%)</title><rect x="221.6" y="53" width="2.2" height="15.0" fill="rgb(208,68,42)" rx="2" ry="2" />
<text  x="224.61" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1634 (3 samples, 0.11%)</title><rect x="396.6" y="69" width="1.3" height="15.0" fill="rgb(217,17,43)" rx="2" ry="2" />
<text  x="399.58" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1156 (2 samples, 0.07%)</title><rect x="116.0" y="101" width="0.9" height="15.0" fill="rgb(251,192,14)" rx="2" ry="2" />
<text  x="119.02" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1139 (1 samples, 0.04%)</title><rect x="1006.8" y="101" width="0.5" height="15.0" fill="rgb(236,126,50)" rx="2" ry="2" />
<text  x="1009.84" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:1487 (3 samples, 0.11%)</title><rect x="1089.2" y="133" width="1.2" height="15.0" fill="rgb(205,35,54)" rx="2" ry="2" />
<text  x="1092.15" y="143.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3891 (1 samples, 0.04%)</title><rect x="140.2" y="53" width="0.4" height="15.0" fill="rgb(254,190,26)" rx="2" ry="2" />
<text  x="143.15" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:547 (2 samples, 0.07%)</title><rect x="407.8" y="53" width="0.8" height="15.0" fill="rgb(229,161,11)" rx="2" ry="2" />
<text  x="410.79" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4155 (7 samples, 0.26%)</title><rect x="1012.4" y="133" width="3.1" height="15.0" fill="rgb(248,198,40)" rx="2" ry="2" />
<text  x="1015.44" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:397 (3 samples, 0.11%)</title><rect x="435.4" y="53" width="1.3" height="15.0" fill="rgb(227,211,14)" rx="2" ry="2" />
<text  x="438.37" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4534 (4 samples, 0.15%)</title><rect x="551.3" y="117" width="1.7" height="15.0" fill="rgb(232,131,43)" rx="2" ry="2" />
<text  x="554.30" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:585 (5 samples, 0.18%)</title><rect x="485.4" y="101" width="2.1" height="15.0" fill="rgb(229,38,30)" rx="2" ry="2" />
<text  x="488.36" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3182 (4 samples, 0.15%)</title><rect x="999.5" y="85" width="1.7" height="15.0" fill="rgb(233,114,3)" rx="2" ry="2" />
<text  x="1002.51" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1158 (744 samples, 27.17%)</title><rect x="116.9" y="101" width="320.6" height="15.0" fill="rgb(219,56,38)" rx="2" ry="2" />
<text  x="119.88" y="111.5" >java.math.MutableBigInteger.divide:1158</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1514 (1 samples, 0.04%)</title><rect x="783.2" y="69" width="0.4" height="15.0" fill="rgb(249,180,3)" rx="2" ry="2" />
<text  x="786.16" y="79.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitFor:569 (4 samples, 0.15%)</title><rect x="1184.8" y="293" width="1.8" height="15.0" fill="rgb(251,201,37)" rx="2" ry="2" />
<text  x="1187.83" y="303.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1594 (8 samples, 0.29%)</title><rect x="878.8" y="69" width="3.5" height="15.0" fill="rgb(227,150,20)" rx="2" ry="2" />
<text  x="881.84" y="79.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitForInterruptibly:-1 (1 samples, 0.04%)</title><rect x="1184.4" y="277" width="0.4" height="15.0" fill="rgb(227,178,41)" rx="2" ry="2" />
<text  x="1187.40" y="287.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (11 samples, 0.40%)</title><rect x="766.4" y="53" width="4.7" height="15.0" fill="rgb(241,193,28)" rx="2" ry="2" />
<text  x="769.36" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:241 (5 samples, 0.18%)</title><rect x="487.5" y="85" width="2.2" height="15.0" fill="rgb(226,226,25)" rx="2" ry="2" />
<text  x="490.52" y="95.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3820 (1 samples, 0.04%)</title><rect x="518.1" y="85" width="0.4" height="15.0" fill="rgb(233,50,20)" rx="2" ry="2" />
<text  x="521.12" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1674 (32 samples, 1.17%)</title><rect x="406.5" y="69" width="13.8" height="15.0" fill="rgb(236,50,53)" rx="2" ry="2" />
<text  x="409.49" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:551 (2 samples, 0.07%)</title><rect x="941.8" y="53" width="0.8" height="15.0" fill="rgb(235,51,17)" rx="2" ry="2" />
<text  x="944.76" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4099 (1,175 samples, 42.91%)</title><rect x="581.0" y="165" width="506.4" height="15.0" fill="rgb(216,50,17)" rx="2" ry="2" />
<text  x="584.04" y="175.5" >java.math.BigInteger.toString:4099</text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:703 (12 samples, 0.44%)</title><rect x="950.8" y="37" width="5.2" height="15.0" fill="rgb(218,179,38)" rx="2" ry="2" />
<text  x="953.81" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (118 samples, 4.31%)</title><rect x="662.9" y="69" width="50.9" height="15.0" fill="rgb(213,83,37)" rx="2" ry="2" />
<text  x="665.92" y="79.5" >java...</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1581 (6 samples, 0.22%)</title><rect x="876.3" y="69" width="2.5" height="15.0" fill="rgb(234,130,34)" rx="2" ry="2" />
<text  x="879.25" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (16 samples, 0.58%)</title><rect x="526.3" y="101" width="6.9" height="15.0" fill="rgb(231,85,13)" rx="2" ry="2" />
<text  x="529.30" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1675 (33 samples, 1.21%)</title><rect x="956.8" y="69" width="14.3" height="15.0" fill="rgb(213,224,10)" rx="2" ry="2" />
<text  x="959.84" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (19 samples, 0.69%)</title><rect x="886.2" y="53" width="8.2" height="15.0" fill="rgb(251,156,30)" rx="2" ry="2" />
<text  x="889.17" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (5 samples, 0.18%)</title><rect x="1031.4" y="69" width="2.2" height="15.0" fill="rgb(221,114,2)" rx="2" ry="2" />
<text  x="1034.40" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3819 (3 samples, 0.11%)</title><rect x="481.9" y="85" width="1.3" height="15.0" fill="rgb(216,58,36)" rx="2" ry="2" />
<text  x="484.91" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1565 (1 samples, 0.04%)</title><rect x="865.9" y="69" width="0.4" height="15.0" fill="rgb(222,74,3)" rx="2" ry="2" />
<text  x="868.91" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:241 (8 samples, 0.29%)</title><rect x="527.2" y="85" width="3.4" height="15.0" fill="rgb(210,140,46)" rx="2" ry="2" />
<text  x="530.17" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4148 (35 samples, 1.28%)</title><rect x="589.2" y="133" width="15.1" height="15.0" fill="rgb(216,56,3)" rx="2" ry="2" />
<text  x="592.23" y="143.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:325 (1 samples, 0.04%)</title><rect x="1184.4" y="373" width="0.4" height="15.0" fill="rgb(216,139,41)" rx="2" ry="2" />
<text  x="1187.40" y="383.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4140 (7 samples, 0.26%)</title><rect x="586.2" y="133" width="3.0" height="15.0" fill="rgb(245,158,23)" rx="2" ry="2" />
<text  x="589.21" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1595 (49 samples, 1.79%)</title><rect x="357.8" y="69" width="21.1" height="15.0" fill="rgb(252,139,16)" rx="2" ry="2" />
<text  x="360.79" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1677 (8 samples, 0.29%)</title><rect x="434.1" y="69" width="3.4" height="15.0" fill="rgb(245,124,7)" rx="2" ry="2" />
<text  x="437.08" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (26 samples, 0.95%)</title><rect x="49.2" y="117" width="11.2" height="15.0" fill="rgb(207,38,43)" rx="2" ry="2" />
<text  x="52.22" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1499 (39 samples, 1.42%)</title><rect x="759.0" y="69" width="16.8" height="15.0" fill="rgb(225,103,50)" rx="2" ry="2" />
<text  x="762.03" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1579 (12 samples, 0.44%)</title><rect x="871.1" y="69" width="5.2" height="15.0" fill="rgb(247,58,53)" rx="2" ry="2" />
<text  x="874.08" y="79.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$DMH+0x0000000800001800.212628335.invokeSpecial:-1 (2,714 samples, 99.12%)</title><rect x="10.0" y="261" width="1169.7" height="15.0" fill="rgb(220,107,5)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >java.lang.invoke.LambdaForm$DMH+0x0000000800001800.212628335.invokeSpecial:-1</text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:703 (3 samples, 0.11%)</title><rect x="419.0" y="37" width="1.3" height="15.0" fill="rgb(234,75,32)" rx="2" ry="2" />
<text  x="421.99" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1624 (1 samples, 0.04%)</title><rect x="396.2" y="69" width="0.4" height="15.0" fill="rgb(247,70,8)" rx="2" ry="2" />
<text  x="399.15" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (5 samples, 0.18%)</title><rect x="530.6" y="85" width="2.2" height="15.0" fill="rgb(213,141,41)" rx="2" ry="2" />
<text  x="533.61" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (3 samples, 0.11%)</title><rect x="471.1" y="101" width="1.3" height="15.0" fill="rgb(243,217,43)" rx="2" ry="2" />
<text  x="474.14" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4203 (1 samples, 0.04%)</title><rect x="581.0" y="149" width="0.5" height="15.0" fill="rgb(228,170,51)" rx="2" ry="2" />
<text  x="584.04" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4743 (2 samples, 0.07%)</title><rect x="1012.4" y="101" width="0.9" height="15.0" fill="rgb(226,189,40)" rx="2" ry="2" />
<text  x="1015.44" y="111.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$MH+0x0000000800116c00.1037689086.invokeExact_MT:-1 (2,714 samples, 99.12%)</title><rect x="10.0" y="293" width="1169.7" height="15.0" fill="rgb(224,30,10)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >java.lang.invoke.LambdaForm$MH+0x0000000800116c00.1037689086.invokeExact_MT:-1</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:650 (7 samples, 0.26%)</title><rect x="898.2" y="53" width="3.0" height="15.0" fill="rgb(205,191,53)" rx="2" ry="2" />
<text  x="901.23" y="63.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (3 samples, 0.11%)</title><rect x="466.4" y="69" width="1.3" height="15.0" fill="rgb(216,86,25)" rx="2" ry="2" />
<text  x="469.40" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3181 (2 samples, 0.07%)</title><rect x="1009.9" y="85" width="0.8" height="15.0" fill="rgb(227,28,12)" rx="2" ry="2" />
<text  x="1012.85" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (3 samples, 0.11%)</title><rect x="401.3" y="53" width="1.3" height="15.0" fill="rgb(245,172,17)" rx="2" ry="2" />
<text  x="404.32" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:651 (4 samples, 0.15%)</title><rect x="901.2" y="53" width="1.8" height="15.0" fill="rgb(217,198,42)" rx="2" ry="2" />
<text  x="904.25" y="63.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:642 (2,714 samples, 99.12%)</title><rect x="10.0" y="453" width="1169.7" height="15.0" fill="rgb(225,144,40)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:642</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1555 (115 samples, 4.20%)</title><rect x="281.9" y="69" width="49.6" height="15.0" fill="rgb(232,45,37)" rx="2" ry="2" />
<text  x="284.94" y="79.5" >java...</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:651 (2 samples, 0.07%)</title><rect x="376.8" y="53" width="0.8" height="15.0" fill="rgb(213,150,38)" rx="2" ry="2" />
<text  x="379.76" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (1 samples, 0.04%)</title><rect x="929.3" y="53" width="0.4" height="15.0" fill="rgb(234,14,26)" rx="2" ry="2" />
<text  x="932.26" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (6 samples, 0.22%)</title><rect x="957.7" y="53" width="2.6" height="15.0" fill="rgb(253,165,33)" rx="2" ry="2" />
<text  x="960.71" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:99 (2 samples, 0.07%)</title><rect x="580.2" y="133" width="0.8" height="15.0" fill="rgb(205,27,26)" rx="2" ry="2" />
<text  x="583.18" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1614 (2 samples, 0.07%)</title><rect x="381.1" y="69" width="0.8" height="15.0" fill="rgb(219,95,37)" rx="2" ry="2" />
<text  x="384.07" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1578 (11 samples, 0.40%)</title><rect x="866.3" y="69" width="4.8" height="15.0" fill="rgb(231,97,30)" rx="2" ry="2" />
<text  x="869.34" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4170 (8 samples, 0.29%)</title><rect x="495.7" y="133" width="3.5" height="15.0" fill="rgb(229,46,16)" rx="2" ry="2" />
<text  x="498.70" y="143.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.JVM.emitEvent:-1 (8 samples, 0.29%)</title><rect x="1180.9" y="357" width="3.5" height="15.0" fill="rgb(210,40,34)" rx="2" ry="2" />
<text  x="1183.95" y="367.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.compare:268 (1 samples, 0.04%)</title><rect x="659.0" y="69" width="0.5" height="15.0" fill="rgb(214,202,19)" rx="2" ry="2" />
<text  x="662.04" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:700 (1 samples, 0.04%)</title><rect x="942.6" y="37" width="0.5" height="15.0" fill="rgb(244,199,14)" rx="2" ry="2" />
<text  x="945.62" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1563 (4 samples, 0.15%)</title><rect x="335.8" y="69" width="1.7" height="15.0" fill="rgb(254,105,52)" rx="2" ry="2" />
<text  x="338.81" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:552 (33 samples, 1.21%)</title><rect x="942.6" y="53" width="14.2" height="15.0" fill="rgb(231,51,12)" rx="2" ry="2" />
<text  x="945.62" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (9 samples, 0.33%)</title><rect x="882.3" y="53" width="3.9" height="15.0" fill="rgb(218,182,45)" rx="2" ry="2" />
<text  x="885.29" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1510 (5 samples, 0.18%)</title><rect x="245.7" y="69" width="2.2" height="15.0" fill="rgb(241,95,12)" rx="2" ry="2" />
<text  x="248.74" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1543 (1 samples, 0.04%)</title><rect x="269.4" y="69" width="0.5" height="15.0" fill="rgb(208,186,38)" rx="2" ry="2" />
<text  x="272.44" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1538 (12 samples, 0.44%)</title><rect x="262.5" y="69" width="5.2" height="15.0" fill="rgb(252,92,21)" rx="2" ry="2" />
<text  x="265.55" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4139 (7 samples, 0.26%)</title><rect x="583.2" y="133" width="3.0" height="15.0" fill="rgb(221,150,10)" rx="2" ry="2" />
<text  x="586.19" y="143.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.consumer.EventLog.isLogging:191 (1 samples, 0.04%)</title><rect x="1180.5" y="389" width="0.4" height="15.0" fill="rgb(251,179,38)" rx="2" ry="2" />
<text  x="1183.52" y="399.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3822 (1 samples, 0.04%)</title><rect x="483.2" y="85" width="0.4" height="15.0" fill="rgb(221,168,9)" rx="2" ry="2" />
<text  x="486.21" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (1 samples, 0.04%)</title><rect x="1029.7" y="69" width="0.4" height="15.0" fill="rgb(251,49,52)" rx="2" ry="2" />
<text  x="1032.68" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.compare:266 (3 samples, 0.11%)</title><rect x="119.5" y="69" width="1.3" height="15.0" fill="rgb(220,5,42)" rx="2" ry="2" />
<text  x="122.47" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1623 (33 samples, 1.21%)</title><rect x="381.9" y="69" width="14.3" height="15.0" fill="rgb(240,215,13)" rx="2" ry="2" />
<text  x="384.93" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (32 samples, 1.17%)</title><rect x="501.7" y="117" width="13.8" height="15.0" fill="rgb(242,125,30)" rx="2" ry="2" />
<text  x="504.74" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1581 (3 samples, 0.11%)</title><rect x="351.8" y="69" width="1.3" height="15.0" fill="rgb(224,29,12)" rx="2" ry="2" />
<text  x="354.76" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1486 (4 samples, 0.15%)</title><rect x="193.2" y="69" width="1.7" height="15.0" fill="rgb(244,139,42)" rx="2" ry="2" />
<text  x="196.16" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4089 (1 samples, 0.04%)</title><rect x="13.4" y="165" width="0.5" height="15.0" fill="rgb(249,64,0)" rx="2" ry="2" />
<text  x="16.45" y="175.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1:442 (11 samples, 0.40%)</title><rect x="1179.7" y="437" width="4.7" height="15.0" fill="rgb(254,99,12)" rx="2" ry="2" />
<text  x="1182.66" y="447.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1536 (3 samples, 0.11%)</title><rect x="792.2" y="69" width="1.3" height="15.0" fill="rgb(237,15,10)" rx="2" ry="2" />
<text  x="795.21" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1539 (3 samples, 0.11%)</title><rect x="267.7" y="69" width="1.3" height="15.0" fill="rgb(206,35,40)" rx="2" ry="2" />
<text  x="270.72" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.toString:453 (6 samples, 0.22%)</title><rect x="550.4" y="149" width="2.6" height="15.0" fill="rgb(227,156,50)" rx="2" ry="2" />
<text  x="553.44" y="159.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:260 (2 samples, 0.07%)</title><rect x="1069.3" y="69" width="0.9" height="15.0" fill="rgb(214,214,23)" rx="2" ry="2" />
<text  x="1072.33" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1555 (110 samples, 4.02%)</title><rect x="812.0" y="69" width="47.4" height="15.0" fill="rgb(251,226,34)" rx="2" ry="2" />
<text  x="815.04" y="79.5" >java..</text>
</g>
<g >
<title>java.io.BufferedInputStream.read1:310 (4 samples, 0.15%)</title><rect x="1188.3" y="405" width="1.7" height="15.0" fill="rgb(240,33,17)" rx="2" ry="2" />
<text  x="1191.28" y="415.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4151 (791 samples, 28.89%)</title><rect x="632.3" y="133" width="340.9" height="15.0" fill="rgb(230,37,11)" rx="2" ry="2" />
<text  x="635.32" y="143.5" >java.math.BigInteger.smallToString:4151</text>
</g>
<g >
<title>java.math.BigInteger.bitLengthForInt:2727 (1 samples, 0.04%)</title><rect x="409.5" y="37" width="0.4" height="15.0" fill="rgb(219,78,2)" rx="2" ry="2" />
<text  x="412.51" y="47.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4532 (1 samples, 0.04%)</title><rect x="550.9" y="117" width="0.4" height="15.0" fill="rgb(230,224,26)" rx="2" ry="2" />
<text  x="553.87" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:139 (2 samples, 0.07%)</title><rect x="662.1" y="69" width="0.8" height="15.0" fill="rgb(250,32,6)" rx="2" ry="2" />
<text  x="665.06" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1675 (32 samples, 1.17%)</title><rect x="420.3" y="69" width="13.8" height="15.0" fill="rgb(210,93,52)" rx="2" ry="2" />
<text  x="423.28" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.consumer.EventLog.update:91 (1 samples, 0.04%)</title><rect x="1180.5" y="405" width="0.4" height="15.0" fill="rgb(220,8,8)" rx="2" ry="2" />
<text  x="1183.52" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (3 samples, 0.11%)</title><rect x="1008.6" y="101" width="1.3" height="15.0" fill="rgb(220,186,17)" rx="2" ry="2" />
<text  x="1011.56" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1473 (1 samples, 0.04%)</title><rect x="753.9" y="53" width="0.4" height="15.0" fill="rgb(212,2,0)" rx="2" ry="2" />
<text  x="756.86" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1653 (1 samples, 0.04%)</title><rect x="399.6" y="69" width="0.4" height="15.0" fill="rgb(249,204,25)" rx="2" ry="2" />
<text  x="402.60" y="79.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.read:269 (4 samples, 0.15%)</title><rect x="1186.6" y="453" width="1.7" height="15.0" fill="rgb(224,10,9)" rx="2" ry="2" />
<text  x="1189.55" y="463.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (2 samples, 0.07%)</title><rect x="932.3" y="53" width="0.8" height="15.0" fill="rgb(243,171,5)" rx="2" ry="2" />
<text  x="935.28" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (1 samples, 0.04%)</title><rect x="438.4" y="117" width="0.4" height="15.0" fill="rgb(241,11,33)" rx="2" ry="2" />
<text  x="441.39" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (15 samples, 0.55%)</title><rect x="359.9" y="53" width="6.5" height="15.0" fill="rgb(247,33,7)" rx="2" ry="2" />
<text  x="362.95" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:397 (1 samples, 0.04%)</title><rect x="957.3" y="53" width="0.4" height="15.0" fill="rgb(212,99,15)" rx="2" ry="2" />
<text  x="960.28" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4149 (13 samples, 0.47%)</title><rect x="604.3" y="133" width="5.6" height="15.0" fill="rgb(214,140,50)" rx="2" ry="2" />
<text  x="607.31" y="143.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (12 samples, 0.44%)</title><rect x="990.5" y="85" width="5.1" height="15.0" fill="rgb(247,122,23)" rx="2" ry="2" />
<text  x="993.46" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1652 (1 samples, 0.04%)</title><rect x="929.7" y="69" width="0.4" height="15.0" fill="rgb(227,117,8)" rx="2" ry="2" />
<text  x="932.69" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:162 (13 samples, 0.47%)</title><rect x="982.7" y="101" width="5.6" height="15.0" fill="rgb(248,55,43)" rx="2" ry="2" />
<text  x="985.70" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1613 (1 samples, 0.04%)</title><rect x="380.6" y="69" width="0.5" height="15.0" fill="rgb(248,7,7)" rx="2" ry="2" />
<text  x="383.64" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1232 (572 samples, 20.89%)</title><rect x="191.0" y="85" width="246.5" height="15.0" fill="rgb(232,19,36)" rx="2" ry="2" />
<text  x="194.01" y="95.5" >java.math.MutableBigInteger.divi..</text>
</g>
<g >
<title>java.math.BigInteger.getInt:4745 (2 samples, 0.07%)</title><rect x="1013.3" y="101" width="0.9" height="15.0" fill="rgb(222,87,29)" rx="2" ry="2" />
<text  x="1016.30" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4160 (10 samples, 0.37%)</title><rect x="479.8" y="133" width="4.3" height="15.0" fill="rgb(227,15,12)" rx="2" ry="2" />
<text  x="482.76" y="143.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (2 samples, 0.07%)</title><rect x="590.1" y="101" width="0.8" height="15.0" fill="rgb(216,108,37)" rx="2" ry="2" />
<text  x="593.09" y="111.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.beforeIteration:131 (1 samples, 0.04%)</title><rect x="1184.4" y="341" width="0.4" height="15.0" fill="rgb(246,66,18)" rx="2" ry="2" />
<text  x="1187.40" y="351.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1138 (3 samples, 0.11%)</title><rect x="1005.5" y="101" width="1.3" height="15.0" fill="rgb(245,90,17)" rx="2" ry="2" />
<text  x="1008.54" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (3 samples, 0.11%)</title><rect x="752.6" y="53" width="1.3" height="15.0" fill="rgb(231,143,13)" rx="2" ry="2" />
<text  x="755.56" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (6 samples, 0.22%)</title><rect x="491.0" y="85" width="2.6" height="15.0" fill="rgb(254,226,44)" rx="2" ry="2" />
<text  x="493.96" y="95.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.readBytes:-1 (4 samples, 0.15%)</title><rect x="1186.6" y="437" width="1.7" height="15.0" fill="rgb(216,16,9)" rx="2" ry="2" />
<text  x="1189.55" y="447.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.toString:453 (3 samples, 0.11%)</title><rect x="1089.2" y="149" width="1.2" height="15.0" fill="rgb(252,91,30)" rx="2" ry="2" />
<text  x="1092.15" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1526 (1 samples, 0.04%)</title><rect x="785.3" y="69" width="0.4" height="15.0" fill="rgb(219,0,0)" rx="2" ry="2" />
<text  x="788.32" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (1 samples, 0.04%)</title><rect x="1015.9" y="117" width="0.4" height="15.0" fill="rgb(229,134,19)" rx="2" ry="2" />
<text  x="1018.89" y="127.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:147 (3 samples, 0.11%)</title><rect x="499.2" y="117" width="1.2" height="15.0" fill="rgb(205,168,54)" rx="2" ry="2" />
<text  x="502.15" y="127.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine$RequestHook.execute:69 (8 samples, 0.29%)</title><rect x="1180.9" y="373" width="3.5" height="15.0" fill="rgb(224,144,25)" rx="2" ry="2" />
<text  x="1183.95" y="383.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (2,714 samples, 99.12%)</title><rect x="10.0" y="373" width="1169.7" height="15.0" fill="rgb(229,106,32)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:510 (1 samples, 0.04%)</title><rect x="1094.3" y="149" width="0.5" height="15.0" fill="rgb(234,210,42)" rx="2" ry="2" />
<text  x="1097.32" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4177 (56 samples, 2.05%)</title><rect x="523.3" y="133" width="24.1" height="15.0" fill="rgb(239,173,10)" rx="2" ry="2" />
<text  x="526.29" y="143.5" >j..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:233 (5 samples, 0.18%)</title><rect x="1184.4" y="405" width="2.2" height="15.0" fill="rgb(216,170,47)" rx="2" ry="2" />
<text  x="1187.40" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1510 (4 samples, 0.15%)</title><rect x="778.9" y="69" width="1.7" height="15.0" fill="rgb(217,8,2)" rx="2" ry="2" />
<text  x="781.85" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1563 (5 samples, 0.18%)</title><rect x="863.8" y="69" width="2.1" height="15.0" fill="rgb(216,205,16)" rx="2" ry="2" />
<text  x="866.75" y="79.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:249 (5 samples, 0.18%)</title><rect x="1095.2" y="133" width="2.1" height="15.0" fill="rgb(250,225,8)" rx="2" ry="2" />
<text  x="1098.19" y="143.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (3 samples, 0.11%)</title><rect x="494.0" y="69" width="1.3" height="15.0" fill="rgb(229,175,23)" rx="2" ry="2" />
<text  x="496.98" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:121 (1 samples, 0.04%)</title><rect x="631.9" y="117" width="0.4" height="15.0" fill="rgb(229,38,40)" rx="2" ry="2" />
<text  x="634.89" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1152 (797 samples, 29.11%)</title><rect x="94.0" y="117" width="343.5" height="15.0" fill="rgb(220,34,43)" rx="2" ry="2" />
<text  x="97.04" y="127.5" >java.math.MutableBigInteger.divide:1152</text>
</g>
<g >
<title>java.math.BigInteger.toString:4204 (1,174 samples, 42.88%)</title><rect x="581.5" y="149" width="505.9" height="15.0" fill="rgb(235,98,15)" rx="2" ry="2" />
<text  x="584.47" y="159.5" >java.math.BigInteger.toString:4204</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (11 samples, 0.40%)</title><rect x="604.7" y="117" width="4.8" height="15.0" fill="rgb(230,118,50)" rx="2" ry="2" />
<text  x="607.74" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (2 samples, 0.07%)</title><rect x="492.7" y="69" width="0.9" height="15.0" fill="rgb(230,223,36)" rx="2" ry="2" />
<text  x="495.69" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4746 (1 samples, 0.04%)</title><rect x="1014.2" y="101" width="0.4" height="15.0" fill="rgb(242,165,18)" rx="2" ry="2" />
<text  x="1017.16" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:397 (1 samples, 0.04%)</title><rect x="971.1" y="53" width="0.4" height="15.0" fill="rgb(248,10,17)" rx="2" ry="2" />
<text  x="974.07" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1547 (15 samples, 0.55%)</title><rect x="269.9" y="69" width="6.4" height="15.0" fill="rgb(216,8,7)" rx="2" ry="2" />
<text  x="272.88" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (7 samples, 0.26%)</title><rect x="1069.3" y="85" width="3.0" height="15.0" fill="rgb(228,188,48)" rx="2" ry="2" />
<text  x="1072.33" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:585 (2 samples, 0.07%)</title><rect x="1024.1" y="101" width="0.8" height="15.0" fill="rgb(226,194,12)" rx="2" ry="2" />
<text  x="1027.08" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1486 (1 samples, 0.04%)</title><rect x="730.2" y="69" width="0.4" height="15.0" fill="rgb(209,68,36)" rx="2" ry="2" />
<text  x="733.15" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (19 samples, 0.69%)</title><rect x="1004.3" y="117" width="8.1" height="15.0" fill="rgb(248,201,18)" rx="2" ry="2" />
<text  x="1007.25" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1511 (4 samples, 0.15%)</title><rect x="780.6" y="69" width="1.7" height="15.0" fill="rgb(231,1,46)" rx="2" ry="2" />
<text  x="783.58" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4150 (55 samples, 2.01%)</title><rect x="70.3" y="133" width="23.7" height="15.0" fill="rgb(206,71,1)" rx="2" ry="2" />
<text  x="73.34" y="143.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:361 (6 samples, 0.22%)</title><rect x="188.0" y="69" width="2.6" height="15.0" fill="rgb(230,173,49)" rx="2" ry="2" />
<text  x="190.99" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (14 samples, 0.51%)</title><rect x="517.3" y="101" width="6.0" height="15.0" fill="rgb(242,206,8)" rx="2" ry="2" />
<text  x="520.25" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1502 (3 samples, 0.11%)</title><rect x="776.3" y="69" width="1.3" height="15.0" fill="rgb(206,117,43)" rx="2" ry="2" />
<text  x="779.27" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:406 (2 samples, 0.07%)</title><rect x="972.4" y="53" width="0.8" height="15.0" fill="rgb(247,79,19)" rx="2" ry="2" />
<text  x="975.36" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3538 (1 samples, 0.04%)</title><rect x="1068.9" y="69" width="0.4" height="15.0" fill="rgb(216,108,49)" rx="2" ry="2" />
<text  x="1071.90" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (1 samples, 0.04%)</title><rect x="465.1" y="117" width="0.4" height="15.0" fill="rgb(232,1,27)" rx="2" ry="2" />
<text  x="468.11" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (4 samples, 0.15%)</title><rect x="1073.6" y="69" width="1.8" height="15.0" fill="rgb(205,5,42)" rx="2" ry="2" />
<text  x="1076.64" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4172 (56 samples, 2.05%)</title><rect x="499.2" y="133" width="24.1" height="15.0" fill="rgb(243,153,6)" rx="2" ry="2" />
<text  x="502.15" y="143.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1637 (1 samples, 0.04%)</title><rect x="929.3" y="69" width="0.4" height="15.0" fill="rgb(244,133,48)" rx="2" ry="2" />
<text  x="932.26" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked:75 (5 samples, 0.18%)</title><rect x="1184.4" y="437" width="2.2" height="15.0" fill="rgb(248,36,20)" rx="2" ry="2" />
<text  x="1187.40" y="447.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:164 (10 samples, 0.37%)</title><rect x="479.8" y="117" width="4.3" height="15.0" fill="rgb(210,153,44)" rx="2" ry="2" />
<text  x="482.76" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4092 (54 samples, 1.97%)</title><rect x="13.9" y="165" width="23.3" height="15.0" fill="rgb(230,201,5)" rx="2" ry="2" />
<text  x="16.88" y="175.5" >j..</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (8 samples, 0.29%)</title><rect x="444.4" y="101" width="3.5" height="15.0" fill="rgb(231,64,21)" rx="2" ry="2" />
<text  x="447.42" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3538 (2 samples, 0.07%)</title><rect x="488.8" y="69" width="0.9" height="15.0" fill="rgb(207,48,9)" rx="2" ry="2" />
<text  x="491.81" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:68 (1 samples, 0.04%)</title><rect x="69.9" y="117" width="0.4" height="15.0" fill="rgb(215,51,13)" rx="2" ry="2" />
<text  x="72.91" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (5 samples, 0.18%)</title><rect x="764.2" y="53" width="2.2" height="15.0" fill="rgb(213,14,36)" rx="2" ry="2" />
<text  x="767.20" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (2 samples, 0.07%)</title><rect x="463.0" y="101" width="0.8" height="15.0" fill="rgb(211,10,39)" rx="2" ry="2" />
<text  x="465.95" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (6 samples, 0.22%)</title><rect x="750.0" y="53" width="2.6" height="15.0" fill="rgb(237,168,8)" rx="2" ry="2" />
<text  x="752.98" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (4 samples, 0.15%)</title><rect x="404.8" y="53" width="1.7" height="15.0" fill="rgb(250,25,2)" rx="2" ry="2" />
<text  x="407.77" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:760 (2 samples, 0.07%)</title><rect x="1017.2" y="101" width="0.8" height="15.0" fill="rgb(230,119,15)" rx="2" ry="2" />
<text  x="1020.18" y="111.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (50 samples, 1.83%)</title><rect x="525.9" y="117" width="21.5" height="15.0" fill="rgb(209,132,44)" rx="2" ry="2" />
<text  x="528.87" y="127.5" >j..</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:317 (2,714 samples, 99.12%)</title><rect x="10.0" y="421" width="1169.7" height="15.0" fill="rgb(205,166,46)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >java.util.concurrent.FutureTask.run:317</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (12 samples, 0.44%)</title><rect x="366.4" y="53" width="5.2" height="15.0" fill="rgb(219,64,25)" rx="2" ry="2" />
<text  x="369.41" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (33 samples, 1.21%)</title><rect x="533.2" y="101" width="14.2" height="15.0" fill="rgb(237,94,44)" rx="2" ry="2" />
<text  x="536.20" y="111.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (1 samples, 0.04%)</title><rect x="979.3" y="69" width="0.4" height="15.0" fill="rgb(215,87,31)" rx="2" ry="2" />
<text  x="982.25" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1494 (6 samples, 0.22%)</title><rect x="754.3" y="69" width="2.6" height="15.0" fill="rgb(254,46,9)" rx="2" ry="2" />
<text  x="757.29" y="79.5" ></text>
</g>
<g >
<title>java.io.FilterInputStream.read:95 (4 samples, 0.15%)</title><rect x="1188.3" y="453" width="1.7" height="15.0" fill="rgb(249,150,35)" rx="2" ry="2" />
<text  x="1191.28" y="463.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (101 samples, 3.69%)</title><rect x="122.1" y="69" width="43.5" height="15.0" fill="rgb(206,5,37)" rx="2" ry="2" />
<text  x="125.05" y="79.5" >java..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1623 (41 samples, 1.50%)</title><rect x="909.4" y="69" width="17.7" height="15.0" fill="rgb(227,123,32)" rx="2" ry="2" />
<text  x="912.44" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (25 samples, 0.91%)</title><rect x="1023.6" y="117" width="10.8" height="15.0" fill="rgb(253,43,5)" rx="2" ry="2" />
<text  x="1026.64" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1467 (4 samples, 0.15%)</title><rect x="760.8" y="53" width="1.7" height="15.0" fill="rgb(223,153,46)" rx="2" ry="2" />
<text  x="763.75" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (3 samples, 0.11%)</title><rect x="1007.3" y="101" width="1.3" height="15.0" fill="rgb(226,51,24)" rx="2" ry="2" />
<text  x="1010.27" y="111.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:238 (8 samples, 0.29%)</title><rect x="1180.9" y="389" width="3.5" height="15.0" fill="rgb(216,165,5)" rx="2" ry="2" />
<text  x="1183.95" y="399.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4167 (26 samples, 0.95%)</title><rect x="1023.2" y="133" width="11.2" height="15.0" fill="rgb(226,48,13)" rx="2" ry="2" />
<text  x="1026.21" y="143.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (1 samples, 0.04%)</title><rect x="495.3" y="69" width="0.4" height="15.0" fill="rgb(237,55,23)" rx="2" ry="2" />
<text  x="498.27" y="79.5" ></text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:578 (2,714 samples, 99.12%)</title><rect x="10.0" y="341" width="1169.7" height="15.0" fill="rgb(240,181,44)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >java.lang.reflect.Method.invoke:578</text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (6 samples, 0.22%)</title><rect x="1001.2" y="101" width="2.6" height="15.0" fill="rgb(230,124,28)" rx="2" ry="2" />
<text  x="1004.23" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:397 (3 samples, 0.11%)</title><rect x="420.7" y="53" width="1.3" height="15.0" fill="rgb(243,110,39)" rx="2" ry="2" />
<text  x="423.72" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1232 (569 samples, 20.78%)</title><rect x="728.0" y="85" width="245.2" height="15.0" fill="rgb(211,55,42)" rx="2" ry="2" />
<text  x="731.00" y="95.5" >java.math.MutableBigInteger.divi..</text>
</g>
<g >
<title>org.sample.SM2Util.bigIntegerToHex:67 (2 samples, 0.07%)</title><rect x="553.0" y="181" width="0.9" height="15.0" fill="rgb(238,227,10)" rx="2" ry="2" />
<text  x="556.02" y="191.5" ></text>
</g>
<g >
<title>java.security.KeyPair.getPublic:73 (1 samples, 0.04%)</title><rect x="10.4" y="197" width="0.5" height="15.0" fill="rgb(251,112,13)" rx="2" ry="2" />
<text  x="13.43" y="207.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (2 samples, 0.07%)</title><rect x="1027.5" y="69" width="0.9" height="15.0" fill="rgb(215,193,18)" rx="2" ry="2" />
<text  x="1030.52" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4099 (1,184 samples, 43.24%)</title><rect x="37.2" y="165" width="510.2" height="15.0" fill="rgb(222,92,33)" rx="2" ry="2" />
<text  x="40.15" y="175.5" >java.math.BigInteger.toString:4099</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1498 (2 samples, 0.07%)</title><rect x="758.2" y="69" width="0.8" height="15.0" fill="rgb(249,31,25)" rx="2" ry="2" />
<text  x="761.17" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.afterIteration:146 (4 samples, 0.15%)</title><rect x="1184.8" y="341" width="1.8" height="15.0" fill="rgb(231,2,43)" rx="2" ry="2" />
<text  x="1187.83" y="351.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (1 samples, 0.04%)</title><rect x="244.9" y="53" width="0.4" height="15.0" fill="rgb(232,6,33)" rx="2" ry="2" />
<text  x="247.88" y="63.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:503 (8 samples, 0.29%)</title><rect x="1180.9" y="421" width="3.5" height="15.0" fill="rgb(208,58,44)" rx="2" ry="2" />
<text  x="1183.95" y="431.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:547 (1 samples, 0.04%)</title><rect x="939.6" y="53" width="0.4" height="15.0" fill="rgb(232,217,51)" rx="2" ry="2" />
<text  x="942.61" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3824 (1 samples, 0.04%)</title><rect x="522.9" y="85" width="0.4" height="15.0" fill="rgb(220,42,54)" rx="2" ry="2" />
<text  x="525.86" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1152 (791 samples, 28.89%)</title><rect x="632.3" y="117" width="340.9" height="15.0" fill="rgb(233,167,34)" rx="2" ry="2" />
<text  x="635.32" y="127.5" >java.math.MutableBigInteger.divide:1152</text>
</g>
<g >
<title>java.lang.String.length:1499 (1 samples, 0.04%)</title><rect x="1024.5" y="85" width="0.4" height="15.0" fill="rgb(241,164,27)" rx="2" ry="2" />
<text  x="1027.51" y="95.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:247 (5 samples, 0.18%)</title><rect x="1129.2" y="133" width="2.2" height="15.0" fill="rgb(219,92,5)" rx="2" ry="2" />
<text  x="1132.23" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (17 samples, 0.62%)</title><rect x="988.3" y="101" width="7.3" height="15.0" fill="rgb(234,4,20)" rx="2" ry="2" />
<text  x="991.31" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1508 (1 samples, 0.04%)</title><rect x="245.3" y="69" width="0.4" height="15.0" fill="rgb(210,77,31)" rx="2" ry="2" />
<text  x="248.31" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:533 (1 samples, 0.04%)</title><rect x="1170.6" y="149" width="0.4" height="15.0" fill="rgb(226,37,21)" rx="2" ry="2" />
<text  x="1173.61" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4101 (7 samples, 0.26%)</title><rect x="1087.4" y="165" width="3.0" height="15.0" fill="rgb(223,147,9)" rx="2" ry="2" />
<text  x="1090.43" y="175.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (61 samples, 2.23%)</title><rect x="687.5" y="53" width="26.3" height="15.0" fill="rgb(209,121,28)" rx="2" ry="2" />
<text  x="690.49" y="63.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:249 (1 samples, 0.04%)</title><rect x="168.2" y="69" width="0.4" height="15.0" fill="rgb(233,215,10)" rx="2" ry="2" />
<text  x="171.17" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3181 (7 samples, 0.26%)</title><rect x="459.1" y="85" width="3.0" height="15.0" fill="rgb(234,80,47)" rx="2" ry="2" />
<text  x="462.07" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:248 (2 samples, 0.07%)</title><rect x="713.8" y="69" width="0.8" height="15.0" fill="rgb(251,135,23)" rx="2" ry="2" />
<text  x="716.78" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.longValue:4349 (16 samples, 0.58%)</title><rect x="472.9" y="117" width="6.9" height="15.0" fill="rgb(214,52,20)" rx="2" ry="2" />
<text  x="475.86" y="127.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:281 (5 samples, 0.18%)</title><rect x="1184.4" y="389" width="2.2" height="15.0" fill="rgb(232,195,9)" rx="2" ry="2" />
<text  x="1187.40" y="399.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1192 (4 samples, 0.15%)</title><rect x="119.0" y="85" width="1.8" height="15.0" fill="rgb(244,82,15)" rx="2" ry="2" />
<text  x="122.04" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4163 (4 samples, 0.15%)</title><rect x="1021.5" y="133" width="1.7" height="15.0" fill="rgb(209,67,48)" rx="2" ry="2" />
<text  x="1024.49" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:585 (1 samples, 0.04%)</title><rect x="525.9" y="101" width="0.4" height="15.0" fill="rgb(222,140,13)" rx="2" ry="2" />
<text  x="528.87" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (6 samples, 0.22%)</title><rect x="876.3" y="53" width="2.5" height="15.0" fill="rgb(241,227,42)" rx="2" ry="2" />
<text  x="879.25" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1139 (1 samples, 0.04%)</title><rect x="444.0" y="101" width="0.4" height="15.0" fill="rgb(217,106,17)" rx="2" ry="2" />
<text  x="446.99" y="111.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_thrpt_jmhStub:119 (2,694 samples, 98.39%)</title><rect x="10.0" y="229" width="1161.0" height="15.0" fill="rgb(234,0,50)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_thrpt_jmhStub:119</text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:359 (37 samples, 1.35%)</title><rect x="172.0" y="69" width="16.0" height="15.0" fill="rgb(222,163,42)" rx="2" ry="2" />
<text  x="175.05" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1578 (12 samples, 0.44%)</title><rect x="339.7" y="69" width="5.2" height="15.0" fill="rgb(220,181,38)" rx="2" ry="2" />
<text  x="342.69" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (4 samples, 0.15%)</title><rect x="453.5" y="85" width="1.7" height="15.0" fill="rgb(254,173,41)" rx="2" ry="2" />
<text  x="456.47" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (50 samples, 1.83%)</title><rect x="200.1" y="53" width="21.5" height="15.0" fill="rgb(210,201,12)" rx="2" ry="2" />
<text  x="203.06" y="63.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1508 (1 samples, 0.04%)</title><rect x="778.4" y="69" width="0.5" height="15.0" fill="rgb(230,126,9)" rx="2" ry="2" />
<text  x="781.42" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:550 (3 samples, 0.11%)</title><rect x="408.6" y="53" width="1.3" height="15.0" fill="rgb(234,185,25)" rx="2" ry="2" />
<text  x="411.65" y="63.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:164 (7 samples, 0.26%)</title><rect x="1060.7" y="117" width="3.0" height="15.0" fill="rgb(236,46,39)" rx="2" ry="2" />
<text  x="1063.71" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1220 (52 samples, 1.90%)</title><rect x="168.6" y="85" width="22.4" height="15.0" fill="rgb(239,32,38)" rx="2" ry="2" />
<text  x="171.60" y="95.5" >j..</text>
</g>
<g >
<title>java.util.Arrays.copyOf:3537 (1 samples, 0.04%)</title><rect x="488.4" y="69" width="0.4" height="15.0" fill="rgb(207,41,21)" rx="2" ry="2" />
<text  x="491.38" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1538 (10 samples, 0.37%)</title><rect x="793.9" y="69" width="4.3" height="15.0" fill="rgb(219,1,37)" rx="2" ry="2" />
<text  x="796.94" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (1 samples, 0.04%)</title><rect x="93.6" y="117" width="0.4" height="15.0" fill="rgb(233,169,17)" rx="2" ry="2" />
<text  x="96.61" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1141 (1 samples, 0.04%)</title><rect x="469.8" y="101" width="0.5" height="15.0" fill="rgb(235,174,48)" rx="2" ry="2" />
<text  x="472.85" y="111.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitForInterruptibly:-1 (4 samples, 0.15%)</title><rect x="1184.8" y="277" width="1.8" height="15.0" fill="rgb(212,42,33)" rx="2" ry="2" />
<text  x="1187.83" y="287.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1616 (1 samples, 0.04%)</title><rect x="907.7" y="69" width="0.4" height="15.0" fill="rgb(229,98,25)" rx="2" ry="2" />
<text  x="910.71" y="79.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (2 samples, 0.07%)</title><rect x="579.3" y="117" width="0.9" height="15.0" fill="rgb(219,117,50)" rx="2" ry="2" />
<text  x="582.31" y="127.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:164 (15 samples, 0.55%)</title><rect x="516.8" y="117" width="6.5" height="15.0" fill="rgb(248,35,14)" rx="2" ry="2" />
<text  x="519.82" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1495 (1 samples, 0.04%)</title><rect x="756.9" y="69" width="0.4" height="15.0" fill="rgb(213,65,7)" rx="2" ry="2" />
<text  x="759.87" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.doSingle:138 (5 samples, 0.18%)</title><rect x="1184.4" y="421" width="2.2" height="15.0" fill="rgb(217,61,6)" rx="2" ry="2" />
<text  x="1187.40" y="431.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1496 (3 samples, 0.11%)</title><rect x="231.1" y="69" width="1.3" height="15.0" fill="rgb(229,82,8)" rx="2" ry="2" />
<text  x="234.09" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1501 (1 samples, 0.04%)</title><rect x="775.8" y="69" width="0.5" height="15.0" fill="rgb(215,62,35)" rx="2" ry="2" />
<text  x="778.84" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:263 (3 samples, 0.11%)</title><rect x="1071.1" y="69" width="1.2" height="15.0" fill="rgb(223,50,4)" rx="2" ry="2" />
<text  x="1074.05" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4101 (13 samples, 0.47%)</title><rect x="547.4" y="165" width="5.6" height="15.0" fill="rgb(243,203,5)" rx="2" ry="2" />
<text  x="550.42" y="175.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1156 (1 samples, 0.04%)</title><rect x="653.4" y="101" width="0.5" height="15.0" fill="rgb(254,143,54)" rx="2" ry="2" />
<text  x="656.44" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:99 (2 samples, 0.07%)</title><rect x="36.3" y="133" width="0.9" height="15.0" fill="rgb(249,98,39)" rx="2" ry="2" />
<text  x="39.29" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (4 samples, 0.15%)</title><rect x="225.5" y="53" width="1.7" height="15.0" fill="rgb(235,196,3)" rx="2" ry="2" />
<text  x="228.49" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:528 (31 samples, 1.13%)</title><rect x="1149.9" y="149" width="13.4" height="15.0" fill="rgb(209,168,10)" rx="2" ry="2" />
<text  x="1152.92" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1654 (15 samples, 0.55%)</title><rect x="400.0" y="69" width="6.5" height="15.0" fill="rgb(234,9,12)" rx="2" ry="2" />
<text  x="403.03" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1635 (2 samples, 0.07%)</title><rect x="928.4" y="69" width="0.9" height="15.0" fill="rgb(239,180,19)" rx="2" ry="2" />
<text  x="931.40" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3822 (1 samples, 0.04%)</title><rect x="1021.1" y="85" width="0.4" height="15.0" fill="rgb(210,130,15)" rx="2" ry="2" />
<text  x="1024.06" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1536 (2 samples, 0.07%)</title><rect x="261.3" y="69" width="0.8" height="15.0" fill="rgb(215,127,54)" rx="2" ry="2" />
<text  x="264.26" y="79.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (3 samples, 0.11%)</title><rect x="442.7" y="69" width="1.3" height="15.0" fill="rgb(234,39,35)" rx="2" ry="2" />
<text  x="445.70" y="79.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.read:361 (4 samples, 0.15%)</title><rect x="1188.3" y="437" width="1.7" height="15.0" fill="rgb(252,77,34)" rx="2" ry="2" />
<text  x="1191.28" y="447.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (2 samples, 0.07%)</title><rect x="749.1" y="53" width="0.9" height="15.0" fill="rgb(208,64,54)" rx="2" ry="2" />
<text  x="752.12" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:582 (1 samples, 0.04%)</title><rect x="1023.6" y="101" width="0.5" height="15.0" fill="rgb(248,173,31)" rx="2" ry="2" />
<text  x="1026.64" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1528 (13 samples, 0.47%)</title><rect x="253.1" y="69" width="5.6" height="15.0" fill="rgb(227,224,5)" rx="2" ry="2" />
<text  x="256.07" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (8 samples, 0.29%)</title><rect x="1018.0" y="101" width="3.5" height="15.0" fill="rgb(222,205,39)" rx="2" ry="2" />
<text  x="1021.04" y="111.5" ></text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:577 (2,714 samples, 99.12%)</title><rect x="10.0" y="405" width="1169.7" height="15.0" fill="rgb(232,148,23)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >java.util.concurrent.Executors$RunnableAdapter.call:577</text>
</g>
<g >
<title>java.io.FileInputStream.read:293 (4 samples, 0.15%)</title><rect x="1188.3" y="373" width="1.7" height="15.0" fill="rgb(215,161,46)" rx="2" ry="2" />
<text  x="1191.28" y="383.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4149 (22 samples, 0.80%)</title><rect x="60.9" y="133" width="9.4" height="15.0" fill="rgb(210,57,17)" rx="2" ry="2" />
<text  x="63.85" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1467 (1 samples, 0.04%)</title><rect x="735.8" y="53" width="0.4" height="15.0" fill="rgb(241,1,40)" rx="2" ry="2" />
<text  x="738.76" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (1 samples, 0.04%)</title><rect x="982.3" y="101" width="0.4" height="15.0" fill="rgb(210,140,49)" rx="2" ry="2" />
<text  x="985.27" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1192 (9 samples, 0.33%)</title><rect x="655.6" y="85" width="3.9" height="15.0" fill="rgb(213,93,43)" rx="2" ry="2" />
<text  x="658.60" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (66 samples, 2.41%)</title><rect x="975.4" y="117" width="28.4" height="15.0" fill="rgb(236,124,42)" rx="2" ry="2" />
<text  x="978.38" y="127.5" >ja..</text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4170 (7 samples, 0.26%)</title><rect x="1034.4" y="133" width="3.0" height="15.0" fill="rgb(234,218,38)" rx="2" ry="2" />
<text  x="1037.42" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:356 (1 samples, 0.04%)</title><rect x="171.6" y="69" width="0.4" height="15.0" fill="rgb(221,218,38)" rx="2" ry="2" />
<text  x="174.61" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (58 samples, 2.12%)</title><rect x="438.8" y="117" width="25.0" height="15.0" fill="rgb(231,218,35)" rx="2" ry="2" />
<text  x="441.82" y="127.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:407 (1 samples, 0.04%)</title><rect x="437.1" y="53" width="0.4" height="15.0" fill="rgb(219,137,52)" rx="2" ry="2" />
<text  x="440.09" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1557 (7 samples, 0.26%)</title><rect x="859.4" y="69" width="3.1" height="15.0" fill="rgb(252,169,39)" rx="2" ry="2" />
<text  x="862.44" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1565 (4 samples, 0.15%)</title><rect x="337.5" y="69" width="1.8" height="15.0" fill="rgb(251,100,15)" rx="2" ry="2" />
<text  x="340.54" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4133 (1 samples, 0.04%)</title><rect x="582.8" y="133" width="0.4" height="15.0" fill="rgb(254,85,21)" rx="2" ry="2" />
<text  x="585.76" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (31 samples, 1.13%)</title><rect x="590.9" y="117" width="13.4" height="15.0" fill="rgb(250,182,21)" rx="2" ry="2" />
<text  x="593.95" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (2 samples, 0.07%)</title><rect x="971.5" y="53" width="0.9" height="15.0" fill="rgb(215,155,17)" rx="2" ry="2" />
<text  x="974.50" y="63.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (41 samples, 1.50%)</title><rect x="1039.2" y="117" width="17.6" height="15.0" fill="rgb(212,81,18)" rx="2" ry="2" />
<text  x="1042.16" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:396 (3 samples, 0.11%)</title><rect x="434.1" y="53" width="1.3" height="15.0" fill="rgb(233,132,2)" rx="2" ry="2" />
<text  x="437.08" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4172 (61 samples, 2.23%)</title><rect x="1037.4" y="133" width="26.3" height="15.0" fill="rgb(234,12,54)" rx="2" ry="2" />
<text  x="1040.44" y="143.5" >j..</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1138 (2 samples, 0.07%)</title><rect x="978.8" y="101" width="0.9" height="15.0" fill="rgb(216,209,18)" rx="2" ry="2" />
<text  x="981.82" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.length:1499 (3 samples, 0.11%)</title><rect x="486.2" y="85" width="1.3" height="15.0" fill="rgb(227,38,11)" rx="2" ry="2" />
<text  x="489.22" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4148 (31 samples, 1.13%)</title><rect x="47.5" y="133" width="13.4" height="15.0" fill="rgb(252,18,8)" rx="2" ry="2" />
<text  x="50.49" y="143.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:250 (2 samples, 0.07%)</title><rect x="1097.3" y="133" width="0.9" height="15.0" fill="rgb(242,154,46)" rx="2" ry="2" />
<text  x="1100.34" y="143.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:527 (48 samples, 1.75%)</title><rect x="1129.2" y="149" width="20.7" height="15.0" fill="rgb(210,145,22)" rx="2" ry="2" />
<text  x="1132.23" y="159.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:147 (2 samples, 0.07%)</title><rect x="1037.4" y="117" width="0.9" height="15.0" fill="rgb(222,95,33)" rx="2" ry="2" />
<text  x="1040.44" y="127.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_thrpt_jmhStub:121 (19 samples, 0.69%)</title><rect x="1171.0" y="229" width="8.2" height="15.0" fill="rgb(206,166,32)" rx="2" ry="2" />
<text  x="1174.04" y="239.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:100 (46 samples, 1.68%)</title><rect x="559.5" y="133" width="19.8" height="15.0" fill="rgb(240,212,42)" rx="2" ry="2" />
<text  x="562.49" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4748 (1 samples, 0.04%)</title><rect x="479.3" y="101" width="0.5" height="15.0" fill="rgb(243,155,31)" rx="2" ry="2" />
<text  x="482.33" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4746 (6 samples, 0.22%)</title><rect x="476.7" y="101" width="2.6" height="15.0" fill="rgb(242,47,37)" rx="2" ry="2" />
<text  x="479.74" y="111.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.execute:191 (1 samples, 0.04%)</title><rect x="1184.4" y="325" width="0.4" height="15.0" fill="rgb(252,59,14)" rx="2" ry="2" />
<text  x="1187.40" y="335.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.fill:255 (4 samples, 0.15%)</title><rect x="1188.3" y="389" width="1.7" height="15.0" fill="rgb(252,25,24)" rx="2" ry="2" />
<text  x="1191.28" y="399.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4743 (3 samples, 0.11%)</title><rect x="474.2" y="101" width="1.2" height="15.0" fill="rgb(212,48,2)" rx="2" ry="2" />
<text  x="477.16" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4204 (1,184 samples, 43.24%)</title><rect x="37.2" y="149" width="510.2" height="15.0" fill="rgb(248,56,38)" rx="2" ry="2" />
<text  x="40.15" y="159.5" >java.math.BigInteger.toString:4204</text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedRunner.run:72 (5 samples, 0.18%)</title><rect x="1184.4" y="453" width="2.2" height="15.0" fill="rgb(239,98,1)" rx="2" ry="2" />
<text  x="1187.40" y="463.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4554 (1 samples, 0.04%)</title><rect x="481.5" y="85" width="0.4" height="15.0" fill="rgb(232,159,6)" rx="2" ry="2" />
<text  x="484.48" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (35 samples, 1.28%)</title><rect x="1072.3" y="101" width="15.1" height="15.0" fill="rgb(248,23,17)" rx="2" ry="2" />
<text  x="1075.34" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.bitLength:3837 (1 samples, 0.04%)</title><rect x="555.6" y="149" width="0.4" height="15.0" fill="rgb(247,206,24)" rx="2" ry="2" />
<text  x="558.61" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:248 (6 samples, 0.22%)</title><rect x="165.6" y="69" width="2.6" height="15.0" fill="rgb(207,6,51)" rx="2" ry="2" />
<text  x="168.58" y="79.5" ></text>
</g>
<g >
<title>all (2,738 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(207,133,49)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DirectMethodHandleAccessor.invoke:104 (2,714 samples, 99.12%)</title><rect x="10.0" y="325" width="1169.7" height="15.0" fill="rgb(238,87,18)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >jdk.internal.reflect.DirectMethodHandleAccessor.invoke:104</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (8 samples, 0.29%)</title><rect x="1024.9" y="101" width="3.5" height="15.0" fill="rgb(235,113,3)" rx="2" ry="2" />
<text  x="1027.94" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1492 (8 samples, 0.29%)</title><rect x="732.3" y="69" width="3.5" height="15.0" fill="rgb(232,159,5)" rx="2" ry="2" />
<text  x="735.31" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1553 (5 samples, 0.18%)</title><rect x="278.1" y="69" width="2.1" height="15.0" fill="rgb(238,147,50)" rx="2" ry="2" />
<text  x="281.06" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (1 samples, 0.04%)</title><rect x="493.1" y="53" width="0.5" height="15.0" fill="rgb(223,109,13)" rx="2" ry="2" />
<text  x="496.12" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:701 (8 samples, 0.29%)</title><rect x="411.7" y="37" width="3.4" height="15.0" fill="rgb(229,105,47)" rx="2" ry="2" />
<text  x="414.67" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1513 (2 samples, 0.07%)</title><rect x="250.9" y="69" width="0.9" height="15.0" fill="rgb(249,27,33)" rx="2" ry="2" />
<text  x="253.91" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.longValue:4349 (7 samples, 0.26%)</title><rect x="1012.4" y="117" width="3.1" height="15.0" fill="rgb(225,167,48)" rx="2" ry="2" />
<text  x="1015.44" y="127.5" ></text>
</g>
<g >
<title>jdk.internal.util.ArraysSupport.newLength:638 (2 samples, 0.07%)</title><rect x="531.0" y="53" width="0.9" height="15.0" fill="rgb(232,163,17)" rx="2" ry="2" />
<text  x="534.04" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.toUpperCase:3487 (183 samples, 6.68%)</title><rect x="1092.2" y="165" width="78.8" height="15.0" fill="rgb(223,123,18)" rx="2" ry="2" />
<text  x="1095.17" y="175.5" >java.lang..</text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:699 (1 samples, 0.04%)</title><rect x="410.4" y="37" width="0.4" height="15.0" fill="rgb(233,137,38)" rx="2" ry="2" />
<text  x="413.37" y="47.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (10 samples, 0.37%)</title><rect x="1030.1" y="85" width="4.3" height="15.0" fill="rgb(211,83,36)" rx="2" ry="2" />
<text  x="1033.11" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.bitLength:3816 (2 samples, 0.07%)</title><rect x="554.7" y="149" width="0.9" height="15.0" fill="rgb(218,75,3)" rx="2" ry="2" />
<text  x="557.75" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:162 (11 samples, 0.40%)</title><rect x="447.9" y="101" width="4.7" height="15.0" fill="rgb(218,156,42)" rx="2" ry="2" />
<text  x="450.87" y="111.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:421 (4 samples, 0.15%)</title><rect x="1184.8" y="373" width="1.8" height="15.0" fill="rgb(210,115,6)" rx="2" ry="2" />
<text  x="1187.83" y="383.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1158 (741 samples, 27.06%)</title><rect x="653.9" y="101" width="319.3" height="15.0" fill="rgb(216,179,50)" rx="2" ry="2" />
<text  x="656.87" y="111.5" >java.math.MutableBigInteger.divide:1158</text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedMain.main:86 (5 samples, 0.18%)</title><rect x="1184.4" y="469" width="2.2" height="15.0" fill="rgb(207,47,34)" rx="2" ry="2" />
<text  x="1187.40" y="479.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.compare:266 (6 samples, 0.22%)</title><rect x="656.5" y="69" width="2.5" height="15.0" fill="rgb(232,15,50)" rx="2" ry="2" />
<text  x="659.46" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:362 (1 samples, 0.04%)</title><rect x="190.6" y="69" width="0.4" height="15.0" fill="rgb(239,127,39)" rx="2" ry="2" />
<text  x="193.58" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (4 samples, 0.15%)</title><rect x="468.1" y="101" width="1.7" height="15.0" fill="rgb(239,0,37)" rx="2" ry="2" />
<text  x="471.12" y="111.5" ></text>
</g>
<g >
<title>sun.security.ec.ECPublicKeyImpl.getW:84 (2 samples, 0.07%)</title><rect x="1090.4" y="181" width="0.9" height="15.0" fill="rgb(206,4,51)" rx="2" ry="2" />
<text  x="1093.45" y="191.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1605 (3 samples, 0.11%)</title><rect x="378.9" y="69" width="1.3" height="15.0" fill="rgb(207,116,28)" rx="2" ry="2" />
<text  x="381.91" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4748 (2 samples, 0.07%)</title><rect x="1014.6" y="101" width="0.9" height="15.0" fill="rgb(246,55,33)" rx="2" ry="2" />
<text  x="1017.59" y="111.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:511 (8 samples, 0.29%)</title><rect x="1094.8" y="149" width="3.4" height="15.0" fill="rgb(228,70,24)" rx="2" ry="2" />
<text  x="1097.76" y="159.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:159 (9 samples, 0.33%)</title><rect x="1056.8" y="117" width="3.9" height="15.0" fill="rgb(220,29,46)" rx="2" ry="2" />
<text  x="1059.83" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4151 (797 samples, 29.11%)</title><rect x="94.0" y="133" width="343.5" height="15.0" fill="rgb(244,4,53)" rx="2" ry="2" />
<text  x="97.04" y="143.5" >java.math.BigInteger.smallToString:4151</text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (4 samples, 0.15%)</title><rect x="762.5" y="53" width="1.7" height="15.0" fill="rgb(224,142,33)" rx="2" ry="2" />
<text  x="765.48" y="63.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:317 (2,714 samples, 99.12%)</title><rect x="10.0" y="389" width="1169.7" height="15.0" fill="rgb(220,58,31)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >java.util.concurrent.FutureTask.run:317</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (2,714 samples, 99.12%)</title><rect x="10.0" y="357" width="1169.7" height="15.0" fill="rgb(244,54,26)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4150 (52 samples, 1.90%)</title><rect x="609.9" y="133" width="22.4" height="15.0" fill="rgb(215,128,33)" rx="2" ry="2" />
<text  x="612.91" y="143.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:121 (1 samples, 0.04%)</title><rect x="604.3" y="117" width="0.4" height="15.0" fill="rgb(235,221,20)" rx="2" ry="2" />
<text  x="607.31" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.canEncode:51 (31 samples, 1.13%)</title><rect x="1149.9" y="133" width="13.4" height="15.0" fill="rgb(233,128,24)" rx="2" ry="2" />
<text  x="1152.92" y="143.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:526 (51 samples, 1.86%)</title><rect x="1107.3" y="149" width="21.9" height="15.0" fill="rgb(223,134,9)" rx="2" ry="2" />
<text  x="1110.25" y="159.5" >j..</text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4155 (16 samples, 0.58%)</title><rect x="472.9" y="133" width="6.9" height="15.0" fill="rgb(212,25,24)" rx="2" ry="2" />
<text  x="475.86" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:552 (23 samples, 0.84%)</title><rect x="410.4" y="53" width="9.9" height="15.0" fill="rgb(242,192,30)" rx="2" ry="2" />
<text  x="413.37" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:241 (7 samples, 0.26%)</title><rect x="1066.3" y="85" width="3.0" height="15.0" fill="rgb(248,121,27)" rx="2" ry="2" />
<text  x="1069.31" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1537 (1 samples, 0.04%)</title><rect x="793.5" y="69" width="0.4" height="15.0" fill="rgb(220,88,39)" rx="2" ry="2" />
<text  x="796.51" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (10 samples, 0.37%)</title><rect x="518.5" y="85" width="4.4" height="15.0" fill="rgb(229,15,52)" rx="2" ry="2" />
<text  x="521.55" y="95.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (2 samples, 0.07%)</title><rect x="662.1" y="53" width="0.8" height="15.0" fill="rgb(236,193,3)" rx="2" ry="2" />
<text  x="665.06" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:102 (2 samples, 0.07%)</title><rect x="590.1" y="117" width="0.8" height="15.0" fill="rgb(247,51,39)" rx="2" ry="2" />
<text  x="593.09" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1138 (4 samples, 0.15%)</title><rect x="442.3" y="101" width="1.7" height="15.0" fill="rgb(216,154,32)" rx="2" ry="2" />
<text  x="445.26" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1205 (2 samples, 0.07%)</title><rect x="713.8" y="85" width="0.8" height="15.0" fill="rgb(251,35,41)" rx="2" ry="2" />
<text  x="716.78" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1493 (65 samples, 2.37%)</title><rect x="200.1" y="69" width="28.0" height="15.0" fill="rgb(251,63,19)" rx="2" ry="2" />
<text  x="203.06" y="79.5" >j..</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (7 samples, 0.26%)</title><rect x="1072.3" y="85" width="3.1" height="15.0" fill="rgb(230,164,38)" rx="2" ry="2" />
<text  x="1075.34" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4167 (26 samples, 0.95%)</title><rect x="484.5" y="133" width="11.2" height="15.0" fill="rgb(210,168,38)" rx="2" ry="2" />
<text  x="487.50" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (3 samples, 0.11%)</title><rect x="530.6" y="69" width="1.3" height="15.0" fill="rgb(253,202,14)" rx="2" ry="2" />
<text  x="533.61" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (1 samples, 0.04%)</title><rect x="1090.0" y="101" width="0.4" height="15.0" fill="rgb(254,93,21)" rx="2" ry="2" />
<text  x="1093.01" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4157 (1 samples, 0.04%)</title><rect x="1015.5" y="133" width="0.4" height="15.0" fill="rgb(227,178,48)" rx="2" ry="2" />
<text  x="1018.46" y="143.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.execute:191 (4 samples, 0.15%)</title><rect x="1184.8" y="325" width="1.8" height="15.0" fill="rgb(246,206,6)" rx="2" ry="2" />
<text  x="1187.83" y="335.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:760 (1 samples, 0.04%)</title><rect x="516.8" y="101" width="0.5" height="15.0" fill="rgb(246,192,31)" rx="2" ry="2" />
<text  x="519.82" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1527 (1 samples, 0.04%)</title><rect x="785.7" y="69" width="0.5" height="15.0" fill="rgb(219,101,4)" rx="2" ry="2" />
<text  x="788.75" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (2 samples, 0.07%)</title><rect x="1033.6" y="69" width="0.8" height="15.0" fill="rgb(240,221,0)" rx="2" ry="2" />
<text  x="1036.56" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4133 (4 samples, 0.15%)</title><rect x="38.0" y="133" width="1.7" height="15.0" fill="rgb(217,73,26)" rx="2" ry="2" />
<text  x="41.01" y="143.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.implRead:382 (4 samples, 0.15%)</title><rect x="1188.3" y="421" width="1.7" height="15.0" fill="rgb(232,180,24)" rx="2" ry="2" />
<text  x="1191.28" y="431.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_Throughput:83 (2,714 samples, 99.12%)</title><rect x="10.0" y="245" width="1169.7" height="15.0" fill="rgb(236,16,17)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_Throughput:83</text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$MH+0x0000000800116800.1790902997.invoke:-1 (2,714 samples, 99.12%)</title><rect x="10.0" y="277" width="1169.7" height="15.0" fill="rgb(240,196,13)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >java.lang.invoke.LambdaForm$MH+0x0000000800116800.1790902997.invoke:-1</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (4 samples, 0.15%)</title><rect x="935.7" y="53" width="1.8" height="15.0" fill="rgb(228,60,47)" rx="2" ry="2" />
<text  x="938.73" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1528 (9 samples, 0.33%)</title><rect x="786.2" y="69" width="3.9" height="15.0" fill="rgb(253,179,9)" rx="2" ry="2" />
<text  x="789.18" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (5 samples, 0.18%)</title><rect x="930.1" y="53" width="2.2" height="15.0" fill="rgb(241,97,7)" rx="2" ry="2" />
<text  x="933.12" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:650 (1 samples, 0.04%)</title><rect x="934.4" y="53" width="0.5" height="15.0" fill="rgb(231,142,40)" rx="2" ry="2" />
<text  x="937.43" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:522 (8 samples, 0.29%)</title><rect x="1098.2" y="149" width="3.5" height="15.0" fill="rgb(229,228,28)" rx="2" ry="2" />
<text  x="1101.20" y="159.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (2 samples, 0.07%)</title><rect x="1009.0" y="85" width="0.9" height="15.0" fill="rgb(242,165,32)" rx="2" ry="2" />
<text  x="1011.99" y="95.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:164 (12 samples, 0.44%)</title><rect x="1016.3" y="117" width="5.2" height="15.0" fill="rgb(252,138,2)" rx="2" ry="2" />
<text  x="1019.32" y="127.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (2 samples, 0.07%)</title><rect x="48.4" y="101" width="0.8" height="15.0" fill="rgb(223,43,7)" rx="2" ry="2" />
<text  x="51.36" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1523 (3 samples, 0.11%)</title><rect x="251.8" y="69" width="1.3" height="15.0" fill="rgb(231,125,2)" rx="2" ry="2" />
<text  x="254.78" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.InputStreamDrainer.run:80 (8 samples, 0.29%)</title><rect x="1186.6" y="469" width="3.4" height="15.0" fill="rgb(231,59,6)" rx="2" ry="2" />
<text  x="1189.55" y="479.5" ></text>
</g>
<g >
<title>java.math.BigInteger.padWithZeros:4112 (2 samples, 0.07%)</title><rect x="1022.4" y="117" width="0.8" height="15.0" fill="rgb(228,221,2)" rx="2" ry="2" />
<text  x="1025.35" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1557 (6 samples, 0.22%)</title><rect x="331.5" y="69" width="2.6" height="15.0" fill="rgb(247,47,8)" rx="2" ry="2" />
<text  x="334.50" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1488 (3 samples, 0.11%)</title><rect x="730.6" y="69" width="1.3" height="15.0" fill="rgb(210,89,54)" rx="2" ry="2" />
<text  x="733.58" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (1 samples, 0.04%)</title><rect x="1008.6" y="85" width="0.4" height="15.0" fill="rgb(212,77,32)" rx="2" ry="2" />
<text  x="1011.56" y="95.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKeyUncompressed:53 (3 samples, 0.11%)</title><rect x="10.9" y="197" width="1.3" height="15.0" fill="rgb(237,14,3)" rx="2" ry="2" />
<text  x="13.86" y="207.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.isLatin1:1692 (1 samples, 0.04%)</title><rect x="550.9" y="101" width="0.4" height="15.0" fill="rgb(252,108,51)" rx="2" ry="2" />
<text  x="553.87" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:100 (50 samples, 1.83%)</title><rect x="14.3" y="133" width="21.6" height="15.0" fill="rgb(228,140,17)" rx="2" ry="2" />
<text  x="17.31" y="143.5" >j..</text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:252 (17 samples, 0.62%)</title><rect x="1141.7" y="133" width="7.4" height="15.0" fill="rgb(238,123,36)" rx="2" ry="2" />
<text  x="1144.73" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1497 (3 samples, 0.11%)</title><rect x="232.4" y="69" width="1.3" height="15.0" fill="rgb(220,93,52)" rx="2" ry="2" />
<text  x="235.38" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4089 (4 samples, 0.15%)</title><rect x="554.3" y="165" width="1.7" height="15.0" fill="rgb(250,137,2)" rx="2" ry="2" />
<text  x="557.32" y="175.5" ></text>
</g>
<g >
<title>jdk.internal.util.ArraysSupport.newLength:638 (2 samples, 0.07%)</title><rect x="489.7" y="53" width="0.8" height="15.0" fill="rgb(250,137,8)" rx="2" ry="2" />
<text  x="492.67" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:98 (2 samples, 0.07%)</title><rect x="579.3" y="133" width="0.9" height="15.0" fill="rgb(209,169,34)" rx="2" ry="2" />
<text  x="582.31" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:356 (2 samples, 0.07%)</title><rect x="717.7" y="69" width="0.8" height="15.0" fill="rgb(239,91,10)" rx="2" ry="2" />
<text  x="720.66" y="79.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKeyUncompressed:56 (1,247 samples, 45.54%)</title><rect x="553.9" y="197" width="537.4" height="15.0" fill="rgb(220,104,21)" rx="2" ry="2" />
<text  x="556.89" y="207.5" >org.sample.SM2Util.getHexPublicKeyUncompressed:56</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1523 (4 samples, 0.15%)</title><rect x="783.6" y="69" width="1.7" height="15.0" fill="rgb(244,2,1)" rx="2" ry="2" />
<text  x="786.59" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.bitLength:3816 (1 samples, 0.04%)</title><rect x="13.4" y="149" width="0.5" height="15.0" fill="rgb(212,58,9)" rx="2" ry="2" />
<text  x="16.45" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1511 (7 samples, 0.26%)</title><rect x="247.9" y="69" width="3.0" height="15.0" fill="rgb(239,38,17)" rx="2" ry="2" />
<text  x="250.90" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:165 (11 samples, 0.40%)</title><rect x="458.2" y="101" width="4.8" height="15.0" fill="rgb(230,25,16)" rx="2" ry="2" />
<text  x="461.21" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1595 (49 samples, 1.79%)</title><rect x="882.3" y="69" width="21.1" height="15.0" fill="rgb(233,13,42)" rx="2" ry="2" />
<text  x="885.29" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1492 (6 samples, 0.22%)</title><rect x="197.5" y="69" width="2.6" height="15.0" fill="rgb(209,88,23)" rx="2" ry="2" />
<text  x="200.47" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1537 (1 samples, 0.04%)</title><rect x="262.1" y="69" width="0.4" height="15.0" fill="rgb(228,171,52)" rx="2" ry="2" />
<text  x="265.12" y="79.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.bigIntegerToHex:66 (1,244 samples, 45.43%)</title><rect x="554.3" y="181" width="536.1" height="15.0" fill="rgb(249,0,54)" rx="2" ry="2" />
<text  x="557.32" y="191.5" >org.sample.SM2Util.bigIntegerToHex:66</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1138 (4 samples, 0.15%)</title><rect x="466.0" y="101" width="1.7" height="15.0" fill="rgb(250,217,5)" rx="2" ry="2" />
<text  x="468.97" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1667 (1 samples, 0.04%)</title><rect x="937.5" y="69" width="0.4" height="15.0" fill="rgb(208,51,4)" rx="2" ry="2" />
<text  x="940.45" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (7 samples, 0.26%)</title><rect x="1060.7" y="85" width="3.0" height="15.0" fill="rgb(240,8,37)" rx="2" ry="2" />
<text  x="1063.71" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1543 (1 samples, 0.04%)</title><rect x="799.1" y="69" width="0.4" height="15.0" fill="rgb(231,30,7)" rx="2" ry="2" />
<text  x="802.11" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:406 (1 samples, 0.04%)</title><rect x="436.7" y="53" width="0.4" height="15.0" fill="rgb(224,147,35)" rx="2" ry="2" />
<text  x="439.66" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4534 (3 samples, 0.11%)</title><rect x="1089.2" y="117" width="1.2" height="15.0" fill="rgb(236,181,30)" rx="2" ry="2" />
<text  x="1092.15" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4153 (21 samples, 0.77%)</title><rect x="463.8" y="133" width="9.1" height="15.0" fill="rgb(222,71,43)" rx="2" ry="2" />
<text  x="466.81" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (23 samples, 0.84%)</title><rect x="960.3" y="53" width="9.9" height="15.0" fill="rgb(244,91,29)" rx="2" ry="2" />
<text  x="963.29" y="63.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.readBytes:-1 (4 samples, 0.15%)</title><rect x="1188.3" y="357" width="1.7" height="15.0" fill="rgb(248,128,23)" rx="2" ry="2" />
<text  x="1191.28" y="367.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:406 (2 samples, 0.07%)</title><rect x="970.2" y="53" width="0.9" height="15.0" fill="rgb(236,144,13)" rx="2" ry="2" />
<text  x="973.20" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (56 samples, 2.05%)</title><rect x="141.4" y="53" width="24.2" height="15.0" fill="rgb(231,75,42)" rx="2" ry="2" />
<text  x="144.45" y="63.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:359 (15 samples, 0.55%)</title><rect x="718.5" y="69" width="6.5" height="15.0" fill="rgb(225,35,9)" rx="2" ry="2" />
<text  x="721.52" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4140 (3 samples, 0.11%)</title><rect x="46.2" y="133" width="1.3" height="15.0" fill="rgb(224,23,11)" rx="2" ry="2" />
<text  x="49.20" y="143.5" ></text>
</g>
<g >
<title>java.lang.Number.&lt;init&gt;:59 (4 samples, 0.15%)</title><rect x="442.3" y="85" width="1.7" height="15.0" fill="rgb(240,174,2)" rx="2" ry="2" />
<text  x="445.26" y="95.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (3 samples, 0.11%)</title><rect x="535.8" y="69" width="1.3" height="15.0" fill="rgb(254,99,4)" rx="2" ry="2" />
<text  x="538.79" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:705 (2 samples, 0.07%)</title><rect x="956.0" y="37" width="0.8" height="15.0" fill="rgb(245,108,43)" rx="2" ry="2" />
<text  x="958.98" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (17 samples, 0.62%)</title><rect x="62.6" y="117" width="7.3" height="15.0" fill="rgb(221,149,8)" rx="2" ry="2" />
<text  x="65.58" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (4 samples, 0.15%)</title><rect x="223.8" y="53" width="1.7" height="15.0" fill="rgb(250,158,8)" rx="2" ry="2" />
<text  x="226.76" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1573 (1 samples, 0.04%)</title><rect x="339.3" y="69" width="0.4" height="15.0" fill="rgb(223,110,47)" rx="2" ry="2" />
<text  x="342.26" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (2 samples, 0.07%)</title><rect x="486.7" y="69" width="0.8" height="15.0" fill="rgb(232,155,12)" rx="2" ry="2" />
<text  x="489.65" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (6 samples, 0.22%)</title><rect x="481.5" y="101" width="2.6" height="15.0" fill="rgb(226,202,8)" rx="2" ry="2" />
<text  x="484.48" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:546 (1 samples, 0.04%)</title><rect x="939.2" y="53" width="0.4" height="15.0" fill="rgb(209,214,10)" rx="2" ry="2" />
<text  x="942.17" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (1 samples, 0.04%)</title><rect x="1024.5" y="69" width="0.4" height="15.0" fill="rgb(215,33,9)" rx="2" ry="2" />
<text  x="1027.51" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4160 (13 samples, 0.47%)</title><rect x="1015.9" y="133" width="5.6" height="15.0" fill="rgb(253,60,26)" rx="2" ry="2" />
<text  x="1018.89" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (1 samples, 0.04%)</title><rect x="235.8" y="53" width="0.5" height="15.0" fill="rgb(240,97,9)" rx="2" ry="2" />
<text  x="238.83" y="63.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.doPeriodic:189 (8 samples, 0.29%)</title><rect x="1180.9" y="405" width="3.5" height="15.0" fill="rgb(228,176,45)" rx="2" ry="2" />
<text  x="1183.95" y="415.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4745 (3 samples, 0.11%)</title><rect x="475.4" y="101" width="1.3" height="15.0" fill="rgb(212,63,34)" rx="2" ry="2" />
<text  x="478.45" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1139 (6 samples, 0.22%)</title><rect x="979.7" y="101" width="2.6" height="15.0" fill="rgb(254,85,5)" rx="2" ry="2" />
<text  x="982.69" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (1 samples, 0.04%)</title><rect x="398.7" y="53" width="0.5" height="15.0" fill="rgb(242,10,33)" rx="2" ry="2" />
<text  x="401.74" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (3 samples, 0.11%)</title><rect x="933.1" y="53" width="1.3" height="15.0" fill="rgb(237,162,2)" rx="2" ry="2" />
<text  x="936.14" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1612 (1 samples, 0.04%)</title><rect x="380.2" y="69" width="0.4" height="15.0" fill="rgb(242,85,47)" rx="2" ry="2" />
<text  x="383.20" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (4 samples, 0.15%)</title><rect x="1028.4" y="85" width="1.7" height="15.0" fill="rgb(205,197,4)" rx="2" ry="2" />
<text  x="1031.39" y="95.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:155 (3 samples, 0.11%)</title><rect x="500.4" y="117" width="1.3" height="15.0" fill="rgb(245,62,33)" rx="2" ry="2" />
<text  x="503.45" y="127.5" ></text>
</g>
<g >
<title>java.lang.Number.&lt;init&gt;:59 (1 samples, 0.04%)</title><rect x="979.3" y="85" width="0.4" height="15.0" fill="rgb(228,3,21)" rx="2" ry="2" />
<text  x="982.25" y="95.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1144 (2,714 samples, 99.12%)</title><rect x="10.0" y="437" width="1169.7" height="15.0" fill="rgb(225,116,8)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1144</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:650 (12 samples, 0.44%)</title><rect x="371.6" y="53" width="5.2" height="15.0" fill="rgb(225,57,11)" rx="2" ry="2" />
<text  x="374.59" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1677 (5 samples, 0.18%)</title><rect x="971.1" y="69" width="2.1" height="15.0" fill="rgb(208,44,1)" rx="2" ry="2" />
<text  x="974.07" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (5 samples, 0.18%)</title><rect x="357.8" y="53" width="2.1" height="15.0" fill="rgb(242,147,8)" rx="2" ry="2" />
<text  x="360.79" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (3 samples, 0.11%)</title><rect x="551.7" y="101" width="1.3" height="15.0" fill="rgb(250,78,22)" rx="2" ry="2" />
<text  x="554.73" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3819 (3 samples, 0.11%)</title><rect x="1019.8" y="85" width="1.3" height="15.0" fill="rgb(238,228,25)" rx="2" ry="2" />
<text  x="1022.77" y="95.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:155 (2 samples, 0.07%)</title><rect x="1038.3" y="117" width="0.9" height="15.0" fill="rgb(219,138,52)" rx="2" ry="2" />
<text  x="1041.30" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1654 (17 samples, 0.62%)</title><rect x="930.1" y="69" width="7.4" height="15.0" fill="rgb(221,201,40)" rx="2" ry="2" />
<text  x="933.12" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (4 samples, 0.15%)</title><rect x="422.0" y="53" width="1.7" height="15.0" fill="rgb(251,69,39)" rx="2" ry="2" />
<text  x="425.01" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.startProfilers:249 (1 samples, 0.04%)</title><rect x="1184.4" y="357" width="0.4" height="15.0" fill="rgb(228,12,21)" rx="2" ry="2" />
<text  x="1187.40" y="367.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.Utils.tryWith:507 (1 samples, 0.04%)</title><rect x="1184.4" y="309" width="0.4" height="15.0" fill="rgb(251,127,29)" rx="2" ry="2" />
<text  x="1187.40" y="319.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:165 (3 samples, 0.11%)</title><rect x="1009.9" y="101" width="1.2" height="15.0" fill="rgb(217,32,46)" rx="2" ry="2" />
<text  x="1012.85" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (2 samples, 0.07%)</title><rect x="489.7" y="85" width="0.8" height="15.0" fill="rgb(237,161,52)" rx="2" ry="2" />
<text  x="492.67" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1594 (11 samples, 0.40%)</title><rect x="353.1" y="69" width="4.7" height="15.0" fill="rgb(209,129,43)" rx="2" ry="2" />
<text  x="356.05" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:523 (3 samples, 0.11%)</title><rect x="1101.7" y="149" width="1.2" height="15.0" fill="rgb(252,154,45)" rx="2" ry="2" />
<text  x="1104.65" y="159.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.&lt;init&gt;:119 (53 samples, 1.94%)</title><rect x="14.3" y="149" width="22.9" height="15.0" fill="rgb(253,13,2)" rx="2" ry="2" />
<text  x="17.31" y="159.5" >j..</text>
</g>
<g >
<title>java.lang.StringLatin1.newString:760 (4 samples, 0.15%)</title><rect x="479.8" y="101" width="1.7" height="15.0" fill="rgb(226,216,42)" rx="2" ry="2" />
<text  x="482.76" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4177 (55 samples, 2.01%)</title><rect x="1063.7" y="133" width="23.7" height="15.0" fill="rgb(242,54,45)" rx="2" ry="2" />
<text  x="1066.73" y="143.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:655 (1 samples, 0.04%)</title><rect x="378.5" y="53" width="0.4" height="15.0" fill="rgb(211,216,5)" rx="2" ry="2" />
<text  x="381.48" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:700 (2 samples, 0.07%)</title><rect x="410.8" y="37" width="0.9" height="15.0" fill="rgb(226,83,17)" rx="2" ry="2" />
<text  x="413.80" y="47.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (12 samples, 0.44%)</title><rect x="490.5" y="101" width="5.2" height="15.0" fill="rgb(217,47,9)" rx="2" ry="2" />
<text  x="493.53" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4152 (71 samples, 2.59%)</title><rect x="973.2" y="133" width="30.6" height="15.0" fill="rgb(210,174,2)" rx="2" ry="2" />
<text  x="976.22" y="143.5" >ja..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.stopProfilers:260 (4 samples, 0.15%)</title><rect x="1184.8" y="357" width="1.8" height="15.0" fill="rgb(244,138,31)" rx="2" ry="2" />
<text  x="1187.83" y="367.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitFor:569 (1 samples, 0.04%)</title><rect x="1184.4" y="293" width="0.4" height="15.0" fill="rgb(216,207,14)" rx="2" ry="2" />
<text  x="1187.40" y="303.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1493 (43 samples, 1.57%)</title><rect x="735.8" y="69" width="18.5" height="15.0" fill="rgb(241,92,40)" rx="2" ry="2" />
<text  x="738.76" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:68 (1 samples, 0.04%)</title><rect x="60.4" y="117" width="0.5" height="15.0" fill="rgb(219,21,4)" rx="2" ry="2" />
<text  x="63.42" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:531 (17 samples, 0.62%)</title><rect x="1163.3" y="149" width="7.3" height="15.0" fill="rgb(248,224,46)" rx="2" ry="2" />
<text  x="1166.28" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1605 (1 samples, 0.04%)</title><rect x="903.4" y="69" width="0.4" height="15.0" fill="rgb(221,21,46)" rx="2" ry="2" />
<text  x="906.40" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:701 (9 samples, 0.33%)</title><rect x="943.1" y="37" width="3.8" height="15.0" fill="rgb(237,128,52)" rx="2" ry="2" />
<text  x="946.05" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1579 (16 samples, 0.58%)</title><rect x="344.9" y="69" width="6.9" height="15.0" fill="rgb(240,209,22)" rx="2" ry="2" />
<text  x="347.86" y="79.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (2 samples, 0.07%)</title><rect x="1006.0" y="69" width="0.8" height="15.0" fill="rgb(231,73,17)" rx="2" ry="2" />
<text  x="1008.98" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (17 samples, 0.62%)</title><rect x="465.5" y="117" width="7.4" height="15.0" fill="rgb(248,148,5)" rx="2" ry="2" />
<text  x="468.54" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (27 samples, 0.99%)</title><rect x="535.8" y="85" width="11.6" height="15.0" fill="rgb(224,71,10)" rx="2" ry="2" />
<text  x="538.79" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1196 (126 samples, 4.60%)</title><rect x="659.5" y="85" width="54.3" height="15.0" fill="rgb(241,67,49)" rx="2" ry="2" />
<text  x="662.47" y="95.5" >java...</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1652 (1 samples, 0.04%)</title><rect x="399.2" y="69" width="0.4" height="15.0" fill="rgb(236,8,46)" rx="2" ry="2" />
<text  x="402.17" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (51 samples, 1.86%)</title><rect x="1065.4" y="117" width="22.0" height="15.0" fill="rgb(208,181,12)" rx="2" ry="2" />
<text  x="1068.45" y="127.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1502 (1 samples, 0.04%)</title><rect x="244.9" y="69" width="0.4" height="15.0" fill="rgb(215,97,31)" rx="2" ry="2" />
<text  x="247.88" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder$$Lambda$113+0x000000080017e828.59178272.run:-1 (11 samples, 0.40%)</title><rect x="1179.7" y="453" width="4.7" height="15.0" fill="rgb(245,68,22)" rx="2" ry="2" />
<text  x="1182.66" y="463.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1622 (3 samples, 0.11%)</title><rect x="908.1" y="69" width="1.3" height="15.0" fill="rgb(227,186,19)" rx="2" ry="2" />
<text  x="911.14" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1183 (2 samples, 0.07%)</title><rect x="118.2" y="85" width="0.8" height="15.0" fill="rgb(214,138,45)" rx="2" ry="2" />
<text  x="121.17" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (2 samples, 0.07%)</title><rect x="231.5" y="53" width="0.9" height="15.0" fill="rgb(210,93,20)" rx="2" ry="2" />
<text  x="234.52" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:102 (4 samples, 0.15%)</title><rect x="47.5" y="117" width="1.7" height="15.0" fill="rgb(226,12,47)" rx="2" ry="2" />
<text  x="50.49" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1614 (1 samples, 0.04%)</title><rect x="907.3" y="69" width="0.4" height="15.0" fill="rgb(249,99,21)" rx="2" ry="2" />
<text  x="910.28" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1635 (2 samples, 0.07%)</title><rect x="397.9" y="69" width="0.8" height="15.0" fill="rgb(209,211,5)" rx="2" ry="2" />
<text  x="400.87" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (1 samples, 0.04%)</title><rect x="757.7" y="53" width="0.5" height="15.0" fill="rgb(215,71,27)" rx="2" ry="2" />
<text  x="760.74" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1532 (3 samples, 0.11%)</title><rect x="790.9" y="69" width="1.3" height="15.0" fill="rgb(254,59,15)" rx="2" ry="2" />
<text  x="793.92" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4139 (15 samples, 0.55%)</title><rect x="39.7" y="133" width="6.5" height="15.0" fill="rgb(209,217,40)" rx="2" ry="2" />
<text  x="42.74" y="143.5" ></text>
</g>
<g >
<title>java.security.spec.ECPoint.getAffineX:77 (3 samples, 0.11%)</title><rect x="12.2" y="181" width="1.2" height="15.0" fill="rgb(212,210,28)" rx="2" ry="2" />
<text  x="15.15" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (2 samples, 0.07%)</title><rect x="61.7" y="101" width="0.9" height="15.0" fill="rgb(233,221,8)" rx="2" ry="2" />
<text  x="64.72" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (3 samples, 0.11%)</title><rect x="351.8" y="53" width="1.3" height="15.0" fill="rgb(232,142,54)" rx="2" ry="2" />
<text  x="354.76" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (4 samples, 0.15%)</title><rect x="1031.8" y="53" width="1.8" height="15.0" fill="rgb(229,180,22)" rx="2" ry="2" />
<text  x="1034.83" y="63.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:159 (3 samples, 0.11%)</title><rect x="515.5" y="117" width="1.3" height="15.0" fill="rgb(243,88,18)" rx="2" ry="2" />
<text  x="518.53" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (5 samples, 0.18%)</title><rect x="493.6" y="85" width="2.1" height="15.0" fill="rgb(250,63,42)" rx="2" ry="2" />
<text  x="496.55" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1499 (26 samples, 0.95%)</title><rect x="233.7" y="69" width="11.2" height="15.0" fill="rgb(253,181,6)" rx="2" ry="2" />
<text  x="236.67" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4554 (2 samples, 0.07%)</title><rect x="1018.9" y="85" width="0.9" height="15.0" fill="rgb(248,79,14)" rx="2" ry="2" />
<text  x="1021.90" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1550 (3 samples, 0.11%)</title><rect x="806.9" y="69" width="1.3" height="15.0" fill="rgb(237,90,48)" rx="2" ry="2" />
<text  x="809.87" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (3 samples, 0.11%)</title><rect x="494.0" y="53" width="1.3" height="15.0" fill="rgb(223,223,48)" rx="2" ry="2" />
<text  x="496.98" y="63.5" ></text>
</g>
<g >
<title>java.lang.Thread.run:1589 (2,725 samples, 99.53%)</title><rect x="10.0" y="469" width="1174.4" height="15.0" fill="rgb(208,51,53)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >java.lang.Thread.run:1589</text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (8 samples, 0.29%)</title><rect x="236.3" y="53" width="3.4" height="15.0" fill="rgb(245,48,6)" rx="2" ry="2" />
<text  x="239.26" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (3 samples, 0.11%)</title><rect x="1011.1" y="101" width="1.3" height="15.0" fill="rgb(242,207,33)" rx="2" ry="2" />
<text  x="1014.15" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3182 (2 samples, 0.07%)</title><rect x="462.1" y="85" width="0.9" height="15.0" fill="rgb(230,16,30)" rx="2" ry="2" />
<text  x="465.09" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (16 samples, 0.58%)</title><rect x="1065.4" y="101" width="6.9" height="15.0" fill="rgb(228,144,29)" rx="2" ry="2" />
<text  x="1068.45" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1554 (5 samples, 0.18%)</title><rect x="809.9" y="69" width="2.1" height="15.0" fill="rgb(210,16,37)" rx="2" ry="2" />
<text  x="812.88" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:165 (13 samples, 0.47%)</title><rect x="995.6" y="101" width="5.6" height="15.0" fill="rgb(208,153,7)" rx="2" ry="2" />
<text  x="998.63" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (1 samples, 0.04%)</title><rect x="609.5" y="117" width="0.4" height="15.0" fill="rgb(228,47,30)" rx="2" ry="2" />
<text  x="612.48" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (3 samples, 0.11%)</title><rect x="234.5" y="53" width="1.3" height="15.0" fill="rgb(236,225,42)" rx="2" ry="2" />
<text  x="237.54" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1488 (2 samples, 0.07%)</title><rect x="194.9" y="69" width="0.8" height="15.0" fill="rgb(247,168,21)" rx="2" ry="2" />
<text  x="197.89" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:391 (1 samples, 0.04%)</title><rect x="956.8" y="53" width="0.5" height="15.0" fill="rgb(253,22,35)" rx="2" ry="2" />
<text  x="959.84" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1473 (2 samples, 0.07%)</title><rect x="227.2" y="53" width="0.9" height="15.0" fill="rgb(205,136,24)" rx="2" ry="2" />
<text  x="230.21" y="63.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.consumer.EventLog.update:86 (1 samples, 0.04%)</title><rect x="1180.1" y="405" width="0.4" height="15.0" fill="rgb(208,64,29)" rx="2" ry="2" />
<text  x="1183.09" y="415.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (1 samples, 0.04%)</title><rect x="536.6" y="53" width="0.5" height="15.0" fill="rgb(218,104,21)" rx="2" ry="2" />
<text  x="539.65" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1187 (1 samples, 0.04%)</title><rect x="655.2" y="85" width="0.4" height="15.0" fill="rgb(241,220,10)" rx="2" ry="2" />
<text  x="658.16" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (13 samples, 0.47%)</title><rect x="452.6" y="101" width="5.6" height="15.0" fill="rgb(226,127,24)" rx="2" ry="2" />
<text  x="455.61" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (14 samples, 0.51%)</title><rect x="1028.4" y="101" width="6.0" height="15.0" fill="rgb(232,66,48)" rx="2" ry="2" />
<text  x="1031.39" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3182 (1 samples, 0.04%)</title><rect x="1010.7" y="85" width="0.4" height="15.0" fill="rgb(240,68,11)" rx="2" ry="2" />
<text  x="1013.72" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:244 (1 samples, 0.04%)</title><rect x="532.8" y="85" width="0.4" height="15.0" fill="rgb(238,75,39)" rx="2" ry="2" />
<text  x="535.77" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:702 (9 samples, 0.33%)</title><rect x="415.1" y="37" width="3.9" height="15.0" fill="rgb(247,11,7)" rx="2" ry="2" />
<text  x="418.11" y="47.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4092 (58 samples, 2.12%)</title><rect x="556.0" y="165" width="25.0" height="15.0" fill="rgb(206,0,36)" rx="2" ry="2" />
<text  x="559.04" y="175.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1532 (3 samples, 0.11%)</title><rect x="260.0" y="69" width="1.3" height="15.0" fill="rgb(225,43,51)" rx="2" ry="2" />
<text  x="262.96" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1494 (7 samples, 0.26%)</title><rect x="228.1" y="69" width="3.0" height="15.0" fill="rgb(235,170,47)" rx="2" ry="2" />
<text  x="231.07" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3892 (1 samples, 0.04%)</title><rect x="687.1" y="53" width="0.4" height="15.0" fill="rgb(242,53,51)" rx="2" ry="2" />
<text  x="690.06" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1496 (2 samples, 0.07%)</title><rect x="757.3" y="69" width="0.9" height="15.0" fill="rgb(233,53,4)" rx="2" ry="2" />
<text  x="760.30" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:499 (1 samples, 0.04%)</title><rect x="1179.7" y="421" width="0.4" height="15.0" fill="rgb(249,53,3)" rx="2" ry="2" />
<text  x="1182.66" y="431.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:263 (2 samples, 0.07%)</title><rect x="531.9" y="69" width="0.9" height="15.0" fill="rgb(244,73,51)" rx="2" ry="2" />
<text  x="534.91" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (3 samples, 0.11%)</title><rect x="400.0" y="53" width="1.3" height="15.0" fill="rgb(247,96,14)" rx="2" ry="2" />
<text  x="403.03" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.bitLengthForInt:2727 (1 samples, 0.04%)</title><rect x="941.3" y="37" width="0.5" height="15.0" fill="rgb(246,213,22)" rx="2" ry="2" />
<text  x="944.33" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1637 (1 samples, 0.04%)</title><rect x="398.7" y="69" width="0.5" height="15.0" fill="rgb(252,209,40)" rx="2" ry="2" />
<text  x="401.74" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (12 samples, 0.44%)</title><rect x="239.7" y="53" width="5.2" height="15.0" fill="rgb(224,161,38)" rx="2" ry="2" />
<text  x="242.71" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1674 (44 samples, 1.61%)</title><rect x="937.9" y="69" width="18.9" height="15.0" fill="rgb(237,180,24)" rx="2" ry="2" />
<text  x="940.88" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4153 (20 samples, 0.73%)</title><rect x="1003.8" y="133" width="8.6" height="15.0" fill="rgb(220,100,37)" rx="2" ry="2" />
<text  x="1006.82" y="143.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (1 samples, 0.04%)</title><rect x="35.9" y="117" width="0.4" height="15.0" fill="rgb(232,72,11)" rx="2" ry="2" />
<text  x="38.86" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1531 (3 samples, 0.11%)</title><rect x="258.7" y="69" width="1.3" height="15.0" fill="rgb(235,38,12)" rx="2" ry="2" />
<text  x="261.67" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (1 samples, 0.04%)</title><rect x="903.0" y="53" width="0.4" height="15.0" fill="rgb(235,82,2)" rx="2" ry="2" />
<text  x="905.97" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:550 (4 samples, 0.15%)</title><rect x="940.0" y="53" width="1.8" height="15.0" fill="rgb(228,152,36)" rx="2" ry="2" />
<text  x="943.04" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (5 samples, 0.18%)</title><rect x="402.6" y="53" width="2.2" height="15.0" fill="rgb(214,113,22)" rx="2" ry="2" />
<text  x="405.62" y="63.5" ></text>
</g>
<g >
<title>org.sample.BenchmarkPublicKeys.sm2p256v1_uncompressed:26 (2,694 samples, 98.39%)</title><rect x="10.0" y="213" width="1161.0" height="15.0" fill="rgb(227,155,8)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >org.sample.BenchmarkPublicKeys.sm2p256v1_uncompressed:26</text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:253 (2 samples, 0.07%)</title><rect x="1149.1" y="133" width="0.8" height="15.0" fill="rgb(218,193,24)" rx="2" ry="2" />
<text  x="1152.06" y="143.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:509 (3 samples, 0.11%)</title><rect x="1093.0" y="149" width="1.3" height="15.0" fill="rgb(243,59,13)" rx="2" ry="2" />
<text  x="1096.03" y="159.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (7 samples, 0.26%)</title><rect x="1060.7" y="101" width="3.0" height="15.0" fill="rgb(240,83,17)" rx="2" ry="2" />
<text  x="1063.71" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.isLatin1:4567 (2 samples, 0.07%)</title><rect x="1092.2" y="149" width="0.8" height="15.0" fill="rgb(207,103,23)" rx="2" ry="2" />
<text  x="1095.17" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1491 (1 samples, 0.04%)</title><rect x="731.9" y="69" width="0.4" height="15.0" fill="rgb(249,163,14)" rx="2" ry="2" />
<text  x="734.88" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1139 (1 samples, 0.04%)</title><rect x="467.7" y="101" width="0.4" height="15.0" fill="rgb(233,141,31)" rx="2" ry="2" />
<text  x="470.69" y="111.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl:156 (2,714 samples, 99.12%)</title><rect x="10.0" y="309" width="1169.7" height="15.0" fill="rgb(240,226,23)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl:156</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1183 (3 samples, 0.11%)</title><rect x="653.9" y="85" width="1.3" height="15.0" fill="rgb(249,117,38)" rx="2" ry="2" />
<text  x="656.87" y="95.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3181 (6 samples, 0.22%)</title><rect x="996.9" y="85" width="2.6" height="15.0" fill="rgb(218,202,32)" rx="2" ry="2" />
<text  x="999.92" y="95.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (26 samples, 0.95%)</title><rect x="1076.2" y="69" width="11.2" height="15.0" fill="rgb(234,219,0)" rx="2" ry="2" />
<text  x="1079.22" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (6 samples, 0.22%)</title><rect x="533.2" y="85" width="2.6" height="15.0" fill="rgb(220,62,31)" rx="2" ry="2" />
<text  x="536.20" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (2 samples, 0.07%)</title><rect x="377.6" y="53" width="0.9" height="15.0" fill="rgb(208,216,46)" rx="2" ry="2" />
<text  x="380.62" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (7 samples, 0.26%)</title><rect x="487.5" y="101" width="3.0" height="15.0" fill="rgb(240,71,47)" rx="2" ry="2" />
<text  x="490.52" y="111.5" ></text>
</g>
<g >
<title>jdk.internal.util.ArraysSupport.newLength:638 (2 samples, 0.07%)</title><rect x="1070.2" y="53" width="0.9" height="15.0" fill="rgb(226,47,20)" rx="2" ry="2" />
<text  x="1073.19" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1539 (1 samples, 0.04%)</title><rect x="798.2" y="69" width="0.5" height="15.0" fill="rgb(242,126,53)" rx="2" ry="2" />
<text  x="801.25" y="79.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.getProperties:74 (5 samples, 0.18%)</title><rect x="1129.2" y="117" width="2.2" height="15.0" fill="rgb(244,57,53)" rx="2" ry="2" />
<text  x="1132.23" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:525 (10 samples, 0.37%)</title><rect x="1102.9" y="149" width="4.4" height="15.0" fill="rgb(235,62,41)" rx="2" ry="2" />
<text  x="1105.94" y="159.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:500 (2 samples, 0.07%)</title><rect x="1180.1" y="421" width="0.8" height="15.0" fill="rgb(234,128,16)" rx="2" ry="2" />
<text  x="1183.09" y="431.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1220 (31 samples, 1.13%)</title><rect x="714.6" y="85" width="13.4" height="15.0" fill="rgb(241,92,36)" rx="2" ry="2" />
<text  x="717.64" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1547 (17 samples, 0.62%)</title><rect x="799.5" y="69" width="7.4" height="15.0" fill="rgb(217,162,54)" rx="2" ry="2" />
<text  x="802.54" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1613 (8 samples, 0.29%)</title><rect x="903.8" y="69" width="3.5" height="15.0" fill="rgb(233,178,19)" rx="2" ry="2" />
<text  x="906.83" y="79.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (1 samples, 0.04%)</title><rect x="604.3" y="101" width="0.4" height="15.0" fill="rgb(226,135,28)" rx="2" ry="2" />
<text  x="607.31" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1205 (7 samples, 0.26%)</title><rect x="165.6" y="85" width="3.0" height="15.0" fill="rgb(213,198,50)" rx="2" ry="2" />
<text  x="168.58" y="95.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.Utils.tryWith:507 (4 samples, 0.15%)</title><rect x="1184.8" y="309" width="1.8" height="15.0" fill="rgb(210,119,51)" rx="2" ry="2" />
<text  x="1187.83" y="319.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:249 (10 samples, 0.37%)</title><rect x="1131.4" y="133" width="4.3" height="15.0" fill="rgb(208,2,19)" rx="2" ry="2" />
<text  x="1134.39" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1504 (2 samples, 0.07%)</title><rect x="777.6" y="69" width="0.8" height="15.0" fill="rgb(205,147,6)" rx="2" ry="2" />
<text  x="780.56" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:1487 (6 samples, 0.22%)</title><rect x="550.4" y="133" width="2.6" height="15.0" fill="rgb(213,182,7)" rx="2" ry="2" />
<text  x="553.44" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:651 (2 samples, 0.07%)</title><rect x="934.9" y="53" width="0.8" height="15.0" fill="rgb(242,93,33)" rx="2" ry="2" />
<text  x="937.86" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (26 samples, 0.95%)</title><rect x="484.5" y="117" width="11.2" height="15.0" fill="rgb(242,91,36)" rx="2" ry="2" />
<text  x="487.50" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:361 (7 samples, 0.26%)</title><rect x="725.0" y="69" width="3.0" height="15.0" fill="rgb(248,32,27)" rx="2" ry="2" />
<text  x="727.98" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3538 (5 samples, 0.18%)</title><rect x="528.5" y="69" width="2.1" height="15.0" fill="rgb(241,63,46)" rx="2" ry="2" />
<text  x="531.46" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:551 (1 samples, 0.04%)</title><rect x="409.9" y="53" width="0.5" height="15.0" fill="rgb(237,152,34)" rx="2" ry="2" />
<text  x="412.94" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (2 samples, 0.07%)</title><rect x="489.7" y="69" width="0.8" height="15.0" fill="rgb(251,145,4)" rx="2" ry="2" />
<text  x="492.67" y="79.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:250 (14 samples, 0.51%)</title><rect x="1135.7" y="133" width="6.0" height="15.0" fill="rgb(251,206,16)" rx="2" ry="2" />
<text  x="1138.70" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (3 samples, 0.11%)</title><rect x="534.5" y="69" width="1.3" height="15.0" fill="rgb(248,12,54)" rx="2" ry="2" />
<text  x="537.49" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4163 (1 samples, 0.04%)</title><rect x="484.1" y="133" width="0.4" height="15.0" fill="rgb(240,222,48)" rx="2" ry="2" />
<text  x="487.07" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1196 (104 samples, 3.80%)</title><rect x="120.8" y="85" width="44.8" height="15.0" fill="rgb(244,39,33)" rx="2" ry="2" />
<text  x="123.76" y="95.5" >java..</text>
</g>
<g >
<title>java.lang.Number.&lt;init&gt;:59 (2 samples, 0.07%)</title><rect x="1006.0" y="85" width="0.8" height="15.0" fill="rgb(231,62,21)" rx="2" ry="2" />
<text  x="1008.98" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:121 (2 samples, 0.07%)</title><rect x="61.7" y="117" width="0.9" height="15.0" fill="rgb(223,149,49)" rx="2" ry="2" />
<text  x="64.72" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (30 samples, 1.10%)</title><rect x="736.2" y="53" width="12.9" height="15.0" fill="rgb(251,168,43)" rx="2" ry="2" />
<text  x="739.19" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1491 (4 samples, 0.15%)</title><rect x="195.7" y="69" width="1.8" height="15.0" fill="rgb(223,173,5)" rx="2" ry="2" />
<text  x="198.75" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (1 samples, 0.04%)</title><rect x="974.9" y="117" width="0.5" height="15.0" fill="rgb(213,145,30)" rx="2" ry="2" />
<text  x="977.95" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1550 (4 samples, 0.15%)</title><rect x="276.3" y="69" width="1.8" height="15.0" fill="rgb(208,176,52)" rx="2" ry="2" />
<text  x="279.34" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (2 samples, 0.07%)</title><rect x="1075.4" y="69" width="0.8" height="15.0" fill="rgb(251,27,1)" rx="2" ry="2" />
<text  x="1078.36" y="79.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.bigIntegerToHex:66 (1,252 samples, 45.73%)</title><rect x="13.4" y="181" width="539.6" height="15.0" fill="rgb(239,92,7)" rx="2" ry="2" />
<text  x="16.45" y="191.5" >org.sample.SM2Util.bigIntegerToHex:66</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1513 (2 samples, 0.07%)</title><rect x="782.3" y="69" width="0.9" height="15.0" fill="rgb(230,40,18)" rx="2" ry="2" />
<text  x="785.30" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (7 samples, 0.26%)</title><rect x="455.2" y="85" width="3.0" height="15.0" fill="rgb(224,5,13)" rx="2" ry="2" />
<text  x="458.19" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1562 (4 samples, 0.15%)</title><rect x="334.1" y="69" width="1.7" height="15.0" fill="rgb(247,95,6)" rx="2" ry="2" />
<text  x="337.09" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (3 samples, 0.11%)</title><rect x="989.2" y="85" width="1.3" height="15.0" fill="rgb(217,173,19)" rx="2" ry="2" />
<text  x="992.17" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1554 (4 samples, 0.15%)</title><rect x="280.2" y="69" width="1.7" height="15.0" fill="rgb(220,168,30)" rx="2" ry="2" />
<text  x="283.22" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1553 (4 samples, 0.15%)</title><rect x="808.2" y="69" width="1.7" height="15.0" fill="rgb(209,18,39)" rx="2" ry="2" />
<text  x="811.16" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (28 samples, 1.02%)</title><rect x="1075.4" y="85" width="12.0" height="15.0" fill="rgb(234,190,46)" rx="2" ry="2" />
<text  x="1078.36" y="95.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (24 samples, 0.88%)</title><rect x="537.1" y="69" width="10.3" height="15.0" fill="rgb(209,44,8)" rx="2" ry="2" />
<text  x="540.08" y="79.5" ></text>
</g>
</g>
</svg>
