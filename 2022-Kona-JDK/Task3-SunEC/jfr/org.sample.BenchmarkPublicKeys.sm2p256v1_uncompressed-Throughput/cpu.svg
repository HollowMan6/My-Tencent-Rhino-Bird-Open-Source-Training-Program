<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >cpu sm2p256v1_uncompressed-Throughput</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (15 samples, 0.55%)</title><rect x="985.4" y="117" width="6.5" height="15.0" fill="rgb(245,123,10)" rx="2" ry="2" />
<text  x="988.37" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4139 (13 samples, 0.48%)</title><rect x="49.1" y="133" width="5.6" height="15.0" fill="rgb(212,20,46)" rx="2" ry="2" />
<text  x="52.10" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1547 (17 samples, 0.63%)</title><rect x="778.6" y="69" width="7.3" height="15.0" fill="rgb(207,75,31)" rx="2" ry="2" />
<text  x="781.56" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4167 (38 samples, 1.40%)</title><rect x="1001.9" y="133" width="16.5" height="15.0" fill="rgb(249,210,25)" rx="2" ry="2" />
<text  x="1004.88" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4150 (51 samples, 1.88%)</title><rect x="81.3" y="133" width="22.1" height="15.0" fill="rgb(212,224,49)" rx="2" ry="2" />
<text  x="84.25" y="143.5" >j..</text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (37 samples, 1.36%)</title><rect x="474.4" y="117" width="16.1" height="15.0" fill="rgb(210,151,16)" rx="2" ry="2" />
<text  x="477.44" y="127.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.getProperties:74 (17 samples, 0.63%)</title><rect x="1114.0" y="117" width="7.4" height="15.0" fill="rgb(219,42,50)" rx="2" ry="2" />
<text  x="1116.97" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4153 (23 samples, 0.85%)</title><rect x="981.9" y="133" width="10.0" height="15.0" fill="rgb(228,109,39)" rx="2" ry="2" />
<text  x="984.89" y="143.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.&lt;init&gt;:119 (65 samples, 2.39%)</title><rect x="534.8" y="149" width="28.3" height="15.0" fill="rgb(212,9,40)" rx="2" ry="2" />
<text  x="537.83" y="159.5" >j..</text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKeyUncompressed:55 (1,192 samples, 43.89%)</title><rect x="12.6" y="197" width="517.9" height="15.0" fill="rgb(224,27,14)" rx="2" ry="2" />
<text  x="15.61" y="207.5" >org.sample.SM2Util.getHexPublicKeyUncompressed:55</text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (3 samples, 0.11%)</title><rect x="720.8" y="53" width="1.3" height="15.0" fill="rgb(206,223,32)" rx="2" ry="2" />
<text  x="723.78" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1550 (6 samples, 0.22%)</title><rect x="785.9" y="69" width="2.7" height="15.0" fill="rgb(236,119,35)" rx="2" ry="2" />
<text  x="788.95" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (2 samples, 0.07%)</title><rect x="991.0" y="101" width="0.9" height="15.0" fill="rgb(211,184,33)" rx="2" ry="2" />
<text  x="994.02" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4745 (6 samples, 0.22%)</title><rect x="991.9" y="101" width="2.6" height="15.0" fill="rgb(218,210,25)" rx="2" ry="2" />
<text  x="994.89" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3537 (1 samples, 0.04%)</title><rect x="1008.8" y="69" width="0.5" height="15.0" fill="rgb(226,132,10)" rx="2" ry="2" />
<text  x="1011.83" y="79.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.bigIntegerToHex:66 (1,190 samples, 43.81%)</title><rect x="13.5" y="181" width="517.0" height="15.0" fill="rgb(238,194,11)" rx="2" ry="2" />
<text  x="16.48" y="191.5" >org.sample.SM2Util.bigIntegerToHex:66</text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4172 (53 samples, 1.95%)</title><rect x="491.4" y="133" width="23.0" height="15.0" fill="rgb(253,161,45)" rx="2" ry="2" />
<text  x="494.38" y="143.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1543 (1 samples, 0.04%)</title><rect x="778.1" y="69" width="0.5" height="15.0" fill="rgb(251,224,54)" rx="2" ry="2" />
<text  x="781.13" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.compare:265 (4 samples, 0.15%)</title><rect x="137.7" y="69" width="1.8" height="15.0" fill="rgb(232,193,16)" rx="2" ry="2" />
<text  x="140.73" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (1 samples, 0.04%)</title><rect x="1018.0" y="69" width="0.4" height="15.0" fill="rgb(239,42,7)" rx="2" ry="2" />
<text  x="1020.95" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (5 samples, 0.18%)</title><rect x="726.4" y="53" width="2.2" height="15.0" fill="rgb(251,223,53)" rx="2" ry="2" />
<text  x="729.43" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:325 (1 samples, 0.04%)</title><rect x="1186.1" y="373" width="0.4" height="15.0" fill="rgb(237,102,51)" rx="2" ry="2" />
<text  x="1189.09" y="383.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1553 (4 samples, 0.15%)</title><rect x="281.5" y="69" width="1.8" height="15.0" fill="rgb(238,31,44)" rx="2" ry="2" />
<text  x="284.54" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedRunner.run:72 (4 samples, 0.15%)</title><rect x="1186.1" y="453" width="1.7" height="15.0" fill="rgb(249,46,27)" rx="2" ry="2" />
<text  x="1189.09" y="463.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (3 samples, 0.11%)</title><rect x="489.2" y="69" width="1.3" height="15.0" fill="rgb(254,172,43)" rx="2" ry="2" />
<text  x="492.21" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (11 samples, 0.41%)</title><rect x="75.6" y="117" width="4.8" height="15.0" fill="rgb(239,128,47)" rx="2" ry="2" />
<text  x="78.60" y="127.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (2 samples, 0.07%)</title><rect x="444.0" y="85" width="0.9" height="15.0" fill="rgb(213,206,4)" rx="2" ry="2" />
<text  x="447.03" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:547 (2 samples, 0.07%)</title><rect x="397.5" y="53" width="0.9" height="15.0" fill="rgb(242,27,36)" rx="2" ry="2" />
<text  x="400.54" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4092 (71 samples, 2.61%)</title><rect x="532.2" y="165" width="30.9" height="15.0" fill="rgb(212,214,37)" rx="2" ry="2" />
<text  x="535.22" y="175.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:650 (9 samples, 0.33%)</title><rect x="361.9" y="53" width="3.9" height="15.0" fill="rgb(212,53,50)" rx="2" ry="2" />
<text  x="364.91" y="63.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.consumer.EventLog.update:86 (1 samples, 0.04%)</title><rect x="1177.4" y="405" width="0.4" height="15.0" fill="rgb(233,206,49)" rx="2" ry="2" />
<text  x="1180.40" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (19 samples, 0.70%)</title><rect x="444.0" y="101" width="8.3" height="15.0" fill="rgb(219,201,49)" rx="2" ry="2" />
<text  x="447.03" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1508 (1 samples, 0.04%)</title><rect x="252.9" y="69" width="0.4" height="15.0" fill="rgb(236,206,11)" rx="2" ry="2" />
<text  x="255.86" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1612 (3 samples, 0.11%)</title><rect x="369.3" y="69" width="1.3" height="15.0" fill="rgb(237,220,1)" rx="2" ry="2" />
<text  x="372.30" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4133 (4 samples, 0.15%)</title><rect x="47.4" y="133" width="1.7" height="15.0" fill="rgb(227,167,41)" rx="2" ry="2" />
<text  x="50.36" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.padWithZeros:4112 (1 samples, 0.04%)</title><rect x="1001.4" y="117" width="0.5" height="15.0" fill="rgb(229,172,34)" rx="2" ry="2" />
<text  x="1004.44" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:241 (7 samples, 0.26%)</title><rect x="479.7" y="85" width="3.0" height="15.0" fill="rgb(213,12,3)" rx="2" ry="2" />
<text  x="482.65" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:582 (8 samples, 0.29%)</title><rect x="1003.2" y="101" width="3.5" height="15.0" fill="rgb(253,164,48)" rx="2" ry="2" />
<text  x="1006.18" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4151 (774 samples, 28.50%)</title><rect x="620.0" y="133" width="336.3" height="15.0" fill="rgb(242,30,30)" rx="2" ry="2" />
<text  x="622.99" y="143.5" >java.math.BigInteger.smallToString:4151</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1196 (40 samples, 1.47%)</title><rect x="658.2" y="85" width="17.4" height="15.0" fill="rgb(245,134,47)" rx="2" ry="2" />
<text  x="661.22" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:364 (5 samples, 0.18%)</title><rect x="691.7" y="69" width="2.1" height="15.0" fill="rgb(223,27,41)" rx="2" ry="2" />
<text  x="694.67" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1502 (2 samples, 0.07%)</title><rect x="252.0" y="69" width="0.9" height="15.0" fill="rgb(209,157,25)" rx="2" ry="2" />
<text  x="255.00" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (1 samples, 0.04%)</title><rect x="236.4" y="53" width="0.4" height="15.0" fill="rgb(207,214,0)" rx="2" ry="2" />
<text  x="239.35" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4089 (2 samples, 0.07%)</title><rect x="13.5" y="165" width="0.8" height="15.0" fill="rgb(239,60,43)" rx="2" ry="2" />
<text  x="16.48" y="175.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:147 (3 samples, 0.11%)</title><rect x="1020.1" y="117" width="1.3" height="15.0" fill="rgb(243,172,21)" rx="2" ry="2" />
<text  x="1023.13" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1631 (1 samples, 0.04%)</title><rect x="383.2" y="69" width="0.4" height="15.0" fill="rgb(235,210,32)" rx="2" ry="2" />
<text  x="386.20" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (34 samples, 1.25%)</title><rect x="660.4" y="69" width="14.8" height="15.0" fill="rgb(212,27,46)" rx="2" ry="2" />
<text  x="663.39" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:585 (4 samples, 0.15%)</title><rect x="475.7" y="101" width="1.8" height="15.0" fill="rgb(233,127,4)" rx="2" ry="2" />
<text  x="478.74" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4534 (6 samples, 0.22%)</title><rect x="527.9" y="117" width="2.6" height="15.0" fill="rgb(218,122,35)" rx="2" ry="2" />
<text  x="530.88" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1613 (2 samples, 0.07%)</title><rect x="889.8" y="69" width="0.9" height="15.0" fill="rgb(233,200,7)" rx="2" ry="2" />
<text  x="892.79" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3537 (3 samples, 0.11%)</title><rect x="480.1" y="69" width="1.3" height="15.0" fill="rgb(254,174,52)" rx="2" ry="2" />
<text  x="483.09" y="79.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKeyUncompressed:53 (6 samples, 0.22%)</title><rect x="10.0" y="197" width="2.6" height="15.0" fill="rgb(205,162,46)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:525 (10 samples, 0.37%)</title><rect x="1076.2" y="149" width="4.3" height="15.0" fill="rgb(236,69,34)" rx="2" ry="2" />
<text  x="1079.17" y="159.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:164 (8 samples, 0.29%)</title><rect x="1044.0" y="117" width="3.5" height="15.0" fill="rgb(220,140,49)" rx="2" ry="2" />
<text  x="1047.02" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1467 (2 samples, 0.07%)</title><rect x="700.4" y="53" width="0.8" height="15.0" fill="rgb(213,10,46)" rx="2" ry="2" />
<text  x="703.36" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:162 (11 samples, 0.41%)</title><rect x="968.0" y="101" width="4.8" height="15.0" fill="rgb(237,224,41)" rx="2" ry="2" />
<text  x="970.99" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.toUpperCase:3487 (250 samples, 9.20%)</title><rect x="1062.3" y="165" width="108.6" height="15.0" fill="rgb(214,39,5)" rx="2" ry="2" />
<text  x="1065.27" y="175.5" >java.lang.Str..</text>
</g>
<g >
<title>all (2,716 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(240,66,27)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DirectMethodHandleAccessor.invoke:104 (2,684 samples, 98.82%)</title><rect x="10.0" y="325" width="1166.1" height="15.0" fill="rgb(241,46,19)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >jdk.internal.reflect.DirectMethodHandleAccessor.invoke:104</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1138 (7 samples, 0.26%)</title><rect x="962.3" y="101" width="3.1" height="15.0" fill="rgb(251,37,42)" rx="2" ry="2" />
<text  x="965.34" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1156 (69 samples, 2.54%)</title><rect x="103.4" y="101" width="30.0" height="15.0" fill="rgb(235,28,49)" rx="2" ry="2" />
<text  x="106.41" y="111.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1232 (604 samples, 22.24%)</title><rect x="693.8" y="85" width="262.5" height="15.0" fill="rgb(232,55,7)" rx="2" ry="2" />
<text  x="696.84" y="95.5" >java.math.MutableBigInteger.divideK..</text>
</g>
<g >
<title>java.math.BigInteger.signInt:4733 (2 samples, 0.07%)</title><rect x="468.8" y="85" width="0.9" height="15.0" fill="rgb(244,168,51)" rx="2" ry="2" />
<text  x="471.79" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:140 (1 samples, 0.04%)</title><rect x="146.9" y="69" width="0.4" height="15.0" fill="rgb(210,191,51)" rx="2" ry="2" />
<text  x="149.86" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:100 (54 samples, 1.99%)</title><rect x="17.4" y="133" width="23.4" height="15.0" fill="rgb(211,219,26)" rx="2" ry="2" />
<text  x="20.39" y="143.5" >j..</text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:249 (23 samples, 0.85%)</title><rect x="1121.4" y="133" width="9.9" height="15.0" fill="rgb(219,206,14)" rx="2" ry="2" />
<text  x="1124.35" y="143.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:500 (1 samples, 0.04%)</title><rect x="1177.4" y="421" width="0.4" height="15.0" fill="rgb(212,46,42)" rx="2" ry="2" />
<text  x="1180.40" y="431.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:162 (14 samples, 0.52%)</title><rect x="437.9" y="101" width="6.1" height="15.0" fill="rgb(223,124,17)" rx="2" ry="2" />
<text  x="440.95" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1493 (69 samples, 2.54%)</title><rect x="699.9" y="69" width="30.0" height="15.0" fill="rgb(224,35,50)" rx="2" ry="2" />
<text  x="702.93" y="79.5" >ja..</text>
</g>
<g >
<title>org.sample.SM2Util.bigIntegerToHex:66 (1,209 samples, 44.51%)</title><rect x="531.8" y="181" width="525.3" height="15.0" fill="rgb(252,199,32)" rx="2" ry="2" />
<text  x="534.79" y="191.5" >org.sample.SM2Util.bigIntegerToHex:66</text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine$RequestHook.execute:69 (19 samples, 0.70%)</title><rect x="1177.8" y="373" width="8.3" height="15.0" fill="rgb(245,200,43)" rx="2" ry="2" />
<text  x="1180.84" y="383.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:551 (1 samples, 0.04%)</title><rect x="920.6" y="53" width="0.5" height="15.0" fill="rgb(254,133,36)" rx="2" ry="2" />
<text  x="923.63" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:397 (3 samples, 0.11%)</title><rect x="952.3" y="53" width="1.4" height="15.0" fill="rgb(246,93,52)" rx="2" ry="2" />
<text  x="955.35" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1497 (1 samples, 0.04%)</title><rect x="737.3" y="69" width="0.4" height="15.0" fill="rgb(210,123,26)" rx="2" ry="2" />
<text  x="740.29" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1183 (5 samples, 0.18%)</title><rect x="652.1" y="85" width="2.2" height="15.0" fill="rgb(246,94,30)" rx="2" ry="2" />
<text  x="655.14" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (5 samples, 0.18%)</title><rect x="343.7" y="53" width="2.1" height="15.0" fill="rgb(253,179,34)" rx="2" ry="2" />
<text  x="346.67" y="63.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:247 (17 samples, 0.63%)</title><rect x="1114.0" y="133" width="7.4" height="15.0" fill="rgb(215,83,15)" rx="2" ry="2" />
<text  x="1116.97" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (5 samples, 0.18%)</title><rect x="387.5" y="53" width="2.2" height="15.0" fill="rgb(227,148,7)" rx="2" ry="2" />
<text  x="390.55" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (10 samples, 0.37%)</title><rect x="722.1" y="53" width="4.3" height="15.0" fill="rgb(228,89,16)" rx="2" ry="2" />
<text  x="725.08" y="63.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitForInterruptibly:-1 (1 samples, 0.04%)</title><rect x="1186.1" y="277" width="0.4" height="15.0" fill="rgb(250,227,8)" rx="2" ry="2" />
<text  x="1189.09" y="287.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.fill:255 (2 samples, 0.07%)</title><rect x="1189.1" y="389" width="0.9" height="15.0" fill="rgb(230,176,8)" rx="2" ry="2" />
<text  x="1192.13" y="399.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:550 (3 samples, 0.11%)</title><rect x="398.4" y="53" width="1.3" height="15.0" fill="rgb(228,132,44)" rx="2" ry="2" />
<text  x="401.41" y="63.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.getProperties:74 (1 samples, 0.04%)</title><rect x="1067.5" y="117" width="0.4" height="15.0" fill="rgb(237,73,11)" rx="2" ry="2" />
<text  x="1070.48" y="127.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (6 samples, 0.22%)</title><rect x="511.8" y="85" width="2.6" height="15.0" fill="rgb(247,203,53)" rx="2" ry="2" />
<text  x="514.80" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (4 samples, 0.15%)</title><rect x="1013.6" y="85" width="1.7" height="15.0" fill="rgb(226,216,19)" rx="2" ry="2" />
<text  x="1016.61" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1624 (3 samples, 0.11%)</title><rect x="381.9" y="69" width="1.3" height="15.0" fill="rgb(229,212,50)" rx="2" ry="2" />
<text  x="384.90" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:503 (19 samples, 0.70%)</title><rect x="1177.8" y="421" width="8.3" height="15.0" fill="rgb(209,123,11)" rx="2" ry="2" />
<text  x="1180.84" y="431.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4160 (6 samples, 0.22%)</title><rect x="471.8" y="133" width="2.6" height="15.0" fill="rgb(249,140,20)" rx="2" ry="2" />
<text  x="474.83" y="143.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.toString:453 (6 samples, 0.22%)</title><rect x="527.9" y="149" width="2.6" height="15.0" fill="rgb(244,160,15)" rx="2" ry="2" />
<text  x="530.88" y="159.5" ></text>
</g>
<g >
<title>jdk.internal.util.ArraysSupport.newLength:638 (2 samples, 0.07%)</title><rect x="484.4" y="53" width="0.9" height="15.0" fill="rgb(239,57,31)" rx="2" ry="2" />
<text  x="487.43" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:1487 (4 samples, 0.15%)</title><rect x="1055.3" y="133" width="1.8" height="15.0" fill="rgb(230,83,5)" rx="2" ry="2" />
<text  x="1058.32" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1183 (6 samples, 0.22%)</title><rect x="134.3" y="85" width="2.6" height="15.0" fill="rgb(212,9,40)" rx="2" ry="2" />
<text  x="137.26" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1578 (13 samples, 0.48%)</title><rect x="844.2" y="69" width="5.6" height="15.0" fill="rgb(247,28,31)" rx="2" ry="2" />
<text  x="847.17" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (3 samples, 0.11%)</title><rect x="471.8" y="117" width="1.3" height="15.0" fill="rgb(206,107,3)" rx="2" ry="2" />
<text  x="474.83" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4101 (9 samples, 0.33%)</title><rect x="526.6" y="165" width="3.9" height="15.0" fill="rgb(205,37,32)" rx="2" ry="2" />
<text  x="529.58" y="175.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (1 samples, 0.04%)</title><rect x="581.8" y="101" width="0.4" height="15.0" fill="rgb(208,182,50)" rx="2" ry="2" />
<text  x="584.75" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4149 (24 samples, 0.88%)</title><rect x="70.8" y="133" width="10.5" height="15.0" fill="rgb(205,80,44)" rx="2" ry="2" />
<text  x="73.82" y="143.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:527 (83 samples, 3.06%)</title><rect x="1114.0" y="149" width="36.0" height="15.0" fill="rgb(239,224,42)" rx="2" ry="2" />
<text  x="1116.97" y="159.5" >jav..</text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (5 samples, 0.18%)</title><rect x="462.3" y="85" width="2.1" height="15.0" fill="rgb(224,188,34)" rx="2" ry="2" />
<text  x="465.28" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1501 (1 samples, 0.04%)</title><rect x="251.6" y="69" width="0.4" height="15.0" fill="rgb(230,149,21)" rx="2" ry="2" />
<text  x="254.56" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (38 samples, 1.40%)</title><rect x="1001.9" y="117" width="16.5" height="15.0" fill="rgb(239,216,51)" rx="2" ry="2" />
<text  x="1004.88" y="127.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.InputStreamDrainer.run:80 (5 samples, 0.18%)</title><rect x="1187.8" y="469" width="2.2" height="15.0" fill="rgb(205,51,14)" rx="2" ry="2" />
<text  x="1190.83" y="479.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (11 samples, 0.41%)</title><rect x="863.3" y="53" width="4.8" height="15.0" fill="rgb(243,124,47)" rx="2" ry="2" />
<text  x="866.28" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:356 (2 samples, 0.07%)</title><rect x="169.9" y="69" width="0.9" height="15.0" fill="rgb(227,18,17)" rx="2" ry="2" />
<text  x="172.88" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (5 samples, 0.18%)</title><rect x="391.0" y="53" width="2.2" height="15.0" fill="rgb(208,136,51)" rx="2" ry="2" />
<text  x="394.02" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (2 samples, 0.07%)</title><rect x="486.2" y="69" width="0.8" height="15.0" fill="rgb(236,210,22)" rx="2" ry="2" />
<text  x="489.17" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1220 (45 samples, 1.66%)</title><rect x="165.5" y="85" width="19.6" height="15.0" fill="rgb(249,31,28)" rx="2" ry="2" />
<text  x="168.54" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (1 samples, 0.04%)</title><rect x="1013.2" y="69" width="0.4" height="15.0" fill="rgb(219,75,53)" rx="2" ry="2" />
<text  x="1016.17" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:406 (1 samples, 0.04%)</title><rect x="955.8" y="53" width="0.5" height="15.0" fill="rgb(242,207,45)" rx="2" ry="2" />
<text  x="958.82" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4148 (30 samples, 1.10%)</title><rect x="57.8" y="133" width="13.0" height="15.0" fill="rgb(232,109,13)" rx="2" ry="2" />
<text  x="60.79" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (4 samples, 0.15%)</title><rect x="954.1" y="53" width="1.7" height="15.0" fill="rgb(239,217,6)" rx="2" ry="2" />
<text  x="957.09" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1565 (2 samples, 0.07%)</title><rect x="333.2" y="69" width="0.9" height="15.0" fill="rgb(232,223,10)" rx="2" ry="2" />
<text  x="336.24" y="79.5" ></text>
</g>
<g >
<title>java.lang.Thread.run:1589 (2,707 samples, 99.67%)</title><rect x="10.0" y="469" width="1176.1" height="15.0" fill="rgb(245,46,43)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >java.lang.Thread.run:1589</text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (1 samples, 0.04%)</title><rect x="425.3" y="53" width="0.5" height="15.0" fill="rgb(231,184,44)" rx="2" ry="2" />
<text  x="428.35" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1187 (2 samples, 0.07%)</title><rect x="136.9" y="85" width="0.8" height="15.0" fill="rgb(210,106,29)" rx="2" ry="2" />
<text  x="139.86" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1557 (6 samples, 0.22%)</title><rect x="328.9" y="69" width="2.6" height="15.0" fill="rgb(253,91,54)" rx="2" ry="2" />
<text  x="331.90" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (4 samples, 0.15%)</title><rect x="222.0" y="53" width="1.8" height="15.0" fill="rgb(244,72,51)" rx="2" ry="2" />
<text  x="225.02" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (8 samples, 0.29%)</title><rect x="1044.0" y="101" width="3.5" height="15.0" fill="rgb(206,107,47)" rx="2" ry="2" />
<text  x="1047.02" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (5 samples, 0.18%)</title><rect x="425.8" y="53" width="2.2" height="15.0" fill="rgb(221,215,54)" rx="2" ry="2" />
<text  x="428.78" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1674 (42 samples, 1.55%)</title><rect x="918.9" y="69" width="18.2" height="15.0" fill="rgb(251,127,10)" rx="2" ry="2" />
<text  x="921.90" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (1 samples, 0.04%)</title><rect x="989.3" y="85" width="0.4" height="15.0" fill="rgb(229,47,3)" rx="2" ry="2" />
<text  x="992.28" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:249 (2 samples, 0.07%)</title><rect x="164.7" y="69" width="0.8" height="15.0" fill="rgb(215,81,5)" rx="2" ry="2" />
<text  x="167.67" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.toUpperCase:3511 (251 samples, 9.24%)</title><rect x="1062.3" y="181" width="109.0" height="15.0" fill="rgb(227,178,31)" rx="2" ry="2" />
<text  x="1065.27" y="191.5" >java.lang.Str..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:421 (3 samples, 0.11%)</title><rect x="1186.5" y="373" width="1.3" height="15.0" fill="rgb(209,57,41)" rx="2" ry="2" />
<text  x="1189.52" y="383.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (12 samples, 0.44%)</title><rect x="485.3" y="101" width="5.2" height="15.0" fill="rgb(250,45,36)" rx="2" ry="2" />
<text  x="488.30" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (1 samples, 0.04%)</title><rect x="1049.2" y="69" width="0.5" height="15.0" fill="rgb(235,22,35)" rx="2" ry="2" />
<text  x="1052.23" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:98 (7 samples, 0.26%)</title><rect x="40.8" y="133" width="3.1" height="15.0" fill="rgb(226,48,26)" rx="2" ry="2" />
<text  x="43.85" y="143.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (2,684 samples, 98.82%)</title><rect x="10.0" y="357" width="1166.1" height="15.0" fill="rgb(226,100,17)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:68 (1 samples, 0.04%)</title><rect x="162.9" y="69" width="0.5" height="15.0" fill="rgb(243,19,4)" rx="2" ry="2" />
<text  x="165.93" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4170 (2 samples, 0.07%)</title><rect x="490.5" y="133" width="0.9" height="15.0" fill="rgb(213,83,23)" rx="2" ry="2" />
<text  x="493.52" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:396 (1 samples, 0.04%)</title><rect x="951.9" y="53" width="0.4" height="15.0" fill="rgb(245,76,29)" rx="2" ry="2" />
<text  x="954.91" y="63.5" ></text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:578 (2,684 samples, 98.82%)</title><rect x="10.0" y="341" width="1166.1" height="15.0" fill="rgb(235,15,4)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >java.lang.reflect.Method.invoke:578</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1138 (8 samples, 0.29%)</title><rect x="431.9" y="101" width="3.4" height="15.0" fill="rgb(243,193,0)" rx="2" ry="2" />
<text  x="434.86" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (18 samples, 0.66%)</title><rect x="477.5" y="101" width="7.8" height="15.0" fill="rgb(220,188,7)" rx="2" ry="2" />
<text  x="480.48" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1232 (559 samples, 20.58%)</title><rect x="185.1" y="85" width="242.9" height="15.0" fill="rgb(249,103,43)" rx="2" ry="2" />
<text  x="188.09" y="95.5" >java.math.MutableBigInteger.divi..</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (12 samples, 0.44%)</title><rect x="521.4" y="101" width="5.2" height="15.0" fill="rgb(242,132,12)" rx="2" ry="2" />
<text  x="524.36" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (6 samples, 0.22%)</title><rect x="482.7" y="85" width="2.6" height="15.0" fill="rgb(246,87,34)" rx="2" ry="2" />
<text  x="485.70" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (4 samples, 0.15%)</title><rect x="485.3" y="85" width="1.7" height="15.0" fill="rgb(234,23,0)" rx="2" ry="2" />
<text  x="488.30" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:241 (3 samples, 0.11%)</title><rect x="516.1" y="85" width="1.4" height="15.0" fill="rgb(247,117,10)" rx="2" ry="2" />
<text  x="519.15" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (6 samples, 0.22%)</title><rect x="435.3" y="101" width="2.6" height="15.0" fill="rgb(220,223,34)" rx="2" ry="2" />
<text  x="438.34" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.bitLength:3816 (1 samples, 0.04%)</title><rect x="531.8" y="149" width="0.4" height="15.0" fill="rgb(253,173,28)" rx="2" ry="2" />
<text  x="534.79" y="159.5" ></text>
</g>
<g >
<title>java.security.spec.ECPoint.getAffineY:86 (2 samples, 0.07%)</title><rect x="530.9" y="181" width="0.9" height="15.0" fill="rgb(228,105,51)" rx="2" ry="2" />
<text  x="533.92" y="191.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1511 (8 samples, 0.29%)</title><rect x="255.0" y="69" width="3.5" height="15.0" fill="rgb(224,115,13)" rx="2" ry="2" />
<text  x="258.04" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:407 (1 samples, 0.04%)</title><rect x="951.0" y="53" width="0.5" height="15.0" fill="rgb(205,44,16)" rx="2" ry="2" />
<text  x="954.05" y="63.5" ></text>
</g>
<g >
<title>java.lang.Number.&lt;init&gt;:59 (3 samples, 0.11%)</title><rect x="985.8" y="85" width="1.3" height="15.0" fill="rgb(250,30,25)" rx="2" ry="2" />
<text  x="988.80" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:585 (1 samples, 0.04%)</title><rect x="515.7" y="101" width="0.4" height="15.0" fill="rgb(224,162,46)" rx="2" ry="2" />
<text  x="518.71" y="111.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (1 samples, 0.04%)</title><rect x="146.4" y="53" width="0.5" height="15.0" fill="rgb(234,93,16)" rx="2" ry="2" />
<text  x="149.42" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1563 (2 samples, 0.07%)</title><rect x="332.4" y="69" width="0.8" height="15.0" fill="rgb(248,114,50)" rx="2" ry="2" />
<text  x="335.37" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1579 (12 samples, 0.44%)</title><rect x="338.5" y="69" width="5.2" height="15.0" fill="rgb(215,71,25)" rx="2" ry="2" />
<text  x="341.45" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (3 samples, 0.11%)</title><rect x="524.0" y="53" width="1.3" height="15.0" fill="rgb(234,102,48)" rx="2" ry="2" />
<text  x="526.97" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1595 (36 samples, 1.33%)</title><rect x="351.1" y="69" width="15.6" height="15.0" fill="rgb(208,172,0)" rx="2" ry="2" />
<text  x="354.05" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:356 (3 samples, 0.11%)</title><rect x="679.9" y="69" width="1.3" height="15.0" fill="rgb(249,189,32)" rx="2" ry="2" />
<text  x="682.94" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:100 (59 samples, 2.17%)</title><rect x="534.8" y="133" width="25.7" height="15.0" fill="rgb(224,202,27)" rx="2" ry="2" />
<text  x="537.83" y="143.5" >j..</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (6 samples, 0.22%)</title><rect x="965.4" y="101" width="2.6" height="15.0" fill="rgb(227,197,9)" rx="2" ry="2" />
<text  x="968.38" y="111.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKeyUncompressed:56 (1,212 samples, 44.62%)</title><rect x="530.5" y="197" width="526.6" height="15.0" fill="rgb(237,220,14)" rx="2" ry="2" />
<text  x="533.49" y="207.5" >org.sample.SM2Util.getHexPublicKeyUncompressed:56</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1543 (1 samples, 0.04%)</title><rect x="273.7" y="69" width="0.5" height="15.0" fill="rgb(248,123,11)" rx="2" ry="2" />
<text  x="276.72" y="79.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKeyUncompressed:57 (263 samples, 9.68%)</title><rect x="1057.1" y="197" width="114.2" height="15.0" fill="rgb(212,104,14)" rx="2" ry="2" />
<text  x="1060.05" y="207.5" >org.sample.SM2..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1623 (20 samples, 0.74%)</title><rect x="373.2" y="69" width="8.7" height="15.0" fill="rgb(238,174,21)" rx="2" ry="2" />
<text  x="376.21" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (7 samples, 0.26%)</title><rect x="248.5" y="53" width="3.1" height="15.0" fill="rgb(207,68,15)" rx="2" ry="2" />
<text  x="251.52" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4748 (3 samples, 0.11%)</title><rect x="996.7" y="101" width="1.3" height="15.0" fill="rgb(239,219,27)" rx="2" ry="2" />
<text  x="999.66" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4153 (27 samples, 0.99%)</title><rect x="454.9" y="133" width="11.7" height="15.0" fill="rgb(232,82,35)" rx="2" ry="2" />
<text  x="457.89" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (9 samples, 0.33%)</title><rect x="938.0" y="53" width="3.9" height="15.0" fill="rgb(250,71,34)" rx="2" ry="2" />
<text  x="941.01" y="63.5" ></text>
</g>
<g >
<title>java.util.Locale.getDefault:998 (1 samples, 0.04%)</title><rect x="1170.9" y="165" width="0.4" height="15.0" fill="rgb(216,108,43)" rx="2" ry="2" />
<text  x="1173.88" y="175.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (5 samples, 0.18%)</title><rect x="452.7" y="101" width="2.2" height="15.0" fill="rgb(222,72,17)" rx="2" ry="2" />
<text  x="455.72" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:139 (3 samples, 0.11%)</title><rect x="659.1" y="69" width="1.3" height="15.0" fill="rgb(207,206,22)" rx="2" ry="2" />
<text  x="662.09" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.startProfilers:249 (1 samples, 0.04%)</title><rect x="1186.1" y="357" width="0.4" height="15.0" fill="rgb(252,189,26)" rx="2" ry="2" />
<text  x="1189.09" y="367.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (6 samples, 0.22%)</title><rect x="916.3" y="53" width="2.6" height="15.0" fill="rgb(231,34,50)" rx="2" ry="2" />
<text  x="919.29" y="63.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.readBytes:-1 (3 samples, 0.11%)</title><rect x="1187.8" y="437" width="1.3" height="15.0" fill="rgb(252,4,29)" rx="2" ry="2" />
<text  x="1190.83" y="447.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1581 (5 samples, 0.18%)</title><rect x="343.7" y="69" width="2.1" height="15.0" fill="rgb(227,143,10)" rx="2" ry="2" />
<text  x="346.67" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1538 (8 samples, 0.29%)</title><rect x="773.4" y="69" width="3.4" height="15.0" fill="rgb(243,149,11)" rx="2" ry="2" />
<text  x="776.35" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.afterIteration:146 (3 samples, 0.11%)</title><rect x="1186.5" y="341" width="1.3" height="15.0" fill="rgb(250,183,42)" rx="2" ry="2" />
<text  x="1189.52" y="351.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3181 (1 samples, 0.04%)</title><rect x="978.0" y="85" width="0.4" height="15.0" fill="rgb(219,17,26)" rx="2" ry="2" />
<text  x="980.98" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (1 samples, 0.04%)</title><rect x="953.7" y="53" width="0.4" height="15.0" fill="rgb(232,173,19)" rx="2" ry="2" />
<text  x="956.65" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (55 samples, 2.03%)</title><rect x="198.1" y="53" width="23.9" height="15.0" fill="rgb(248,119,17)" rx="2" ry="2" />
<text  x="201.12" y="63.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (12 samples, 0.44%)</title><rect x="351.9" y="53" width="5.2" height="15.0" fill="rgb(235,43,28)" rx="2" ry="2" />
<text  x="354.92" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:400 (1 samples, 0.04%)</title><rect x="424.9" y="53" width="0.4" height="15.0" fill="rgb(235,182,11)" rx="2" ry="2" />
<text  x="427.91" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4101 (8 samples, 0.29%)</title><rect x="1053.6" y="165" width="3.5" height="15.0" fill="rgb(205,59,9)" rx="2" ry="2" />
<text  x="1056.58" y="175.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4140 (7 samples, 0.26%)</title><rect x="577.8" y="133" width="3.1" height="15.0" fill="rgb(205,34,51)" rx="2" ry="2" />
<text  x="580.84" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:248 (2 samples, 0.07%)</title><rect x="675.6" y="69" width="0.9" height="15.0" fill="rgb(219,122,12)" rx="2" ry="2" />
<text  x="678.60" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (33 samples, 1.22%)</title><rect x="492.7" y="117" width="14.3" height="15.0" fill="rgb(206,31,11)" rx="2" ry="2" />
<text  x="495.69" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1577 (2 samples, 0.07%)</title><rect x="334.1" y="69" width="0.9" height="15.0" fill="rgb(231,220,46)" rx="2" ry="2" />
<text  x="337.11" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1539 (4 samples, 0.15%)</title><rect x="272.0" y="69" width="1.7" height="15.0" fill="rgb(234,164,38)" rx="2" ry="2" />
<text  x="274.98" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:523 (2 samples, 0.07%)</title><rect x="1075.3" y="149" width="0.9" height="15.0" fill="rgb(251,67,43)" rx="2" ry="2" />
<text  x="1078.30" y="159.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.read:269 (3 samples, 0.11%)</title><rect x="1187.8" y="453" width="1.3" height="15.0" fill="rgb(242,46,17)" rx="2" ry="2" />
<text  x="1190.83" y="463.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (1 samples, 0.04%)</title><rect x="162.1" y="53" width="0.4" height="15.0" fill="rgb(242,85,6)" rx="2" ry="2" />
<text  x="165.06" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (3 samples, 0.11%)</title><rect x="229.4" y="53" width="1.3" height="15.0" fill="rgb(207,118,51)" rx="2" ry="2" />
<text  x="232.40" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1550 (5 samples, 0.18%)</title><rect x="279.4" y="69" width="2.1" height="15.0" fill="rgb(210,183,19)" rx="2" ry="2" />
<text  x="282.37" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.Utils.tryWith:507 (1 samples, 0.04%)</title><rect x="1186.1" y="309" width="0.4" height="15.0" fill="rgb(228,179,43)" rx="2" ry="2" />
<text  x="1189.09" y="319.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:250 (21 samples, 0.77%)</title><rect x="1131.3" y="133" width="9.2" height="15.0" fill="rgb(252,192,33)" rx="2" ry="2" />
<text  x="1134.35" y="143.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.read:361 (2 samples, 0.07%)</title><rect x="1189.1" y="437" width="0.9" height="15.0" fill="rgb(244,172,12)" rx="2" ry="2" />
<text  x="1192.13" y="447.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:147 (1 samples, 0.04%)</title><rect x="491.4" y="117" width="0.4" height="15.0" fill="rgb(251,113,14)" rx="2" ry="2" />
<text  x="494.38" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1675 (33 samples, 1.22%)</title><rect x="937.1" y="69" width="14.4" height="15.0" fill="rgb(219,96,42)" rx="2" ry="2" />
<text  x="940.14" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:361 (4 samples, 0.15%)</title><rect x="689.9" y="69" width="1.8" height="15.0" fill="rgb(250,95,21)" rx="2" ry="2" />
<text  x="692.93" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3820 (2 samples, 0.07%)</title><rect x="999.7" y="85" width="0.9" height="15.0" fill="rgb(225,11,52)" rx="2" ry="2" />
<text  x="1002.71" y="95.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.consumer.EventLog.shouldLog:134 (1 samples, 0.04%)</title><rect x="1177.4" y="389" width="0.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1180.40" y="399.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:98 (6 samples, 0.22%)</title><rect x="560.5" y="133" width="2.6" height="15.0" fill="rgb(242,41,19)" rx="2" ry="2" />
<text  x="563.46" y="143.5" ></text>
</g>
<g >
<title>java.lang.String.isLatin1:4567 (2 samples, 0.07%)</title><rect x="1062.3" y="149" width="0.8" height="15.0" fill="rgb(221,16,8)" rx="2" ry="2" />
<text  x="1065.27" y="159.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:249 (4 samples, 0.15%)</title><rect x="1067.9" y="133" width="1.8" height="15.0" fill="rgb(240,179,25)" rx="2" ry="2" />
<text  x="1070.92" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (5 samples, 0.18%)</title><rect x="739.5" y="53" width="2.1" height="15.0" fill="rgb(224,122,53)" rx="2" ry="2" />
<text  x="742.46" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (4 samples, 0.15%)</title><rect x="989.3" y="101" width="1.7" height="15.0" fill="rgb(253,222,5)" rx="2" ry="2" />
<text  x="992.28" y="111.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.doPeriodic:189 (19 samples, 0.70%)</title><rect x="1177.8" y="405" width="8.3" height="15.0" fill="rgb(246,75,3)" rx="2" ry="2" />
<text  x="1180.84" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:700 (1 samples, 0.04%)</title><rect x="400.6" y="37" width="0.4" height="15.0" fill="rgb(232,195,24)" rx="2" ry="2" />
<text  x="403.58" y="47.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4745 (4 samples, 0.15%)</title><rect x="466.6" y="101" width="1.8" height="15.0" fill="rgb(228,68,38)" rx="2" ry="2" />
<text  x="469.62" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:165 (5 samples, 0.18%)</title><rect x="976.7" y="101" width="2.2" height="15.0" fill="rgb(220,227,45)" rx="2" ry="2" />
<text  x="979.68" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (4 samples, 0.15%)</title><rect x="884.1" y="53" width="1.8" height="15.0" fill="rgb(233,167,52)" rx="2" ry="2" />
<text  x="887.14" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (4 samples, 0.15%)</title><rect x="987.5" y="101" width="1.8" height="15.0" fill="rgb(216,22,53)" rx="2" ry="2" />
<text  x="990.54" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1528 (7 samples, 0.26%)</title><rect x="764.7" y="69" width="3.0" height="15.0" fill="rgb(251,160,34)" rx="2" ry="2" />
<text  x="767.66" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:650 (9 samples, 0.33%)</title><rect x="879.4" y="53" width="3.9" height="15.0" fill="rgb(205,203,46)" rx="2" ry="2" />
<text  x="882.36" y="63.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (3 samples, 0.11%)</title><rect x="561.8" y="117" width="1.3" height="15.0" fill="rgb(218,74,0)" rx="2" ry="2" />
<text  x="564.77" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.&lt;init&gt;:119 (61 samples, 2.25%)</title><rect x="17.4" y="149" width="26.5" height="15.0" fill="rgb(223,136,10)" rx="2" ry="2" />
<text  x="20.39" y="159.5" >j..</text>
</g>
<g >
<title>java.io.BufferedInputStream.read1:310 (2 samples, 0.07%)</title><rect x="1189.1" y="405" width="0.9" height="15.0" fill="rgb(206,15,29)" rx="2" ry="2" />
<text  x="1192.13" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:391 (1 samples, 0.04%)</title><rect x="411.9" y="53" width="0.4" height="15.0" fill="rgb(243,157,1)" rx="2" ry="2" />
<text  x="414.88" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.length:1499 (1 samples, 0.04%)</title><rect x="515.7" y="85" width="0.4" height="15.0" fill="rgb(244,51,21)" rx="2" ry="2" />
<text  x="518.71" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1491 (4 samples, 0.15%)</title><rect x="189.4" y="69" width="1.8" height="15.0" fill="rgb(212,32,51)" rx="2" ry="2" />
<text  x="192.43" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (17 samples, 0.63%)</title><rect x="444.9" y="85" width="7.4" height="15.0" fill="rgb(207,30,30)" rx="2" ry="2" />
<text  x="447.90" y="95.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (1 samples, 0.04%)</title><rect x="58.7" y="101" width="0.4" height="15.0" fill="rgb(233,155,18)" rx="2" ry="2" />
<text  x="61.66" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4554 (3 samples, 0.11%)</title><rect x="510.5" y="85" width="1.3" height="15.0" fill="rgb(208,120,7)" rx="2" ry="2" />
<text  x="513.50" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1527 (1 samples, 0.04%)</title><rect x="764.2" y="69" width="0.5" height="15.0" fill="rgb(215,169,54)" rx="2" ry="2" />
<text  x="767.23" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1537 (4 samples, 0.15%)</title><rect x="771.6" y="69" width="1.8" height="15.0" fill="rgb(233,109,9)" rx="2" ry="2" />
<text  x="774.61" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (6 samples, 0.22%)</title><rect x="1051.0" y="101" width="2.6" height="15.0" fill="rgb(210,198,45)" rx="2" ry="2" />
<text  x="1053.97" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4148 (26 samples, 0.96%)</title><rect x="581.3" y="133" width="11.3" height="15.0" fill="rgb(231,35,50)" rx="2" ry="2" />
<text  x="584.32" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1623 (33 samples, 1.22%)</title><rect x="890.7" y="69" width="14.3" height="15.0" fill="rgb(239,104,17)" rx="2" ry="2" />
<text  x="893.66" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1622 (3 samples, 0.11%)</title><rect x="371.9" y="69" width="1.3" height="15.0" fill="rgb(209,100,7)" rx="2" ry="2" />
<text  x="374.91" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:499 (3 samples, 0.11%)</title><rect x="1176.1" y="421" width="1.3" height="15.0" fill="rgb(228,186,16)" rx="2" ry="2" />
<text  x="1179.10" y="431.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_Throughput:83 (2,684 samples, 98.82%)</title><rect x="10.0" y="245" width="1166.1" height="15.0" fill="rgb(250,195,4)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_Throughput:83</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1532 (5 samples, 0.18%)</title><rect x="768.6" y="69" width="2.1" height="15.0" fill="rgb(243,12,5)" rx="2" ry="2" />
<text  x="771.57" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4152 (62 samples, 2.28%)</title><rect x="428.0" y="133" width="26.9" height="15.0" fill="rgb(247,217,30)" rx="2" ry="2" />
<text  x="430.95" y="143.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1473 (3 samples, 0.11%)</title><rect x="728.6" y="53" width="1.3" height="15.0" fill="rgb(205,183,22)" rx="2" ry="2" />
<text  x="731.60" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (1 samples, 0.04%)</title><rect x="972.8" y="85" width="0.4" height="15.0" fill="rgb(236,107,16)" rx="2" ry="2" />
<text  x="975.77" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1594 (12 samples, 0.44%)</title><rect x="345.8" y="69" width="5.3" height="15.0" fill="rgb(212,103,42)" rx="2" ry="2" />
<text  x="348.84" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (3 samples, 0.11%)</title><rect x="389.7" y="53" width="1.3" height="15.0" fill="rgb(210,105,21)" rx="2" ry="2" />
<text  x="392.72" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1538 (8 samples, 0.29%)</title><rect x="268.5" y="69" width="3.5" height="15.0" fill="rgb(243,176,12)" rx="2" ry="2" />
<text  x="271.51" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:509 (4 samples, 0.15%)</title><rect x="1063.1" y="149" width="1.8" height="15.0" fill="rgb(231,4,32)" rx="2" ry="2" />
<text  x="1066.14" y="159.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.JVM.emitEvent:-1 (18 samples, 0.66%)</title><rect x="1178.3" y="357" width="7.8" height="15.0" fill="rgb(244,213,4)" rx="2" ry="2" />
<text  x="1181.27" y="367.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4746 (5 samples, 0.18%)</title><rect x="994.5" y="101" width="2.2" height="15.0" fill="rgb(212,219,33)" rx="2" ry="2" />
<text  x="997.49" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1158 (701 samples, 25.81%)</title><rect x="651.7" y="101" width="304.6" height="15.0" fill="rgb(220,99,25)" rx="2" ry="2" />
<text  x="654.70" y="111.5" >java.math.MutableBigInteger.divide:1158</text>
</g>
<g >
<title>java.util.Arrays.fill:3182 (1 samples, 0.04%)</title><rect x="978.4" y="85" width="0.5" height="15.0" fill="rgb(254,201,2)" rx="2" ry="2" />
<text  x="981.42" y="95.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:155 (2 samples, 0.07%)</title><rect x="491.8" y="117" width="0.9" height="15.0" fill="rgb(222,160,0)" rx="2" ry="2" />
<text  x="494.82" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (4 samples, 0.15%)</title><rect x="1011.9" y="85" width="1.7" height="15.0" fill="rgb(205,189,9)" rx="2" ry="2" />
<text  x="1014.87" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:407 (1 samples, 0.04%)</title><rect x="424.0" y="53" width="0.5" height="15.0" fill="rgb(252,104,31)" rx="2" ry="2" />
<text  x="427.04" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.canEncode:51 (28 samples, 1.03%)</title><rect x="1150.0" y="133" width="12.2" height="15.0" fill="rgb(215,229,10)" rx="2" ry="2" />
<text  x="1153.03" y="143.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:159 (14 samples, 0.52%)</title><rect x="1037.9" y="117" width="6.1" height="15.0" fill="rgb(236,21,43)" rx="2" ry="2" />
<text  x="1040.94" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:531 (20 samples, 0.74%)</title><rect x="1162.2" y="149" width="8.7" height="15.0" fill="rgb(233,24,22)" rx="2" ry="2" />
<text  x="1165.19" y="159.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (3 samples, 0.11%)</title><rect x="998.0" y="117" width="1.3" height="15.0" fill="rgb(223,174,3)" rx="2" ry="2" />
<text  x="1000.97" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:510 (2 samples, 0.07%)</title><rect x="1064.9" y="149" width="0.8" height="15.0" fill="rgb(252,118,8)" rx="2" ry="2" />
<text  x="1067.87" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1614 (1 samples, 0.04%)</title><rect x="371.5" y="69" width="0.4" height="15.0" fill="rgb(249,58,1)" rx="2" ry="2" />
<text  x="374.47" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (3 samples, 0.11%)</title><rect x="525.3" y="85" width="1.3" height="15.0" fill="rgb(222,178,35)" rx="2" ry="2" />
<text  x="528.27" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (9 samples, 0.33%)</title><rect x="517.5" y="85" width="3.9" height="15.0" fill="rgb(254,165,19)" rx="2" ry="2" />
<text  x="520.45" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1562 (2 samples, 0.07%)</title><rect x="331.5" y="69" width="0.9" height="15.0" fill="rgb(210,54,52)" rx="2" ry="2" />
<text  x="334.50" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.compare:265 (3 samples, 0.11%)</title><rect x="656.5" y="69" width="1.3" height="15.0" fill="rgb(241,53,41)" rx="2" ry="2" />
<text  x="659.48" y="79.5" ></text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:577 (2,684 samples, 98.82%)</title><rect x="10.0" y="405" width="1166.1" height="15.0" fill="rgb(214,150,12)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >java.util.concurrent.Executors$RunnableAdapter.call:577</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1220 (39 samples, 1.44%)</title><rect x="676.9" y="85" width="16.9" height="15.0" fill="rgb(221,229,8)" rx="2" ry="2" />
<text  x="679.90" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1637 (2 samples, 0.07%)</title><rect x="385.8" y="69" width="0.9" height="15.0" fill="rgb(251,158,51)" rx="2" ry="2" />
<text  x="388.81" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4151 (747 samples, 27.50%)</title><rect x="103.4" y="133" width="324.6" height="15.0" fill="rgb(243,100,5)" rx="2" ry="2" />
<text  x="106.41" y="143.5" >java.math.BigInteger.smallToString:4151</text>
</g>
<g >
<title>java.math.BigInteger.bitLength:3816 (2 samples, 0.07%)</title><rect x="13.5" y="149" width="0.8" height="15.0" fill="rgb(230,89,29)" rx="2" ry="2" />
<text  x="16.48" y="159.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$DMH+0x0000000800001800.932583850.invokeSpecial:-1 (2,684 samples, 98.82%)</title><rect x="10.0" y="261" width="1166.1" height="15.0" fill="rgb(213,43,32)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >java.lang.invoke.LambdaForm$DMH+0x0000000800001800.932583850.invokeSpecial:-1</text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_thrpt_jmhStub:121 (11 samples, 0.41%)</title><rect x="1171.3" y="229" width="4.8" height="15.0" fill="rgb(244,215,24)" rx="2" ry="2" />
<text  x="1174.32" y="239.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:651 (1 samples, 0.04%)</title><rect x="915.9" y="53" width="0.4" height="15.0" fill="rgb(210,41,31)" rx="2" ry="2" />
<text  x="918.85" y="63.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:159 (8 samples, 0.29%)</title><rect x="507.0" y="117" width="3.5" height="15.0" fill="rgb(232,3,2)" rx="2" ry="2" />
<text  x="510.03" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1508 (3 samples, 0.11%)</title><rect x="756.8" y="69" width="1.3" height="15.0" fill="rgb(217,136,32)" rx="2" ry="2" />
<text  x="759.84" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4177 (14 samples, 0.52%)</title><rect x="1047.5" y="133" width="6.1" height="15.0" fill="rgb(244,227,34)" rx="2" ry="2" />
<text  x="1050.50" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:703 (9 samples, 0.33%)</title><rect x="931.5" y="37" width="3.9" height="15.0" fill="rgb(249,155,31)" rx="2" ry="2" />
<text  x="934.49" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:655 (4 samples, 0.15%)</title><rect x="885.9" y="53" width="1.7" height="15.0" fill="rgb(212,86,53)" rx="2" ry="2" />
<text  x="888.88" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1539 (1 samples, 0.04%)</title><rect x="776.8" y="69" width="0.5" height="15.0" fill="rgb(241,58,38)" rx="2" ry="2" />
<text  x="779.83" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (1 samples, 0.04%)</title><rect x="162.5" y="53" width="0.4" height="15.0" fill="rgb(233,224,41)" rx="2" ry="2" />
<text  x="165.50" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:705 (1 samples, 0.04%)</title><rect x="410.6" y="37" width="0.4" height="15.0" fill="rgb(226,124,30)" rx="2" ry="2" />
<text  x="413.57" y="47.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:642 (2,684 samples, 98.82%)</title><rect x="10.0" y="453" width="1166.1" height="15.0" fill="rgb(253,213,45)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:642</text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:253 (1 samples, 0.04%)</title><rect x="1149.6" y="133" width="0.4" height="15.0" fill="rgb(230,36,3)" rx="2" ry="2" />
<text  x="1152.59" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (9 samples, 0.33%)</title><rect x="240.3" y="53" width="3.9" height="15.0" fill="rgb(239,107,45)" rx="2" ry="2" />
<text  x="243.27" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4554 (3 samples, 0.11%)</title><rect x="1044.0" y="85" width="1.3" height="15.0" fill="rgb(219,218,5)" rx="2" ry="2" />
<text  x="1047.02" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4092 (68 samples, 2.50%)</title><rect x="14.3" y="165" width="29.6" height="15.0" fill="rgb(210,209,6)" rx="2" ry="2" />
<text  x="17.34" y="175.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:651 (1 samples, 0.04%)</title><rect x="365.8" y="53" width="0.5" height="15.0" fill="rgb(227,47,37)" rx="2" ry="2" />
<text  x="368.82" y="63.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:164 (9 samples, 0.33%)</title><rect x="510.5" y="117" width="3.9" height="15.0" fill="rgb(244,112,27)" rx="2" ry="2" />
<text  x="513.50" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1634 (3 samples, 0.11%)</title><rect x="383.6" y="69" width="1.3" height="15.0" fill="rgb(220,225,22)" rx="2" ry="2" />
<text  x="386.64" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (10 samples, 0.37%)</title><rect x="908.5" y="53" width="4.3" height="15.0" fill="rgb(240,111,52)" rx="2" ry="2" />
<text  x="911.47" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4139 (25 samples, 0.92%)</title><rect x="567.0" y="133" width="10.8" height="15.0" fill="rgb(253,147,28)" rx="2" ry="2" />
<text  x="569.98" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1499 (40 samples, 1.47%)</title><rect x="737.7" y="69" width="17.4" height="15.0" fill="rgb(214,87,21)" rx="2" ry="2" />
<text  x="740.72" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (12 samples, 0.44%)</title><rect x="516.1" y="101" width="5.3" height="15.0" fill="rgb(240,171,47)" rx="2" ry="2" />
<text  x="519.15" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1510 (4 samples, 0.15%)</title><rect x="253.3" y="69" width="1.7" height="15.0" fill="rgb(237,23,39)" rx="2" ry="2" />
<text  x="256.30" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.length:1499 (3 samples, 0.11%)</title><rect x="1007.1" y="85" width="1.3" height="15.0" fill="rgb(241,189,19)" rx="2" ry="2" />
<text  x="1010.09" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1466 (2 samples, 0.07%)</title><rect x="196.8" y="53" width="0.9" height="15.0" fill="rgb(221,218,24)" rx="2" ry="2" />
<text  x="199.82" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (12 samples, 0.44%)</title><rect x="874.1" y="53" width="5.3" height="15.0" fill="rgb(229,160,11)" rx="2" ry="2" />
<text  x="877.15" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1562 (7 samples, 0.26%)</title><rect x="838.5" y="69" width="3.1" height="15.0" fill="rgb(222,74,15)" rx="2" ry="2" />
<text  x="841.52" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4746 (3 samples, 0.11%)</title><rect x="468.4" y="101" width="1.3" height="15.0" fill="rgb(213,6,42)" rx="2" ry="2" />
<text  x="471.36" y="111.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitForInterruptibly:-1 (3 samples, 0.11%)</title><rect x="1186.5" y="277" width="1.3" height="15.0" fill="rgb(205,188,12)" rx="2" ry="2" />
<text  x="1189.52" y="287.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1605 (3 samples, 0.11%)</title><rect x="888.0" y="69" width="1.4" height="15.0" fill="rgb(237,175,15)" rx="2" ry="2" />
<text  x="891.05" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4163 (1 samples, 0.04%)</title><rect x="1001.4" y="133" width="0.5" height="15.0" fill="rgb(249,212,47)" rx="2" ry="2" />
<text  x="1004.44" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:68 (1 samples, 0.04%)</title><rect x="592.2" y="117" width="0.4" height="15.0" fill="rgb(254,127,45)" rx="2" ry="2" />
<text  x="595.18" y="127.5" ></text>
</g>
<g >
<title>java.util.ArrayList.get:427 (2 samples, 0.07%)</title><rect x="1176.5" y="389" width="0.9" height="15.0" fill="rgb(208,98,26)" rx="2" ry="2" />
<text  x="1179.53" y="399.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1605 (5 samples, 0.18%)</title><rect x="367.1" y="69" width="2.2" height="15.0" fill="rgb(252,45,44)" rx="2" ry="2" />
<text  x="370.13" y="79.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$MH+0x0000000800115c00.1391223627.invoke:-1 (2,684 samples, 98.82%)</title><rect x="10.0" y="277" width="1166.1" height="15.0" fill="rgb(247,176,20)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >java.lang.invoke.LambdaForm$MH+0x0000000800115c00.1391223627.invoke:-1</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1510 (4 samples, 0.15%)</title><rect x="758.1" y="69" width="1.8" height="15.0" fill="rgb(251,132,44)" rx="2" ry="2" />
<text  x="761.14" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4748 (4 samples, 0.15%)</title><rect x="469.7" y="101" width="1.7" height="15.0" fill="rgb(212,207,11)" rx="2" ry="2" />
<text  x="472.66" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4155 (14 samples, 0.52%)</title><rect x="991.9" y="133" width="6.1" height="15.0" fill="rgb(210,199,1)" rx="2" ry="2" />
<text  x="994.89" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4170 (2 samples, 0.07%)</title><rect x="1018.4" y="133" width="0.9" height="15.0" fill="rgb(209,113,6)" rx="2" ry="2" />
<text  x="1021.39" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (60 samples, 2.21%)</title><rect x="428.8" y="117" width="26.1" height="15.0" fill="rgb(235,115,43)" rx="2" ry="2" />
<text  x="431.82" y="127.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:543 (1 samples, 0.04%)</title><rect x="918.9" y="53" width="0.4" height="15.0" fill="rgb(220,192,26)" rx="2" ry="2" />
<text  x="921.90" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:397 (1 samples, 0.04%)</title><rect x="424.5" y="53" width="0.4" height="15.0" fill="rgb(216,227,32)" rx="2" ry="2" />
<text  x="427.48" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1514 (1 samples, 0.04%)</title><rect x="762.5" y="69" width="0.4" height="15.0" fill="rgb(239,142,24)" rx="2" ry="2" />
<text  x="765.49" y="79.5" ></text>
</g>
<g >
<title>java.io.FilterInputStream.read:95 (2 samples, 0.07%)</title><rect x="1189.1" y="453" width="0.9" height="15.0" fill="rgb(241,66,17)" rx="2" ry="2" />
<text  x="1192.13" y="463.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1511 (4 samples, 0.15%)</title><rect x="759.9" y="69" width="1.7" height="15.0" fill="rgb(235,69,23)" rx="2" ry="2" />
<text  x="762.88" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1536 (2 samples, 0.07%)</title><rect x="770.7" y="69" width="0.9" height="15.0" fill="rgb(210,118,12)" rx="2" ry="2" />
<text  x="773.74" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1513 (3 samples, 0.11%)</title><rect x="258.5" y="69" width="1.3" height="15.0" fill="rgb(248,155,12)" rx="2" ry="2" />
<text  x="261.51" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (1 samples, 0.04%)</title><rect x="461.8" y="85" width="0.5" height="15.0" fill="rgb(212,181,29)" rx="2" ry="2" />
<text  x="464.84" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (7 samples, 0.26%)</title><rect x="455.3" y="117" width="3.1" height="15.0" fill="rgb(217,94,44)" rx="2" ry="2" />
<text  x="458.32" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1634 (4 samples, 0.15%)</title><rect x="905.4" y="69" width="1.8" height="15.0" fill="rgb(211,137,38)" rx="2" ry="2" />
<text  x="908.43" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1523 (3 samples, 0.11%)</title><rect x="259.8" y="69" width="1.3" height="15.0" fill="rgb(243,218,32)" rx="2" ry="2" />
<text  x="262.82" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1557 (3 samples, 0.11%)</title><rect x="837.2" y="69" width="1.3" height="15.0" fill="rgb(239,186,40)" rx="2" ry="2" />
<text  x="840.22" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1555 (97 samples, 3.57%)</title><rect x="286.8" y="69" width="42.1" height="15.0" fill="rgb(205,187,34)" rx="2" ry="2" />
<text  x="289.75" y="79.5" >jav..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1496 (2 samples, 0.07%)</title><rect x="235.9" y="69" width="0.9" height="15.0" fill="rgb(242,64,11)" rx="2" ry="2" />
<text  x="238.92" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1494 (7 samples, 0.26%)</title><rect x="729.9" y="69" width="3.0" height="15.0" fill="rgb(209,29,14)" rx="2" ry="2" />
<text  x="732.90" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:155 (3 samples, 0.11%)</title><rect x="1021.4" y="117" width="1.3" height="15.0" fill="rgb(234,185,38)" rx="2" ry="2" />
<text  x="1024.43" y="127.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (2 samples, 0.07%)</title><rect x="476.6" y="69" width="0.9" height="15.0" fill="rgb(209,53,37)" rx="2" ry="2" />
<text  x="479.61" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (21 samples, 0.77%)</title><rect x="941.9" y="53" width="9.1" height="15.0" fill="rgb(244,218,33)" rx="2" ry="2" />
<text  x="944.92" y="63.5" ></text>
</g>
<g >
<title>java.util.Locale.getLanguage:1300 (2 samples, 0.07%)</title><rect x="1069.7" y="133" width="0.8" height="15.0" fill="rgb(217,201,5)" rx="2" ry="2" />
<text  x="1072.65" y="143.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (3 samples, 0.11%)</title><rect x="989.7" y="85" width="1.3" height="15.0" fill="rgb(253,51,17)" rx="2" ry="2" />
<text  x="992.71" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1488 (1 samples, 0.04%)</title><rect x="189.0" y="69" width="0.4" height="15.0" fill="rgb(229,51,24)" rx="2" ry="2" />
<text  x="192.00" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.longValue:4349 (14 samples, 0.52%)</title><rect x="991.9" y="117" width="6.1" height="15.0" fill="rgb(229,224,12)" rx="2" ry="2" />
<text  x="994.89" y="127.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:233 (4 samples, 0.15%)</title><rect x="1186.1" y="405" width="1.7" height="15.0" fill="rgb(233,180,46)" rx="2" ry="2" />
<text  x="1189.09" y="415.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4089 (1 samples, 0.04%)</title><rect x="531.8" y="165" width="0.4" height="15.0" fill="rgb(216,193,39)" rx="2" ry="2" />
<text  x="534.79" y="175.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1532 (4 samples, 0.15%)</title><rect x="266.8" y="69" width="1.7" height="15.0" fill="rgb(223,75,18)" rx="2" ry="2" />
<text  x="269.77" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (2 samples, 0.07%)</title><rect x="525.3" y="69" width="0.8" height="15.0" fill="rgb(241,41,0)" rx="2" ry="2" />
<text  x="528.27" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1677 (8 samples, 0.29%)</title><rect x="424.5" y="69" width="3.5" height="15.0" fill="rgb(211,226,45)" rx="2" ry="2" />
<text  x="427.48" y="79.5" ></text>
</g>
<g >
<title>java.lang.Number.&lt;init&gt;:59 (5 samples, 0.18%)</title><rect x="433.2" y="85" width="2.1" height="15.0" fill="rgb(211,101,54)" rx="2" ry="2" />
<text  x="436.17" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (13 samples, 0.48%)</title><rect x="223.8" y="53" width="5.6" height="15.0" fill="rgb(212,195,26)" rx="2" ry="2" />
<text  x="226.76" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked:75 (4 samples, 0.15%)</title><rect x="1186.1" y="437" width="1.7" height="15.0" fill="rgb(217,115,10)" rx="2" ry="2" />
<text  x="1189.09" y="447.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (7 samples, 0.26%)</title><rect x="522.2" y="69" width="3.1" height="15.0" fill="rgb(252,215,9)" rx="2" ry="2" />
<text  x="525.23" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:121 (9 samples, 0.33%)</title><rect x="71.7" y="117" width="3.9" height="15.0" fill="rgb(243,20,22)" rx="2" ry="2" />
<text  x="74.69" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1523 (2 samples, 0.07%)</title><rect x="762.9" y="69" width="0.9" height="15.0" fill="rgb(207,6,4)" rx="2" ry="2" />
<text  x="765.92" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1158 (678 samples, 24.96%)</title><rect x="133.4" y="101" width="294.6" height="15.0" fill="rgb(212,162,13)" rx="2" ry="2" />
<text  x="136.39" y="111.5" >java.math.MutableBigInteger.divide:1158</text>
</g>
<g >
<title>org.openjdk.jmh.util.Utils.tryWith:507 (3 samples, 0.11%)</title><rect x="1186.5" y="309" width="1.3" height="15.0" fill="rgb(234,156,49)" rx="2" ry="2" />
<text  x="1189.52" y="319.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (52 samples, 1.91%)</title><rect x="959.3" y="117" width="22.6" height="15.0" fill="rgb(210,205,17)" rx="2" ry="2" />
<text  x="962.30" y="127.5" >j..</text>
</g>
<g >
<title>java.util.Arrays.copyOf:3538 (6 samples, 0.22%)</title><rect x="1009.3" y="69" width="2.6" height="15.0" fill="rgb(223,114,18)" rx="2" ry="2" />
<text  x="1012.26" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1467 (1 samples, 0.04%)</title><rect x="197.7" y="53" width="0.4" height="15.0" fill="rgb(246,119,27)" rx="2" ry="2" />
<text  x="200.69" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (5 samples, 0.18%)</title><rect x="518.3" y="69" width="2.2" height="15.0" fill="rgb(215,216,10)" rx="2" ry="2" />
<text  x="521.32" y="79.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.implRead:382 (2 samples, 0.07%)</title><rect x="1189.1" y="421" width="0.9" height="15.0" fill="rgb(212,215,50)" rx="2" ry="2" />
<text  x="1192.13" y="431.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3822 (1 samples, 0.04%)</title><rect x="1045.3" y="85" width="0.5" height="15.0" fill="rgb(242,85,51)" rx="2" ry="2" />
<text  x="1048.32" y="95.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:585 (4 samples, 0.15%)</title><rect x="1006.7" y="101" width="1.7" height="15.0" fill="rgb(243,167,22)" rx="2" ry="2" />
<text  x="1009.66" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (2 samples, 0.07%)</title><rect x="915.0" y="53" width="0.9" height="15.0" fill="rgb(247,47,46)" rx="2" ry="2" />
<text  x="917.99" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1205 (3 samples, 0.11%)</title><rect x="675.6" y="85" width="1.3" height="15.0" fill="rgb(233,10,54)" rx="2" ry="2" />
<text  x="678.60" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (8 samples, 0.29%)</title><rect x="853.7" y="53" width="3.5" height="15.0" fill="rgb(252,193,0)" rx="2" ry="2" />
<text  x="856.73" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:651 (2 samples, 0.07%)</title><rect x="883.3" y="53" width="0.8" height="15.0" fill="rgb(254,19,51)" rx="2" ry="2" />
<text  x="886.27" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (15 samples, 0.55%)</title><rect x="747.7" y="53" width="6.5" height="15.0" fill="rgb(222,109,13)" rx="2" ry="2" />
<text  x="750.72" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4204 (1,109 samples, 40.83%)</title><rect x="44.8" y="149" width="481.8" height="15.0" fill="rgb(215,104,25)" rx="2" ry="2" />
<text  x="47.76" y="159.5" >java.math.BigInteger.toString:4204</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.stopProfilers:260 (3 samples, 0.11%)</title><rect x="1186.5" y="357" width="1.3" height="15.0" fill="rgb(228,224,21)" rx="2" ry="2" />
<text  x="1189.52" y="367.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1495 (6 samples, 0.22%)</title><rect x="732.9" y="69" width="2.7" height="15.0" fill="rgb(215,29,33)" rx="2" ry="2" />
<text  x="735.95" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3892 (1 samples, 0.04%)</title><rect x="673.0" y="53" width="0.4" height="15.0" fill="rgb(246,202,4)" rx="2" ry="2" />
<text  x="675.99" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1156 (72 samples, 2.65%)</title><rect x="620.4" y="101" width="31.3" height="15.0" fill="rgb(222,2,20)" rx="2" ry="2" />
<text  x="623.42" y="111.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1528 (9 samples, 0.33%)</title><rect x="262.9" y="69" width="3.9" height="15.0" fill="rgb(214,24,8)" rx="2" ry="2" />
<text  x="265.86" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4157 (1 samples, 0.04%)</title><rect x="471.4" y="133" width="0.4" height="15.0" fill="rgb(217,65,3)" rx="2" ry="2" />
<text  x="474.40" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:68 (1 samples, 0.04%)</title><rect x="70.4" y="117" width="0.4" height="15.0" fill="rgb(208,79,21)" rx="2" ry="2" />
<text  x="73.39" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1624 (1 samples, 0.04%)</title><rect x="905.0" y="69" width="0.4" height="15.0" fill="rgb(253,135,15)" rx="2" ry="2" />
<text  x="907.99" y="79.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (3 samples, 0.11%)</title><rect x="964.1" y="69" width="1.3" height="15.0" fill="rgb(227,42,38)" rx="2" ry="2" />
<text  x="967.08" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1554 (12 samples, 0.44%)</title><rect x="791.2" y="69" width="5.2" height="15.0" fill="rgb(218,64,12)" rx="2" ry="2" />
<text  x="794.16" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1513 (2 samples, 0.07%)</title><rect x="761.6" y="69" width="0.9" height="15.0" fill="rgb(243,44,10)" rx="2" ry="2" />
<text  x="764.62" y="79.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.read:293 (2 samples, 0.07%)</title><rect x="1189.1" y="373" width="0.9" height="15.0" fill="rgb(225,17,14)" rx="2" ry="2" />
<text  x="1192.13" y="383.5" ></text>
</g>
<g >
<title>jdk.internal.util.ArraysSupport.newLength:637 (3 samples, 0.11%)</title><rect x="518.3" y="53" width="1.3" height="15.0" fill="rgb(247,176,7)" rx="2" ry="2" />
<text  x="521.32" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1196 (55 samples, 2.03%)</title><rect x="139.5" y="85" width="23.9" height="15.0" fill="rgb(206,48,32)" rx="2" ry="2" />
<text  x="142.47" y="95.5" >j..</text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$MH+0x0000000800116000.324023827.invokeExact_MT:-1 (2,684 samples, 98.82%)</title><rect x="10.0" y="293" width="1166.1" height="15.0" fill="rgb(214,108,21)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >java.lang.invoke.LambdaForm$MH+0x0000000800116000.324023827.invokeExact_MT:-1</text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:359 (23 samples, 0.85%)</title><rect x="170.8" y="69" width="9.9" height="15.0" fill="rgb(213,101,12)" rx="2" ry="2" />
<text  x="173.75" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (2 samples, 0.07%)</title><rect x="244.2" y="53" width="0.8" height="15.0" fill="rgb(240,139,12)" rx="2" ry="2" />
<text  x="247.18" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (8 samples, 0.29%)</title><rect x="521.8" y="85" width="3.5" height="15.0" fill="rgb(248,109,1)" rx="2" ry="2" />
<text  x="524.80" y="95.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (5 samples, 0.18%)</title><rect x="1015.8" y="69" width="2.2" height="15.0" fill="rgb(219,95,19)" rx="2" ry="2" />
<text  x="1018.78" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1526 (1 samples, 0.04%)</title><rect x="763.8" y="69" width="0.4" height="15.0" fill="rgb(239,66,43)" rx="2" ry="2" />
<text  x="766.79" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:238 (19 samples, 0.70%)</title><rect x="1177.8" y="389" width="8.3" height="15.0" fill="rgb(213,16,54)" rx="2" ry="2" />
<text  x="1180.84" y="399.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:700 (1 samples, 0.04%)</title><rect x="921.5" y="37" width="0.4" height="15.0" fill="rgb(231,202,34)" rx="2" ry="2" />
<text  x="924.50" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:702 (11 samples, 0.41%)</title><rect x="926.7" y="37" width="4.8" height="15.0" fill="rgb(230,173,30)" rx="2" ry="2" />
<text  x="929.72" y="47.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (2,684 samples, 98.82%)</title><rect x="10.0" y="373" width="1166.1" height="15.0" fill="rgb(205,12,12)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (4 samples, 0.15%)</title><rect x="999.7" y="101" width="1.7" height="15.0" fill="rgb(249,185,31)" rx="2" ry="2" />
<text  x="1002.71" y="111.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (25 samples, 0.92%)</title><rect x="515.7" y="117" width="10.9" height="15.0" fill="rgb(212,27,24)" rx="2" ry="2" />
<text  x="518.71" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (23 samples, 0.85%)</title><rect x="413.2" y="53" width="10.0" height="15.0" fill="rgb(237,59,36)" rx="2" ry="2" />
<text  x="416.18" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4099 (1,129 samples, 41.57%)</title><rect x="563.1" y="165" width="490.5" height="15.0" fill="rgb(240,146,47)" rx="2" ry="2" />
<text  x="566.07" y="175.5" >java.math.BigInteger.toString:4099</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1563 (6 samples, 0.22%)</title><rect x="841.6" y="69" width="2.6" height="15.0" fill="rgb(211,154,11)" rx="2" ry="2" />
<text  x="844.56" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1526 (3 samples, 0.11%)</title><rect x="261.1" y="69" width="1.3" height="15.0" fill="rgb(210,209,45)" rx="2" ry="2" />
<text  x="264.12" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (1 samples, 0.04%)</title><rect x="1008.0" y="69" width="0.4" height="15.0" fill="rgb(213,36,47)" rx="2" ry="2" />
<text  x="1010.96" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (8 samples, 0.29%)</title><rect x="245.0" y="53" width="3.5" height="15.0" fill="rgb(229,202,7)" rx="2" ry="2" />
<text  x="248.04" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.beforeIteration:131 (1 samples, 0.04%)</title><rect x="1186.1" y="341" width="0.4" height="15.0" fill="rgb(243,161,52)" rx="2" ry="2" />
<text  x="1189.09" y="351.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:139 (8 samples, 0.29%)</title><rect x="143.4" y="69" width="3.5" height="15.0" fill="rgb(218,76,15)" rx="2" ry="2" />
<text  x="146.38" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (19 samples, 0.70%)</title><rect x="458.4" y="117" width="8.2" height="15.0" fill="rgb(218,15,34)" rx="2" ry="2" />
<text  x="461.37" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (11 samples, 0.41%)</title><rect x="1013.6" y="101" width="4.8" height="15.0" fill="rgb(241,48,18)" rx="2" ry="2" />
<text  x="1016.61" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (8 samples, 0.29%)</title><rect x="973.2" y="85" width="3.5" height="15.0" fill="rgb(218,6,34)" rx="2" ry="2" />
<text  x="976.20" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1503 (4 samples, 0.15%)</title><rect x="755.1" y="69" width="1.7" height="15.0" fill="rgb(234,96,16)" rx="2" ry="2" />
<text  x="758.10" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (3 samples, 0.11%)</title><rect x="1052.3" y="85" width="1.3" height="15.0" fill="rgb(252,63,5)" rx="2" ry="2" />
<text  x="1055.28" y="95.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (9 samples, 0.33%)</title><rect x="510.5" y="101" width="3.9" height="15.0" fill="rgb(217,176,4)" rx="2" ry="2" />
<text  x="513.50" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (45 samples, 1.66%)</title><rect x="701.2" y="53" width="19.6" height="15.0" fill="rgb(211,79,34)" rx="2" ry="2" />
<text  x="704.23" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (9 samples, 0.33%)</title><rect x="972.8" y="101" width="3.9" height="15.0" fill="rgb(220,94,21)" rx="2" ry="2" />
<text  x="975.77" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1547 (12 samples, 0.44%)</title><rect x="274.2" y="69" width="5.2" height="15.0" fill="rgb(244,228,33)" rx="2" ry="2" />
<text  x="277.15" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3181 (1 samples, 0.04%)</title><rect x="464.4" y="85" width="0.5" height="15.0" fill="rgb(238,199,28)" rx="2" ry="2" />
<text  x="467.45" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1496 (4 samples, 0.15%)</title><rect x="735.6" y="69" width="1.7" height="15.0" fill="rgb(228,57,24)" rx="2" ry="2" />
<text  x="738.55" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.signInt:4733 (1 samples, 0.04%)</title><rect x="996.2" y="85" width="0.5" height="15.0" fill="rgb(230,221,1)" rx="2" ry="2" />
<text  x="999.23" y="95.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:760 (1 samples, 0.04%)</title><rect x="999.3" y="101" width="0.4" height="15.0" fill="rgb(237,43,8)" rx="2" ry="2" />
<text  x="1002.27" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.compare:268 (1 samples, 0.04%)</title><rect x="657.8" y="69" width="0.4" height="15.0" fill="rgb(225,149,6)" rx="2" ry="2" />
<text  x="660.78" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (4 samples, 0.15%)</title><rect x="394.9" y="53" width="1.8" height="15.0" fill="rgb(212,216,3)" rx="2" ry="2" />
<text  x="397.93" y="63.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_thrpt_jmhStub:119 (2,673 samples, 98.42%)</title><rect x="10.0" y="229" width="1161.3" height="15.0" fill="rgb(208,217,37)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_uncompressed_jmhTest.sm2p256v1_uncompressed_thrpt_jmhStub:119</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1138 (3 samples, 0.11%)</title><rect x="985.8" y="101" width="1.3" height="15.0" fill="rgb(248,53,11)" rx="2" ry="2" />
<text  x="988.80" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1492 (13 samples, 0.48%)</title><rect x="191.2" y="69" width="5.6" height="15.0" fill="rgb(220,131,26)" rx="2" ry="2" />
<text  x="194.17" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3539 (1 samples, 0.04%)</title><rect x="517.0" y="69" width="0.5" height="15.0" fill="rgb(254,188,9)" rx="2" ry="2" />
<text  x="520.02" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1598 (1 samples, 0.04%)</title><rect x="887.6" y="69" width="0.4" height="15.0" fill="rgb(229,22,23)" rx="2" ry="2" />
<text  x="890.61" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (6 samples, 0.22%)</title><rect x="982.8" y="117" width="2.6" height="15.0" fill="rgb(245,93,10)" rx="2" ry="2" />
<text  x="985.76" y="127.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (4 samples, 0.15%)</title><rect x="1016.2" y="53" width="1.8" height="15.0" fill="rgb(216,149,32)" rx="2" ry="2" />
<text  x="1019.22" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (2 samples, 0.07%)</title><rect x="412.3" y="53" width="0.9" height="15.0" fill="rgb(239,126,35)" rx="2" ry="2" />
<text  x="415.31" y="63.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder$$Lambda$114+0x000000080017a950.1356110653.run:-1 (23 samples, 0.85%)</title><rect x="1176.1" y="453" width="10.0" height="15.0" fill="rgb(247,145,29)" rx="2" ry="2" />
<text  x="1179.10" y="463.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1637 (2 samples, 0.07%)</title><rect x="907.6" y="69" width="0.9" height="15.0" fill="rgb(247,136,4)" rx="2" ry="2" />
<text  x="910.60" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3892 (1 samples, 0.04%)</title><rect x="161.6" y="53" width="0.5" height="15.0" fill="rgb(211,51,46)" rx="2" ry="2" />
<text  x="164.63" y="63.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (4 samples, 0.15%)</title><rect x="594.4" y="101" width="1.7" height="15.0" fill="rgb(218,21,28)" rx="2" ry="2" />
<text  x="597.35" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (2 samples, 0.07%)</title><rect x="736.4" y="53" width="0.9" height="15.0" fill="rgb(214,178,13)" rx="2" ry="2" />
<text  x="739.42" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (2 samples, 0.07%)</title><rect x="1000.6" y="85" width="0.8" height="15.0" fill="rgb(236,26,17)" rx="2" ry="2" />
<text  x="1003.57" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (2 samples, 0.07%)</title><rect x="385.8" y="53" width="0.9" height="15.0" fill="rgb(245,54,29)" rx="2" ry="2" />
<text  x="388.81" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (4 samples, 0.15%)</title><rect x="1045.8" y="85" width="1.7" height="15.0" fill="rgb(231,117,54)" rx="2" ry="2" />
<text  x="1048.76" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1486 (1 samples, 0.04%)</title><rect x="694.7" y="69" width="0.4" height="15.0" fill="rgb(227,79,31)" rx="2" ry="2" />
<text  x="697.71" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4146 (1 samples, 0.04%)</title><rect x="580.9" y="133" width="0.4" height="15.0" fill="rgb(247,9,27)" rx="2" ry="2" />
<text  x="583.88" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4177 (28 samples, 1.03%)</title><rect x="514.4" y="133" width="12.2" height="15.0" fill="rgb(212,52,17)" rx="2" ry="2" />
<text  x="517.41" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:165 (1 samples, 0.04%)</title><rect x="464.4" y="101" width="0.5" height="15.0" fill="rgb(233,161,12)" rx="2" ry="2" />
<text  x="467.45" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (36 samples, 1.33%)</title><rect x="147.3" y="69" width="15.6" height="15.0" fill="rgb(251,168,13)" rx="2" ry="2" />
<text  x="150.29" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4099 (1,111 samples, 40.91%)</title><rect x="43.9" y="165" width="482.7" height="15.0" fill="rgb(210,183,3)" rx="2" ry="2" />
<text  x="46.89" y="175.5" >java.math.BigInteger.toString:4099</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:263 (2 samples, 0.07%)</title><rect x="520.5" y="69" width="0.9" height="15.0" fill="rgb(222,60,24)" rx="2" ry="2" />
<text  x="523.49" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:547 (3 samples, 0.11%)</title><rect x="919.3" y="53" width="1.3" height="15.0" fill="rgb(226,165,40)" rx="2" ry="2" />
<text  x="922.33" y="63.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:317 (2,684 samples, 98.82%)</title><rect x="10.0" y="421" width="1166.1" height="15.0" fill="rgb(209,61,27)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >java.util.concurrent.FutureTask.run:317</text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1144 (2,684 samples, 98.82%)</title><rect x="10.0" y="437" width="1166.1" height="15.0" fill="rgb(237,221,41)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1144</text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:249 (1 samples, 0.04%)</title><rect x="676.5" y="69" width="0.4" height="15.0" fill="rgb(226,90,45)" rx="2" ry="2" />
<text  x="679.47" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:701 (7 samples, 0.26%)</title><rect x="401.0" y="37" width="3.1" height="15.0" fill="rgb(249,187,26)" rx="2" ry="2" />
<text  x="404.02" y="47.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4534 (4 samples, 0.15%)</title><rect x="1055.3" y="117" width="1.8" height="15.0" fill="rgb(237,174,9)" rx="2" ry="2" />
<text  x="1058.32" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (11 samples, 0.41%)</title><rect x="357.1" y="53" width="4.8" height="15.0" fill="rgb(208,175,31)" rx="2" ry="2" />
<text  x="360.14" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (2 samples, 0.07%)</title><rect x="907.6" y="53" width="0.9" height="15.0" fill="rgb(229,87,16)" rx="2" ry="2" />
<text  x="910.60" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1467 (2 samples, 0.07%)</title><rect x="239.4" y="53" width="0.9" height="15.0" fill="rgb(241,173,54)" rx="2" ry="2" />
<text  x="242.40" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (2 samples, 0.07%)</title><rect x="351.1" y="53" width="0.8" height="15.0" fill="rgb(241,193,15)" rx="2" ry="2" />
<text  x="354.05" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (7 samples, 0.26%)</title><rect x="1015.3" y="85" width="3.1" height="15.0" fill="rgb(221,104,38)" rx="2" ry="2" />
<text  x="1018.35" y="95.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (35 samples, 1.29%)</title><rect x="1022.7" y="117" width="15.2" height="15.0" fill="rgb(227,196,22)" rx="2" ry="2" />
<text  x="1025.73" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:582 (2 samples, 0.07%)</title><rect x="474.9" y="101" width="0.8" height="15.0" fill="rgb(215,0,43)" rx="2" ry="2" />
<text  x="477.87" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1674 (35 samples, 1.29%)</title><rect x="396.7" y="69" width="15.2" height="15.0" fill="rgb(223,219,2)" rx="2" ry="2" />
<text  x="399.67" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:102 (1 samples, 0.04%)</title><rect x="581.8" y="117" width="0.4" height="15.0" fill="rgb(221,194,49)" rx="2" ry="2" />
<text  x="584.75" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (1 samples, 0.04%)</title><rect x="958.9" y="117" width="0.4" height="15.0" fill="rgb(244,56,1)" rx="2" ry="2" />
<text  x="961.87" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (3 samples, 0.11%)</title><rect x="1051.0" y="85" width="1.3" height="15.0" fill="rgb(241,148,39)" rx="2" ry="2" />
<text  x="1053.97" y="95.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitFor:569 (3 samples, 0.11%)</title><rect x="1186.5" y="293" width="1.3" height="15.0" fill="rgb(253,127,54)" rx="2" ry="2" />
<text  x="1189.52" y="303.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (14 samples, 0.52%)</title><rect x="868.1" y="53" width="6.0" height="15.0" fill="rgb(215,164,21)" rx="2" ry="2" />
<text  x="871.06" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:703 (13 samples, 0.48%)</title><rect x="404.9" y="37" width="5.7" height="15.0" fill="rgb(205,154,27)" rx="2" ry="2" />
<text  x="407.93" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:546 (1 samples, 0.04%)</title><rect x="397.1" y="53" width="0.4" height="15.0" fill="rgb(245,126,32)" rx="2" ry="2" />
<text  x="400.11" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1192 (4 samples, 0.15%)</title><rect x="137.7" y="85" width="1.8" height="15.0" fill="rgb(225,5,27)" rx="2" ry="2" />
<text  x="140.73" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:651 (2 samples, 0.07%)</title><rect x="394.1" y="53" width="0.8" height="15.0" fill="rgb(244,0,51)" rx="2" ry="2" />
<text  x="397.06" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.length:1499 (4 samples, 0.15%)</title><rect x="475.7" y="85" width="1.8" height="15.0" fill="rgb(243,36,16)" rx="2" ry="2" />
<text  x="478.74" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1635 (2 samples, 0.07%)</title><rect x="384.9" y="69" width="0.9" height="15.0" fill="rgb(221,26,30)" rx="2" ry="2" />
<text  x="387.94" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3538 (3 samples, 0.11%)</title><rect x="481.4" y="69" width="1.3" height="15.0" fill="rgb(222,174,44)" rx="2" ry="2" />
<text  x="484.39" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1486 (4 samples, 0.15%)</title><rect x="187.3" y="69" width="1.7" height="15.0" fill="rgb(230,31,39)" rx="2" ry="2" />
<text  x="190.26" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1594 (14 samples, 0.52%)</title><rect x="857.2" y="69" width="6.1" height="15.0" fill="rgb(225,165,30)" rx="2" ry="2" />
<text  x="860.20" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4149 (18 samples, 0.66%)</title><rect x="592.6" y="133" width="7.8" height="15.0" fill="rgb(254,97,46)" rx="2" ry="2" />
<text  x="595.61" y="143.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:247 (1 samples, 0.04%)</title><rect x="1067.5" y="133" width="0.4" height="15.0" fill="rgb(206,209,46)" rx="2" ry="2" />
<text  x="1070.48" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1554 (8 samples, 0.29%)</title><rect x="283.3" y="69" width="3.5" height="15.0" fill="rgb(232,22,31)" rx="2" ry="2" />
<text  x="286.28" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (1 samples, 0.04%)</title><rect x="1056.6" y="101" width="0.5" height="15.0" fill="rgb(252,119,9)" rx="2" ry="2" />
<text  x="1059.62" y="111.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.execute:191 (1 samples, 0.04%)</title><rect x="1186.1" y="325" width="0.4" height="15.0" fill="rgb(223,115,8)" rx="2" ry="2" />
<text  x="1189.09" y="335.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4150 (45 samples, 1.66%)</title><rect x="600.4" y="133" width="19.6" height="15.0" fill="rgb(251,54,36)" rx="2" ry="2" />
<text  x="603.43" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1598 (1 samples, 0.04%)</title><rect x="366.7" y="69" width="0.4" height="15.0" fill="rgb(242,154,4)" rx="2" ry="2" />
<text  x="369.69" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:165 (1 samples, 0.04%)</title><rect x="452.3" y="101" width="0.4" height="15.0" fill="rgb(216,213,16)" rx="2" ry="2" />
<text  x="455.28" y="111.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1:442 (23 samples, 0.85%)</title><rect x="1176.1" y="437" width="10.0" height="15.0" fill="rgb(205,143,46)" rx="2" ry="2" />
<text  x="1179.10" y="447.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (6 samples, 0.22%)</title><rect x="741.6" y="53" width="2.6" height="15.0" fill="rgb(243,96,20)" rx="2" ry="2" />
<text  x="744.63" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1494 (7 samples, 0.26%)</title><rect x="230.7" y="69" width="3.0" height="15.0" fill="rgb(240,157,25)" rx="2" ry="2" />
<text  x="233.71" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:164 (3 samples, 0.11%)</title><rect x="473.1" y="117" width="1.3" height="15.0" fill="rgb(249,65,3)" rx="2" ry="2" />
<text  x="476.14" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:522 (11 samples, 0.41%)</title><rect x="1070.5" y="149" width="4.8" height="15.0" fill="rgb(223,7,20)" rx="2" ry="2" />
<text  x="1073.52" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1493 (78 samples, 2.87%)</title><rect x="196.8" y="69" width="33.9" height="15.0" fill="rgb(216,111,42)" rx="2" ry="2" />
<text  x="199.82" y="79.5" >ja..</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:239 (1 samples, 0.04%)</title><rect x="479.2" y="85" width="0.5" height="15.0" fill="rgb(209,40,30)" rx="2" ry="2" />
<text  x="482.22" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1492 (11 samples, 0.41%)</title><rect x="695.1" y="69" width="4.8" height="15.0" fill="rgb(229,166,18)" rx="2" ry="2" />
<text  x="698.15" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:391 (2 samples, 0.07%)</title><rect x="937.1" y="53" width="0.9" height="15.0" fill="rgb(227,72,16)" rx="2" ry="2" />
<text  x="940.14" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:1487 (6 samples, 0.22%)</title><rect x="527.9" y="133" width="2.6" height="15.0" fill="rgb(238,162,10)" rx="2" ry="2" />
<text  x="530.88" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4204 (1,129 samples, 41.57%)</title><rect x="563.1" y="149" width="490.5" height="15.0" fill="rgb(210,224,21)" rx="2" ry="2" />
<text  x="566.07" y="159.5" >java.math.BigInteger.toString:4204</text>
</g>
<g >
<title>java.math.BigInteger.toString:4203 (2 samples, 0.07%)</title><rect x="43.9" y="149" width="0.9" height="15.0" fill="rgb(223,32,30)" rx="2" ry="2" />
<text  x="46.89" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1654 (21 samples, 0.77%)</title><rect x="387.5" y="69" width="9.2" height="15.0" fill="rgb(243,205,39)" rx="2" ry="2" />
<text  x="390.55" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (2 samples, 0.07%)</title><rect x="473.6" y="101" width="0.8" height="15.0" fill="rgb(210,115,47)" rx="2" ry="2" />
<text  x="476.57" y="111.5" ></text>
</g>
<g >
<title>jdk.internal.util.ArraysSupport.newLength:637 (1 samples, 0.04%)</title><rect x="1049.2" y="53" width="0.5" height="15.0" fill="rgb(213,108,40)" rx="2" ry="2" />
<text  x="1052.23" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1139 (1 samples, 0.04%)</title><rect x="987.1" y="101" width="0.4" height="15.0" fill="rgb(232,139,47)" rx="2" ry="2" />
<text  x="990.11" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:263 (3 samples, 0.11%)</title><rect x="1049.7" y="69" width="1.3" height="15.0" fill="rgb(219,76,22)" rx="2" ry="2" />
<text  x="1052.67" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:260 (2 samples, 0.07%)</title><rect x="517.5" y="69" width="0.8" height="15.0" fill="rgb(237,49,52)" rx="2" ry="2" />
<text  x="520.45" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.toString:453 (4 samples, 0.15%)</title><rect x="1055.3" y="149" width="1.8" height="15.0" fill="rgb(211,181,11)" rx="2" ry="2" />
<text  x="1058.32" y="159.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:518 (2 samples, 0.07%)</title><rect x="1069.7" y="149" width="0.8" height="15.0" fill="rgb(243,120,25)" rx="2" ry="2" />
<text  x="1072.65" y="159.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (5 samples, 0.18%)</title><rect x="1048.8" y="101" width="2.2" height="15.0" fill="rgb(215,110,52)" rx="2" ry="2" />
<text  x="1051.80" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:361 (5 samples, 0.18%)</title><rect x="180.7" y="69" width="2.2" height="15.0" fill="rgb(206,49,18)" rx="2" ry="2" />
<text  x="183.74" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1613 (2 samples, 0.07%)</title><rect x="370.6" y="69" width="0.9" height="15.0" fill="rgb(234,16,32)" rx="2" ry="2" />
<text  x="373.60" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1581 (8 samples, 0.29%)</title><rect x="853.7" y="69" width="3.5" height="15.0" fill="rgb(242,54,47)" rx="2" ry="2" />
<text  x="856.73" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:68 (1 samples, 0.04%)</title><rect x="675.2" y="69" width="0.4" height="15.0" fill="rgb(207,118,44)" rx="2" ry="2" />
<text  x="678.16" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (3 samples, 0.11%)</title><rect x="1052.3" y="69" width="1.3" height="15.0" fill="rgb(240,221,11)" rx="2" ry="2" />
<text  x="1055.28" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4152 (59 samples, 2.17%)</title><rect x="956.3" y="133" width="25.6" height="15.0" fill="rgb(230,96,43)" rx="2" ry="2" />
<text  x="959.26" y="143.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1187 (3 samples, 0.11%)</title><rect x="654.3" y="85" width="1.3" height="15.0" fill="rgb(237,194,3)" rx="2" ry="2" />
<text  x="657.31" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4167 (37 samples, 1.36%)</title><rect x="474.4" y="133" width="16.1" height="15.0" fill="rgb(214,99,30)" rx="2" ry="2" />
<text  x="477.44" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1495 (5 samples, 0.18%)</title><rect x="233.7" y="69" width="2.2" height="15.0" fill="rgb(248,162,31)" rx="2" ry="2" />
<text  x="236.75" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (7 samples, 0.26%)</title><rect x="978.9" y="101" width="3.0" height="15.0" fill="rgb(244,60,21)" rx="2" ry="2" />
<text  x="981.85" y="111.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (3 samples, 0.11%)</title><rect x="74.3" y="101" width="1.3" height="15.0" fill="rgb(230,72,46)" rx="2" ry="2" />
<text  x="77.30" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:650 (2 samples, 0.07%)</title><rect x="393.2" y="53" width="0.9" height="15.0" fill="rgb(214,23,7)" rx="2" ry="2" />
<text  x="396.20" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (1 samples, 0.04%)</title><rect x="103.0" y="117" width="0.4" height="15.0" fill="rgb(227,221,7)" rx="2" ry="2" />
<text  x="105.97" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1555 (94 samples, 3.46%)</title><rect x="796.4" y="69" width="40.8" height="15.0" fill="rgb(225,11,47)" rx="2" ry="2" />
<text  x="799.38" y="79.5" >jav..</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (4 samples, 0.15%)</title><rect x="460.1" y="101" width="1.7" height="15.0" fill="rgb(212,103,54)" rx="2" ry="2" />
<text  x="463.10" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1473 (2 samples, 0.07%)</title><rect x="754.2" y="53" width="0.9" height="15.0" fill="rgb(248,70,2)" rx="2" ry="2" />
<text  x="757.23" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1466 (1 samples, 0.04%)</title><rect x="699.9" y="53" width="0.5" height="15.0" fill="rgb(230,5,51)" rx="2" ry="2" />
<text  x="702.93" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:102 (2 samples, 0.07%)</title><rect x="58.2" y="117" width="0.9" height="15.0" fill="rgb(253,114,39)" rx="2" ry="2" />
<text  x="61.23" y="127.5" ></text>
</g>
<g >
<title>java.security.spec.ECPoint.getAffineX:77 (1 samples, 0.04%)</title><rect x="13.0" y="181" width="0.5" height="15.0" fill="rgb(242,104,2)" rx="2" ry="2" />
<text  x="16.04" y="191.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4140 (7 samples, 0.26%)</title><rect x="54.7" y="133" width="3.1" height="15.0" fill="rgb(248,160,28)" rx="2" ry="2" />
<text  x="57.75" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:552 (33 samples, 1.22%)</title><rect x="921.1" y="53" width="14.3" height="15.0" fill="rgb(208,41,3)" rx="2" ry="2" />
<text  x="924.07" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1497 (3 samples, 0.11%)</title><rect x="236.8" y="69" width="1.3" height="15.0" fill="rgb(246,85,16)" rx="2" ry="2" />
<text  x="239.79" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:164 (5 samples, 0.18%)</title><rect x="999.3" y="117" width="2.1" height="15.0" fill="rgb(230,143,7)" rx="2" ry="2" />
<text  x="1002.27" y="127.5" ></text>
</g>
<g >
<title>org.sample.BenchmarkPublicKeys.sm2p256v1_uncompressed:26 (2,673 samples, 98.42%)</title><rect x="10.0" y="213" width="1161.3" height="15.0" fill="rgb(218,146,42)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >org.sample.BenchmarkPublicKeys.sm2p256v1_uncompressed:26</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (2 samples, 0.07%)</title><rect x="599.6" y="117" width="0.8" height="15.0" fill="rgb(242,107,22)" rx="2" ry="2" />
<text  x="602.57" y="127.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.isToDisk:513 (3 samples, 0.11%)</title><rect x="1176.1" y="405" width="1.3" height="15.0" fill="rgb(216,175,8)" rx="2" ry="2" />
<text  x="1179.10" y="415.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (8 samples, 0.29%)</title><rect x="487.0" y="85" width="3.5" height="15.0" fill="rgb(211,229,22)" rx="2" ry="2" />
<text  x="490.04" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1152 (747 samples, 27.50%)</title><rect x="103.4" y="117" width="324.6" height="15.0" fill="rgb(243,119,45)" rx="2" ry="2" />
<text  x="106.41" y="127.5" >java.math.MutableBigInteger.divide:1152</text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (4 samples, 0.15%)</title><rect x="464.9" y="101" width="1.7" height="15.0" fill="rgb(216,77,49)" rx="2" ry="2" />
<text  x="467.88" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (2 samples, 0.07%)</title><rect x="1014.5" y="69" width="0.8" height="15.0" fill="rgb(214,137,5)" rx="2" ry="2" />
<text  x="1017.48" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1139 (4 samples, 0.15%)</title><rect x="458.4" y="101" width="1.7" height="15.0" fill="rgb(212,225,27)" rx="2" ry="2" />
<text  x="461.37" y="111.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.readBytes:-1 (2 samples, 0.07%)</title><rect x="1189.1" y="357" width="0.9" height="15.0" fill="rgb(240,140,4)" rx="2" ry="2" />
<text  x="1192.13" y="367.5" ></text>
</g>
<g >
<title>java.math.BigInteger.longValue:4349 (11 samples, 0.41%)</title><rect x="466.6" y="117" width="4.8" height="15.0" fill="rgb(221,11,23)" rx="2" ry="2" />
<text  x="469.62" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4172 (65 samples, 2.39%)</title><rect x="1019.3" y="133" width="28.2" height="15.0" fill="rgb(226,166,15)" rx="2" ry="2" />
<text  x="1022.26" y="143.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1542 (2 samples, 0.07%)</title><rect x="777.3" y="69" width="0.8" height="15.0" fill="rgb(242,79,29)" rx="2" ry="2" />
<text  x="780.26" y="79.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (4 samples, 0.15%)</title><rect x="433.6" y="69" width="1.7" height="15.0" fill="rgb(227,69,49)" rx="2" ry="2" />
<text  x="436.60" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:553 (4 samples, 0.15%)</title><rect x="935.4" y="53" width="1.7" height="15.0" fill="rgb(210,190,41)" rx="2" ry="2" />
<text  x="938.41" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (2 samples, 0.07%)</title><rect x="473.6" y="85" width="0.8" height="15.0" fill="rgb(209,58,26)" rx="2" ry="2" />
<text  x="476.57" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1612 (1 samples, 0.04%)</title><rect x="889.4" y="69" width="0.4" height="15.0" fill="rgb(220,205,3)" rx="2" ry="2" />
<text  x="892.35" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1499 (31 samples, 1.14%)</title><rect x="238.1" y="69" width="13.5" height="15.0" fill="rgb(222,224,4)" rx="2" ry="2" />
<text  x="241.09" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (8 samples, 0.29%)</title><rect x="596.1" y="117" width="3.5" height="15.0" fill="rgb(223,55,24)" rx="2" ry="2" />
<text  x="599.09" y="127.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (1 samples, 0.04%)</title><rect x="530.1" y="101" width="0.4" height="15.0" fill="rgb(209,19,23)" rx="2" ry="2" />
<text  x="533.05" y="111.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.doSingle:138 (4 samples, 0.15%)</title><rect x="1186.1" y="421" width="1.7" height="15.0" fill="rgb(224,158,12)" rx="2" ry="2" />
<text  x="1189.09" y="431.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (3 samples, 0.11%)</title><rect x="487.9" y="53" width="1.3" height="15.0" fill="rgb(230,228,54)" rx="2" ry="2" />
<text  x="490.91" y="63.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitFor:569 (1 samples, 0.04%)</title><rect x="1186.1" y="293" width="0.4" height="15.0" fill="rgb(235,1,0)" rx="2" ry="2" />
<text  x="1189.09" y="303.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:252 (21 samples, 0.77%)</title><rect x="1140.5" y="133" width="9.1" height="15.0" fill="rgb(247,82,30)" rx="2" ry="2" />
<text  x="1143.47" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:241 (8 samples, 0.29%)</title><rect x="1008.4" y="85" width="3.5" height="15.0" fill="rgb(245,91,46)" rx="2" ry="2" />
<text  x="1011.39" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (26 samples, 0.96%)</title><rect x="59.1" y="117" width="11.3" height="15.0" fill="rgb(246,179,40)" rx="2" ry="2" />
<text  x="62.09" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1531 (2 samples, 0.07%)</title><rect x="767.7" y="69" width="0.9" height="15.0" fill="rgb(248,220,44)" rx="2" ry="2" />
<text  x="770.70" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (2 samples, 0.07%)</title><rect x="80.4" y="117" width="0.9" height="15.0" fill="rgb(211,179,7)" rx="2" ry="2" />
<text  x="83.38" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1152 (774 samples, 28.50%)</title><rect x="620.0" y="117" width="336.3" height="15.0" fill="rgb(205,92,45)" rx="2" ry="2" />
<text  x="622.99" y="127.5" >java.math.MutableBigInteger.divide:1152</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (2 samples, 0.07%)</title><rect x="484.4" y="69" width="0.9" height="15.0" fill="rgb(238,90,7)" rx="2" ry="2" />
<text  x="487.43" y="79.5" ></text>
</g>
<g >
<title>java.lang.Number.&lt;init&gt;:59 (4 samples, 0.15%)</title><rect x="963.6" y="85" width="1.8" height="15.0" fill="rgb(207,70,21)" rx="2" ry="2" />
<text  x="966.65" y="95.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:281 (4 samples, 0.15%)</title><rect x="1186.1" y="389" width="1.7" height="15.0" fill="rgb(240,194,37)" rx="2" ry="2" />
<text  x="1189.09" y="399.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1654 (24 samples, 0.88%)</title><rect x="908.5" y="69" width="10.4" height="15.0" fill="rgb(225,19,42)" rx="2" ry="2" />
<text  x="911.47" y="79.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (1 samples, 0.04%)</title><rect x="619.6" y="101" width="0.4" height="15.0" fill="rgb(234,67,26)" rx="2" ry="2" />
<text  x="622.55" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:406 (2 samples, 0.07%)</title><rect x="423.2" y="53" width="0.8" height="15.0" fill="rgb(248,115,44)" rx="2" ry="2" />
<text  x="426.17" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (8 samples, 0.29%)</title><rect x="744.2" y="53" width="3.5" height="15.0" fill="rgb(237,11,2)" rx="2" ry="2" />
<text  x="747.24" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (23 samples, 0.85%)</title><rect x="582.2" y="117" width="10.0" height="15.0" fill="rgb(217,88,10)" rx="2" ry="2" />
<text  x="585.19" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1675 (29 samples, 1.07%)</title><rect x="411.9" y="69" width="12.6" height="15.0" fill="rgb(245,6,17)" rx="2" ry="2" />
<text  x="414.88" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1635 (1 samples, 0.04%)</title><rect x="907.2" y="69" width="0.4" height="15.0" fill="rgb(226,184,4)" rx="2" ry="2" />
<text  x="910.16" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1192 (6 samples, 0.22%)</title><rect x="655.6" y="85" width="2.6" height="15.0" fill="rgb(214,71,20)" rx="2" ry="2" />
<text  x="658.61" y="95.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (11 samples, 0.41%)</title><rect x="1048.8" y="117" width="4.8" height="15.0" fill="rgb(214,180,35)" rx="2" ry="2" />
<text  x="1051.80" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1652 (2 samples, 0.07%)</title><rect x="386.7" y="69" width="0.8" height="15.0" fill="rgb(226,212,29)" rx="2" ry="2" />
<text  x="389.68" y="79.5" ></text>
</g>
<g >
<title>java.util.Objects.checkIndex:385 (1 samples, 0.04%)</title><rect x="1177.0" y="373" width="0.4" height="15.0" fill="rgb(239,4,21)" rx="2" ry="2" />
<text  x="1179.97" y="383.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:121 (4 samples, 0.15%)</title><rect x="594.4" y="117" width="1.7" height="15.0" fill="rgb(209,155,22)" rx="2" ry="2" />
<text  x="597.35" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:511 (9 samples, 0.33%)</title><rect x="1065.7" y="149" width="4.0" height="15.0" fill="rgb(240,162,22)" rx="2" ry="2" />
<text  x="1068.74" y="159.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (4 samples, 0.15%)</title><rect x="487.5" y="69" width="1.7" height="15.0" fill="rgb(243,38,44)" rx="2" ry="2" />
<text  x="490.47" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1553 (6 samples, 0.22%)</title><rect x="788.6" y="69" width="2.6" height="15.0" fill="rgb(213,50,0)" rx="2" ry="2" />
<text  x="791.56" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4155 (11 samples, 0.41%)</title><rect x="466.6" y="133" width="4.8" height="15.0" fill="rgb(218,44,39)" rx="2" ry="2" />
<text  x="469.62" y="143.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (2 samples, 0.07%)</title><rect x="43.0" y="117" width="0.9" height="15.0" fill="rgb(232,174,16)" rx="2" ry="2" />
<text  x="46.02" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1578 (8 samples, 0.29%)</title><rect x="335.0" y="69" width="3.5" height="15.0" fill="rgb(234,14,17)" rx="2" ry="2" />
<text  x="337.98" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:121 (3 samples, 0.11%)</title><rect x="618.7" y="117" width="1.3" height="15.0" fill="rgb(253,27,37)" rx="2" ry="2" />
<text  x="621.68" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (12 samples, 0.44%)</title><rect x="1008.4" y="101" width="5.2" height="15.0" fill="rgb(240,225,48)" rx="2" ry="2" />
<text  x="1011.39" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:551 (2 samples, 0.07%)</title><rect x="399.7" y="53" width="0.9" height="15.0" fill="rgb(210,123,9)" rx="2" ry="2" />
<text  x="402.71" y="63.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (1 samples, 0.04%)</title><rect x="526.1" y="69" width="0.5" height="15.0" fill="rgb(215,80,51)" rx="2" ry="2" />
<text  x="529.14" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (4 samples, 0.15%)</title><rect x="1049.2" y="85" width="1.8" height="15.0" fill="rgb(245,173,52)" rx="2" ry="2" />
<text  x="1052.23" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (1 samples, 0.04%)</title><rect x="366.3" y="53" width="0.4" height="15.0" fill="rgb(217,183,25)" rx="2" ry="2" />
<text  x="369.26" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (4 samples, 0.15%)</title><rect x="673.4" y="53" width="1.8" height="15.0" fill="rgb(252,24,5)" rx="2" ry="2" />
<text  x="676.42" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:528 (28 samples, 1.03%)</title><rect x="1150.0" y="149" width="12.2" height="15.0" fill="rgb(240,191,11)" rx="2" ry="2" />
<text  x="1153.03" y="159.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:317 (2,684 samples, 98.82%)</title><rect x="10.0" y="389" width="1166.1" height="15.0" fill="rgb(210,87,26)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >java.util.concurrent.FutureTask.run:317</text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:552 (24 samples, 0.88%)</title><rect x="400.6" y="53" width="10.4" height="15.0" fill="rgb(232,73,31)" rx="2" ry="2" />
<text  x="403.58" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1677 (11 samples, 0.41%)</title><rect x="951.5" y="69" width="4.8" height="15.0" fill="rgb(242,32,45)" rx="2" ry="2" />
<text  x="954.48" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4160 (8 samples, 0.29%)</title><rect x="998.0" y="133" width="3.4" height="15.0" fill="rgb(206,194,34)" rx="2" ry="2" />
<text  x="1000.97" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:553 (2 samples, 0.07%)</title><rect x="411.0" y="53" width="0.9" height="15.0" fill="rgb(227,142,54)" rx="2" ry="2" />
<text  x="414.01" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:702 (2 samples, 0.07%)</title><rect x="404.1" y="37" width="0.8" height="15.0" fill="rgb(245,107,34)" rx="2" ry="2" />
<text  x="407.06" y="47.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.execute:191 (3 samples, 0.11%)</title><rect x="1186.5" y="325" width="1.3" height="15.0" fill="rgb(241,118,19)" rx="2" ry="2" />
<text  x="1189.52" y="335.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:701 (11 samples, 0.41%)</title><rect x="921.9" y="37" width="4.8" height="15.0" fill="rgb(211,24,7)" rx="2" ry="2" />
<text  x="924.94" y="47.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl:156 (2,684 samples, 98.82%)</title><rect x="10.0" y="309" width="1166.1" height="15.0" fill="rgb(248,119,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl:156</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1579 (9 samples, 0.33%)</title><rect x="849.8" y="69" width="3.9" height="15.0" fill="rgb(212,42,1)" rx="2" ry="2" />
<text  x="852.82" y="79.5" ></text>
</g>
<g >
<title>jdk.internal.util.ArraysSupport.newLength:638 (2 samples, 0.07%)</title><rect x="519.6" y="53" width="0.9" height="15.0" fill="rgb(242,36,34)" rx="2" ry="2" />
<text  x="522.62" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1205 (5 samples, 0.18%)</title><rect x="163.4" y="85" width="2.1" height="15.0" fill="rgb(213,92,21)" rx="2" ry="2" />
<text  x="166.37" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:364 (5 samples, 0.18%)</title><rect x="182.9" y="69" width="2.2" height="15.0" fill="rgb(214,180,2)" rx="2" ry="2" />
<text  x="185.92" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:359 (20 samples, 0.74%)</title><rect x="681.2" y="69" width="8.7" height="15.0" fill="rgb(244,106,10)" rx="2" ry="2" />
<text  x="684.24" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (5 samples, 0.18%)</title><rect x="912.8" y="53" width="2.2" height="15.0" fill="rgb(236,87,34)" rx="2" ry="2" />
<text  x="915.81" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:391 (1 samples, 0.04%)</title><rect x="951.5" y="53" width="0.4" height="15.0" fill="rgb(232,168,0)" rx="2" ry="2" />
<text  x="954.48" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedMain.main:86 (4 samples, 0.15%)</title><rect x="1186.1" y="469" width="1.7" height="15.0" fill="rgb(241,107,37)" rx="2" ry="2" />
<text  x="1189.09" y="479.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3181 (1 samples, 0.04%)</title><rect x="452.3" y="85" width="0.4" height="15.0" fill="rgb(249,212,15)" rx="2" ry="2" />
<text  x="455.28" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (6 samples, 0.22%)</title><rect x="461.8" y="101" width="2.6" height="15.0" fill="rgb(222,146,13)" rx="2" ry="2" />
<text  x="464.84" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1595 (56 samples, 2.06%)</title><rect x="863.3" y="69" width="24.3" height="15.0" fill="rgb(210,40,40)" rx="2" ry="2" />
<text  x="866.28" y="79.5" >j..</text>
</g>
<g >
<title>java.lang.StringLatin1.newString:760 (1 samples, 0.04%)</title><rect x="473.1" y="101" width="0.5" height="15.0" fill="rgb(233,33,50)" rx="2" ry="2" />
<text  x="476.14" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1527 (1 samples, 0.04%)</title><rect x="262.4" y="69" width="0.5" height="15.0" fill="rgb(216,216,31)" rx="2" ry="2" />
<text  x="265.42" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:526 (77 samples, 2.84%)</title><rect x="1080.5" y="149" width="33.5" height="15.0" fill="rgb(224,69,26)" rx="2" ry="2" />
<text  x="1083.52" y="159.5" >ja..</text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4133 (5 samples, 0.18%)</title><rect x="564.8" y="133" width="2.2" height="15.0" fill="rgb(209,175,8)" rx="2" ry="2" />
<text  x="567.81" y="143.5" ></text>
</g>
</g>
</svg>
