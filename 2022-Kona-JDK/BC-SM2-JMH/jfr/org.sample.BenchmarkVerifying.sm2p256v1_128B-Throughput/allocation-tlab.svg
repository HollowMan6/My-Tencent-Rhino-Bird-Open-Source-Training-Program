<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >allocation-tlab sm2p256v1_128B-Throughput</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>org.bouncycastle.asn1.ASN1Integer.getValue:-1 (252,756 samples, 0.31%)</title><rect x="1182.0" y="213" width="3.6" height="15.0" fill="rgb(235,205,30)" rx="2" ry="2" />
<text  x="1184.96" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (73,400 samples, 0.09%)</title><rect x="29.0" y="101" width="1.1" height="15.0" fill="rgb(249,14,24)" rx="2" ry="2" />
<text  x="32.05" y="111.5" ></text>
</g>
<g >
<title>java.lang.Thread.run:834 (82,829,115 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(233,20,24)" rx="2" ry="2" />
<text  x="13.01" y="575.5" >java.lang.Thread.run:834</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (8,775,290 samples, 10.59%)</title><rect x="912.3" y="133" width="125.0" height="15.0" fill="rgb(240,211,50)" rx="2" ry="2" />
<text  x="915.25" y="143.5" >org.bouncycastl..</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1EncodableVector.takeElements:-1 (16,708 samples, 0.02%)</title><rect x="1181.7" y="133" width="0.3" height="15.0" fill="rgb(243,184,44)" rx="2" ry="2" />
<text  x="1184.72" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1EncodableVector.&lt;init&gt;:-1 (18,342 samples, 0.02%)</title><rect x="1185.6" y="197" width="0.2" height="15.0" fill="rgb(214,65,2)" rx="2" ry="2" />
<text  x="1188.57" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (37,066 samples, 0.04%)</title><rect x="33.7" y="101" width="0.6" height="15.0" fill="rgb(208,72,32)" rx="2" ry="2" />
<text  x="36.74" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3405 (252,272 samples, 0.30%)</title><rect x="1152.5" y="149" width="3.6" height="15.0" fill="rgb(206,39,25)" rx="2" ry="2" />
<text  x="1155.49" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1191 (30,280 samples, 0.04%)</title><rect x="28.1" y="165" width="0.5" height="15.0" fill="rgb(217,174,7)" rx="2" ry="2" />
<text  x="31.13" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickFixedPoint:-1 (79,374,896 samples, 95.83%)</title><rect x="34.3" y="197" width="1130.7" height="15.0" fill="rgb(209,141,35)" rx="2" ry="2" />
<text  x="37.27" y="207.5" >org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickFixedPoint:-1</text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineVerify:-1 (81,607,133 samples, 98.52%)</title><rect x="27.4" y="277" width="1162.6" height="15.0" fill="rgb(207,169,32)" rx="2" ry="2" />
<text  x="30.41" y="287.5" >org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineVerify:-1</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.decodeValue:-1 (252,756 samples, 0.31%)</title><rect x="1182.0" y="229" width="3.6" height="15.0" fill="rgb(210,105,1)" rx="2" ry="2" />
<text  x="1184.96" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.fromBigInteger:-1 (243,662 samples, 0.29%)</title><rect x="1165.4" y="69" width="3.4" height="15.0" fill="rgb(225,228,18)" rx="2" ry="2" />
<text  x="1168.37" y="79.5" ></text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:154 (280,288 samples, 0.34%)</title><rect x="10.5" y="245" width="4.0" height="15.0" fill="rgb(223,82,20)" rx="2" ry="2" />
<text  x="13.47" y="255.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1 (33,675,868 samples, 40.66%)</title><rect x="420.1" y="165" width="479.7" height="15.0" fill="rgb(216,127,37)" rx="2" ry="2" />
<text  x="423.10" y="175.5" >org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1</text>
</g>
<g >
<title>java.math.BigInteger.add:1403 (21,486 samples, 0.03%)</title><rect x="27.4" y="213" width="0.3" height="15.0" fill="rgb(245,19,50)" rx="2" ry="2" />
<text  x="30.42" y="223.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:236 (312,776 samples, 0.38%)</title><rect x="10.0" y="277" width="4.5" height="15.0" fill="rgb(223,4,51)" rx="2" ry="2" />
<text  x="13.01" y="287.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_128B_jmhTest.sm2p256v1_128B_Throughput:83 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(241,165,21)" rx="2" ry="2" />
<text  x="13.01" y="383.5" >org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_128B_jmhTest.sm2p256v1_128B_Throughput:83</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve.createRawPoint:-1 (1,312,141 samples, 1.58%)</title><rect x="42.5" y="149" width="18.7" height="15.0" fill="rgb(232,76,16)" rx="2" ry="2" />
<text  x="45.51" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.createScaledPoint:-1 (273,900 samples, 0.33%)</title><rect x="1165.1" y="197" width="3.9" height="15.0" fill="rgb(237,207,35)" rx="2" ry="2" />
<text  x="1168.06" y="207.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(225,124,48)" rx="2" ry="2" />
<text  x="13.01" y="431.5" >jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43</text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:566 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(244,31,54)" rx="2" ry="2" />
<text  x="13.01" y="447.5" >java.lang.reflect.Method.invoke:566</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (4,310,067 samples, 5.20%)</title><rect x="191.5" y="149" width="61.4" height="15.0" fill="rgb(213,133,16)" rx="2" ry="2" />
<text  x="194.48" y="159.5" >org.bo..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.square:-1 (29,382 samples, 0.04%)</title><rect x="1172.4" y="197" width="0.5" height="15.0" fill="rgb(251,95,4)" rx="2" ry="2" />
<text  x="1175.44" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.implIsValid:-1 (370,880 samples, 0.45%)</title><rect x="29.0" y="181" width="5.3" height="15.0" fill="rgb(205,105,5)" rx="2" ry="2" />
<text  x="31.99" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve$1.lookupVar:-1 (7,824,370 samples, 9.45%)</title><rect x="34.3" y="181" width="111.4" height="15.0" fill="rgb(221,121,7)" rx="2" ry="2" />
<text  x="37.27" y="191.5" >org.bouncycas..</text>
</g>
<g >
<title>org.sample.BenchmarkVerifying.sm2p256v1_128B:47 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(222,151,43)" rx="2" ry="2" />
<text  x="13.01" y="351.5" >org.sample.BenchmarkVerifying.sm2p256v1_128B:47</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Object.getEncoded:-1 (285,446 samples, 0.34%)</title><rect x="1185.8" y="213" width="4.1" height="15.0" fill="rgb(236,77,48)" rx="2" ry="2" />
<text  x="1188.83" y="223.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(218,89,41)" rx="2" ry="2" />
<text  x="13.01" y="463.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Primitive.encodeTo:-1 (282,822 samples, 0.34%)</title><rect x="1185.9" y="197" width="4.0" height="15.0" fill="rgb(248,49,49)" rx="2" ry="2" />
<text  x="1188.87" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (254,128 samples, 0.31%)</title><rect x="30.1" y="85" width="3.6" height="15.0" fill="rgb(233,198,35)" rx="2" ry="2" />
<text  x="33.12" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2352 (26,100 samples, 0.03%)</title><rect x="27.8" y="197" width="0.3" height="15.0" fill="rgb(219,6,13)" rx="2" ry="2" />
<text  x="30.76" y="207.5" ></text>
</g>
<g >
<title>java.math.BigInteger.add:1309 (24,210 samples, 0.03%)</title><rect x="27.4" y="229" width="0.4" height="15.0" fill="rgb(249,65,32)" rx="2" ry="2" />
<text  x="30.41" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (5,933,974 samples, 7.16%)</title><rect x="61.2" y="165" width="84.5" height="15.0" fill="rgb(254,55,17)" rx="2" ry="2" />
<text  x="64.20" y="175.5" >org.bounc..</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:336 (251,606 samples, 0.30%)</title><rect x="1182.0" y="197" width="3.6" height="15.0" fill="rgb(233,8,45)" rx="2" ry="2" />
<text  x="1184.97" y="207.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3793 (252,272 samples, 0.30%)</title><rect x="1152.5" y="133" width="3.6" height="15.0" fill="rgb(226,116,50)" rx="2" ry="2" />
<text  x="1155.49" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.DLFactory.createSequence:-1 (16,708 samples, 0.02%)</title><rect x="1181.7" y="181" width="0.3" height="15.0" fill="rgb(220,136,18)" rx="2" ry="2" />
<text  x="1184.72" y="191.5" ></text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (251,606 samples, 0.30%)</title><rect x="1182.0" y="165" width="3.6" height="15.0" fill="rgb(243,13,16)" rx="2" ry="2" />
<text  x="1184.97" y="175.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_128B_jmhTest.sm2p256v1_128B_thrpt_jmhStub:119 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(210,68,10)" rx="2" ry="2" />
<text  x="13.01" y="367.5" >org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_128B_jmhTest.sm2p256v1_128B_thrpt_jmhStub:119</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (1,892,571 samples, 2.28%)</title><rect x="1125.5" y="149" width="27.0" height="15.0" fill="rgb(228,194,3)" rx="2" ry="2" />
<text  x="1128.53" y="159.5" >o..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (6,962,882 samples, 8.41%)</title><rect x="252.9" y="165" width="99.2" height="15.0" fill="rgb(251,47,15)" rx="2" ry="2" />
<text  x="255.88" y="175.5" >org.bouncyca..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (7,790 samples, 0.01%)</title><rect x="1168.8" y="181" width="0.2" height="15.0" fill="rgb(217,114,5)" rx="2" ry="2" />
<text  x="1171.85" y="191.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(218,130,41)" rx="2" ry="2" />
<text  x="13.01" y="479.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>org.sample.SM2Util.verify:47 (312,834 samples, 0.38%)</title><rect x="10.0" y="325" width="4.5" height="15.0" fill="rgb(222,71,34)" rx="2" ry="2" />
<text  x="13.01" y="335.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.invert:-1 (26,322 samples, 0.03%)</title><rect x="1176.5" y="213" width="0.4" height="15.0" fill="rgb(241,84,44)" rx="2" ry="2" />
<text  x="1179.48" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1 (80,992,913 samples, 97.78%)</title><rect x="27.4" y="245" width="1153.8" height="15.0" fill="rgb(217,91,16)" rx="2" ry="2" />
<text  x="30.41" y="255.5" >org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readObject:-1 (51,812 samples, 0.06%)</title><rect x="1181.2" y="213" width="0.8" height="15.0" fill="rgb(225,100,24)" rx="2" ry="2" />
<text  x="1184.22" y="223.5" ></text>
</g>
<g >
<title>java.math.BigInteger.mod:2699 (60,590 samples, 0.07%)</title><rect x="27.8" y="229" width="0.8" height="15.0" fill="rgb(216,2,5)" rx="2" ry="2" />
<text  x="30.75" y="239.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineInitVerify:1325 (908,488 samples, 1.10%)</title><rect x="14.5" y="293" width="12.9" height="15.0" fill="rgb(206,204,53)" rx="2" ry="2" />
<text  x="17.46" y="303.5" ></text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (16,260 samples, 0.02%)</title><rect x="22.8" y="133" width="0.3" height="15.0" fill="rgb(241,224,53)" rx="2" ry="2" />
<text  x="25.82" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.&lt;init&gt;:-1 (243,662 samples, 0.29%)</title><rect x="1165.4" y="85" width="3.4" height="15.0" fill="rgb(254,202,42)" rx="2" ry="2" />
<text  x="1168.37" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (18,770,399 samples, 22.66%)</title><rect x="443.1" y="149" width="267.4" height="15.0" fill="rgb(237,32,4)" rx="2" ry="2" />
<text  x="446.09" y="159.5" >org.bouncycastle.math.ec.custom.gm...</text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implCheckResult:-1 (370,880 samples, 0.45%)</title><rect x="29.0" y="213" width="5.3" height="15.0" fill="rgb(209,25,18)" rx="2" ry="2" />
<text  x="31.99" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.isValidPartial:-1 (370,880 samples, 0.45%)</title><rect x="29.0" y="197" width="5.3" height="15.0" fill="rgb(254,211,53)" rx="2" ry="2" />
<text  x="31.99" y="207.5" ></text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:515 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(207,40,47)" rx="2" ry="2" />
<text  x="13.01" y="511.5" >java.util.concurrent.Executors$RunnableAdapter.call:515</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.toBigInteger:-1 (570,616 samples, 0.69%)</title><rect x="14.9" y="181" width="8.2" height="15.0" fill="rgb(227,161,32)" rx="2" ry="2" />
<text  x="17.93" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat.fromBigInteger:-1 (880,468 samples, 1.06%)</title><rect x="1152.5" y="181" width="12.5" height="15.0" fill="rgb(236,115,19)" rx="2" ry="2" />
<text  x="1155.49" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (1,473,166 samples, 1.78%)</title><rect x="878.9" y="149" width="20.9" height="15.0" fill="rgb(214,8,49)" rx="2" ry="2" />
<text  x="881.86" y="159.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(227,140,10)" rx="2" ry="2" />
<text  x="13.01" y="495.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve$1.createPoint:-1 (1,890,396 samples, 2.28%)</title><rect x="34.3" y="165" width="26.9" height="15.0" fill="rgb(249,108,2)" rx="2" ry="2" />
<text  x="37.27" y="175.5" >o..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (243,771 samples, 0.29%)</title><rect x="1169.0" y="181" width="3.4" height="15.0" fill="rgb(239,12,27)" rx="2" ry="2" />
<text  x="1171.96" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.getZ:-1 (907,960 samples, 1.10%)</title><rect x="14.5" y="245" width="12.9" height="15.0" fill="rgb(217,218,47)" rx="2" ry="2" />
<text  x="17.46" y="255.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (271,564 samples, 0.33%)</title><rect x="23.5" y="181" width="3.9" height="15.0" fill="rgb(250,100,14)" rx="2" ry="2" />
<text  x="26.53" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1EncodableVector.&lt;init&gt;:-1 (18,342 samples, 0.02%)</title><rect x="1185.6" y="213" width="0.2" height="15.0" fill="rgb(242,122,36)" rx="2" ry="2" />
<text  x="1188.57" y="223.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2355 (33,966 samples, 0.04%)</title><rect x="28.1" y="197" width="0.5" height="15.0" fill="rgb(249,179,15)" rx="2" ry="2" />
<text  x="31.13" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Sequence.&lt;init&gt;:-1 (16,708 samples, 0.02%)</title><rect x="1181.7" y="149" width="0.3" height="15.0" fill="rgb(252,48,1)" rx="2" ry="2" />
<text  x="1184.72" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.square:-1 (291,194 samples, 0.35%)</title><rect x="30.1" y="117" width="4.2" height="15.0" fill="rgb(219,46,49)" rx="2" ry="2" />
<text  x="33.12" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (5,570,391 samples, 6.72%)</title><rect x="710.5" y="149" width="79.3" height="15.0" fill="rgb(210,95,4)" rx="2" ry="2" />
<text  x="713.49" y="159.5" >org.bounc..</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readVector:-1 (33,008 samples, 0.04%)</title><rect x="1181.2" y="165" width="0.5" height="15.0" fill="rgb(229,86,38)" rx="2" ry="2" />
<text  x="1184.25" y="175.5" ></text>
</g>
<g >
<title>java.security.Provider$Service.newInstance:1915 (312,776 samples, 0.38%)</title><rect x="10.0" y="261" width="4.5" height="15.0" fill="rgb(220,103,4)" rx="2" ry="2" />
<text  x="13.01" y="271.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1163 (31,868 samples, 0.04%)</title><rect x="28.1" y="181" width="0.5" height="15.0" fill="rgb(244,153,13)" rx="2" ry="2" />
<text  x="31.13" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Primitive.fromByteArray:-1 (51,908 samples, 0.06%)</title><rect x="1181.2" y="229" width="0.8" height="15.0" fill="rgb(216,16,40)" rx="2" ry="2" />
<text  x="1184.22" y="239.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:4102 (29,756 samples, 0.04%)</title><rect x="28.1" y="133" width="0.5" height="15.0" fill="rgb(222,6,33)" rx="2" ry="2" />
<text  x="31.14" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.calculateE:-1 (25,676 samples, 0.03%)</title><rect x="28.6" y="229" width="0.4" height="15.0" fill="rgb(212,229,52)" rx="2" ry="2" />
<text  x="31.61" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (76,544 samples, 0.09%)</title><rect x="29.0" y="117" width="1.1" height="15.0" fill="rgb(226,127,44)" rx="2" ry="2" />
<text  x="32.03" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.normalize:-1 (547,577 samples, 0.66%)</title><rect x="1165.1" y="213" width="7.8" height="15.0" fill="rgb(206,194,50)" rx="2" ry="2" />
<text  x="1168.06" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.DEROutputStream.writePrimitive:-1 (281,366 samples, 0.34%)</title><rect x="1185.9" y="181" width="4.0" height="15.0" fill="rgb(235,144,51)" rx="2" ry="2" />
<text  x="1188.89" y="191.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:628 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(223,167,42)" rx="2" ry="2" />
<text  x="13.01" y="559.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:628</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (25,152 samples, 0.03%)</title><rect x="28.6" y="213" width="0.4" height="15.0" fill="rgb(244,157,40)" rx="2" ry="2" />
<text  x="31.62" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.DLSequence.&lt;init&gt;:-1 (16,708 samples, 0.02%)</title><rect x="1181.7" y="165" width="0.3" height="15.0" fill="rgb(209,179,48)" rx="2" ry="2" />
<text  x="1184.72" y="175.5" ></text>
</g>
<g >
<title>java.security.Signature.getInstance:450 (312,834 samples, 0.38%)</title><rect x="10.0" y="309" width="4.5" height="15.0" fill="rgb(242,178,15)" rx="2" ry="2" />
<text  x="13.01" y="319.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (5,570,391 samples, 6.72%)</title><rect x="710.5" y="133" width="79.3" height="15.0" fill="rgb(219,216,25)" rx="2" ry="2" />
<text  x="713.49" y="143.5" >org.bounc..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickWNaf:-1 (79,376,468 samples, 95.83%)</title><rect x="34.3" y="213" width="1130.8" height="15.0" fill="rgb(252,60,1)" rx="2" ry="2" />
<text  x="37.27" y="223.5" >org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickWNaf:-1</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (2,000,557 samples, 2.42%)</title><rect x="391.6" y="165" width="28.5" height="15.0" fill="rgb(209,150,1)" rx="2" ry="2" />
<text  x="394.60" y="175.5" >or..</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1 (81,607,133 samples, 98.52%)</title><rect x="27.4" y="261" width="1162.6" height="15.0" fill="rgb(237,20,3)" rx="2" ry="2" />
<text  x="30.41" y="271.5" >org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1</text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance:45 (273,502 samples, 0.33%)</title><rect x="10.6" y="213" width="3.9" height="15.0" fill="rgb(236,26,43)" rx="2" ry="2" />
<text  x="13.57" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (302,750 samples, 0.37%)</title><rect x="1176.9" y="213" width="4.3" height="15.0" fill="rgb(245,118,30)" rx="2" ry="2" />
<text  x="1179.85" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (18,770,399 samples, 22.66%)</title><rect x="443.1" y="133" width="267.4" height="15.0" fill="rgb(244,184,7)" rx="2" ry="2" />
<text  x="446.09" y="143.5" >org.bouncycastle.math.raw.Nat256.cr..</text>
</g>
<g >
<title>org.bouncycastle.asn1.DERSequence.encode:-1 (281,366 samples, 0.34%)</title><rect x="1185.9" y="165" width="4.0" height="15.0" fill="rgb(233,70,5)" rx="2" ry="2" />
<text  x="1188.89" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.normalize:-1 (1,130,775 samples, 1.37%)</title><rect x="1165.1" y="229" width="16.1" height="15.0" fill="rgb(241,139,8)" rx="2" ry="2" />
<text  x="1168.06" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve.randomFieldElementMult:-1 (254,126 samples, 0.31%)</title><rect x="1172.9" y="213" width="3.6" height="15.0" fill="rgb(223,18,33)" rx="2" ry="2" />
<text  x="1175.86" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (73,400 samples, 0.09%)</title><rect x="29.0" y="85" width="1.1" height="15.0" fill="rgb(216,81,3)" rx="2" ry="2" />
<text  x="32.05" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (25,152 samples, 0.03%)</title><rect x="28.6" y="181" width="0.4" height="15.0" fill="rgb(213,8,10)" rx="2" ry="2" />
<text  x="31.62" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECCurve.precompute:-1 (370,880 samples, 0.45%)</title><rect x="29.0" y="165" width="5.3" height="15.0" fill="rgb(231,208,43)" rx="2" ry="2" />
<text  x="31.99" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint$AbstractFp.&lt;init&gt;:-1 (266,110 samples, 0.32%)</title><rect x="1165.1" y="149" width="3.7" height="15.0" fill="rgb(239,152,0)" rx="2" ry="2" />
<text  x="1168.06" y="159.5" ></text>
</g>
<g >
<title>java.security.Signature.initVerify:506 (908,488 samples, 1.10%)</title><rect x="14.5" y="309" width="12.9" height="15.0" fill="rgb(214,132,12)" rx="2" ry="2" />
<text  x="17.46" y="319.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1OutputStream.writeEncodingDL:-1 (281,366 samples, 0.34%)</title><rect x="1185.9" y="133" width="4.0" height="15.0" fill="rgb(205,177,31)" rx="2" ry="2" />
<text  x="1188.89" y="143.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.grow:120 (281,366 samples, 0.34%)</title><rect x="1185.9" y="69" width="4.0" height="15.0" fill="rgb(233,181,28)" rx="2" ry="2" />
<text  x="1188.89" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (243,662 samples, 0.29%)</title><rect x="1165.4" y="37" width="3.4" height="15.0" fill="rgb(232,103,53)" rx="2" ry="2" />
<text  x="1168.37" y="47.5" ></text>
</g>
<g >
<title>java.security.Signature.verify:788 (81,607,133 samples, 98.52%)</title><rect x="27.4" y="309" width="1162.6" height="15.0" fill="rgb(205,179,9)" rx="2" ry="2" />
<text  x="30.41" y="319.5" >java.security.Signature.verify:788</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (29,756 samples, 0.04%)</title><rect x="28.1" y="149" width="0.5" height="15.0" fill="rgb(205,36,0)" rx="2" ry="2" />
<text  x="31.14" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twicePlus:-1 (51,410,485 samples, 62.07%)</title><rect x="420.1" y="181" width="732.4" height="15.0" fill="rgb(240,42,14)" rx="2" ry="2" />
<text  x="423.10" y="191.5" >org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twicePlus:-1</text>
</g>
<g >
<title>java.lang.reflect.ReflectAccess.copyConstructor:155 (32,488 samples, 0.04%)</title><rect x="10.0" y="197" width="0.5" height="15.0" fill="rgb(246,36,18)" rx="2" ry="2" />
<text  x="13.01" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (244,295 samples, 0.29%)</title><rect x="1169.0" y="197" width="3.4" height="15.0" fill="rgb(210,13,52)" rx="2" ry="2" />
<text  x="1171.96" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.decode:-1 (614,220 samples, 0.74%)</title><rect x="1181.2" y="245" width="8.8" height="15.0" fill="rgb(248,167,17)" rx="2" ry="2" />
<text  x="1184.22" y="255.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (4,310,067 samples, 5.20%)</title><rect x="191.5" y="165" width="61.4" height="15.0" fill="rgb(254,53,19)" rx="2" ry="2" />
<text  x="194.48" y="175.5" >org.bo..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.fromBigInteger:-1 (243,662 samples, 0.29%)</title><rect x="1165.4" y="53" width="3.4" height="15.0" fill="rgb(216,158,40)" rx="2" ry="2" />
<text  x="1168.37" y="63.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(251,19,11)" rx="2" ry="2" />
<text  x="13.01" y="415.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readVector:-1 (35,100 samples, 0.04%)</title><rect x="1181.2" y="181" width="0.5" height="15.0" fill="rgb(209,44,8)" rx="2" ry="2" />
<text  x="1184.22" y="191.5" ></text>
</g>
<g >
<title>all (82,831,218 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(251,55,53)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.GeneratedConstructorAccessor1.newInstance:-1 (273,502 samples, 0.33%)</title><rect x="10.6" y="197" width="3.9" height="15.0" fill="rgb(227,150,33)" rx="2" ry="2" />
<text  x="13.57" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.getInitialZCoords:-1 (266,110 samples, 0.32%)</title><rect x="1165.1" y="117" width="3.7" height="15.0" fill="rgb(208,131,42)" rx="2" ry="2" />
<text  x="1168.06" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (28,298 samples, 0.03%)</title><rect x="1172.5" y="181" width="0.4" height="15.0" fill="rgb(216,201,51)" rx="2" ry="2" />
<text  x="1175.45" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.digests.SHA256Digest.&lt;init&gt;:-1 (271,930 samples, 0.33%)</title><rect x="10.6" y="165" width="3.9" height="15.0" fill="rgb(234,196,28)" rx="2" ry="2" />
<text  x="13.59" y="175.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3434 (600,298 samples, 0.72%)</title><rect x="1156.1" y="149" width="8.5" height="15.0" fill="rgb(217,145,8)" rx="2" ry="2" />
<text  x="1159.08" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.encode:-1 (309,556 samples, 0.37%)</title><rect x="1185.6" y="229" width="4.4" height="15.0" fill="rgb(243,97,43)" rx="2" ry="2" />
<text  x="1188.56" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve.createRawPoint:-1 (266,110 samples, 0.32%)</title><rect x="1165.1" y="181" width="3.7" height="15.0" fill="rgb(240,92,30)" rx="2" ry="2" />
<text  x="1168.06" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat.create:-1 (27,898 samples, 0.03%)</title><rect x="1164.6" y="165" width="0.4" height="15.0" fill="rgb(206,164,49)" rx="2" ry="2" />
<text  x="1167.64" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi$sha256WithSM2.&lt;init&gt;:-1 (273,502 samples, 0.33%)</title><rect x="10.6" y="181" width="3.9" height="15.0" fill="rgb(252,100,34)" rx="2" ry="2" />
<text  x="13.57" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.inv:-1 (26,320 samples, 0.03%)</title><rect x="1176.5" y="197" width="0.4" height="15.0" fill="rgb(254,180,15)" rx="2" ry="2" />
<text  x="1179.48" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.toBigInteger:-1 (570,616 samples, 0.69%)</title><rect x="14.9" y="197" width="8.2" height="15.0" fill="rgb(218,50,15)" rx="2" ry="2" />
<text  x="17.93" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (6,195,749 samples, 7.48%)</title><rect x="1037.3" y="133" width="88.2" height="15.0" fill="rgb(229,185,7)" rx="2" ry="2" />
<text  x="1040.26" y="143.5" >org.bouncy..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve.fromBigInteger:-1 (266,110 samples, 0.32%)</title><rect x="1165.1" y="101" width="3.7" height="15.0" fill="rgb(249,32,16)" rx="2" ry="2" />
<text  x="1168.06" y="111.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Mod.modOddInverse:-1 (26,320 samples, 0.03%)</title><rect x="1176.5" y="165" width="0.4" height="15.0" fill="rgb(253,181,36)" rx="2" ry="2" />
<text  x="1179.48" y="175.5" ></text>
</g>
<g >
<title>java.lang.reflect.Constructor.newInstance:490 (273,502 samples, 0.33%)</title><rect x="10.6" y="229" width="3.9" height="15.0" fill="rgb(249,213,42)" rx="2" ry="2" />
<text  x="13.57" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECFieldElement.getEncoded:-1 (875,594 samples, 1.06%)</title><rect x="14.9" y="213" width="12.5" height="15.0" fill="rgb(241,15,14)" rx="2" ry="2" />
<text  x="17.93" y="223.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (281,366 samples, 0.34%)</title><rect x="1185.9" y="53" width="4.0" height="15.0" fill="rgb(208,62,42)" rx="2" ry="2" />
<text  x="1188.89" y="63.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1 (19,259,573 samples, 23.25%)</title><rect x="145.7" y="181" width="274.4" height="15.0" fill="rgb(252,51,27)" rx="2" ry="2" />
<text  x="148.74" y="191.5" >org.bouncycastle.math.ec.custom.gm.S..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (247,836 samples, 0.30%)</title><rect x="1172.9" y="197" width="3.6" height="15.0" fill="rgb(209,69,26)" rx="2" ry="2" />
<text  x="1175.95" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1OutputStream.write:-1 (281,366 samples, 0.34%)</title><rect x="1185.9" y="117" width="4.0" height="15.0" fill="rgb(230,104,39)" rx="2" ry="2" />
<text  x="1188.89" y="127.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1128 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(249,38,10)" rx="2" ry="2" />
<text  x="13.01" y="543.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1128</text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.ensureCapacity:95 (281,366 samples, 0.34%)</title><rect x="1185.9" y="85" width="4.0" height="15.0" fill="rgb(241,96,3)" rx="2" ry="2" />
<text  x="1188.89" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainder:2343 (60,590 samples, 0.07%)</title><rect x="27.8" y="213" width="0.8" height="15.0" fill="rgb(212,5,49)" rx="2" ry="2" />
<text  x="30.75" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint$1.precompute:-1 (370,352 samples, 0.45%)</title><rect x="29.0" y="149" width="5.3" height="15.0" fill="rgb(212,116,17)" rx="2" ry="2" />
<text  x="32.00" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint$AbstractFp.satisfiesCurveEquation:-1 (369,830 samples, 0.45%)</title><rect x="29.0" y="133" width="5.3" height="15.0" fill="rgb(218,112,19)" rx="2" ry="2" />
<text  x="32.00" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.util.BigIntegers.asUnsignedByteArray:-1 (304,978 samples, 0.37%)</title><rect x="23.1" y="197" width="4.3" height="15.0" fill="rgb(240,216,10)" rx="2" ry="2" />
<text  x="26.05" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.&lt;init&gt;:-1 (266,110 samples, 0.32%)</title><rect x="1165.1" y="165" width="3.7" height="15.0" fill="rgb(248,32,54)" rx="2" ry="2" />
<text  x="1168.06" y="175.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineVerify:1414 (81,607,133 samples, 98.52%)</title><rect x="27.4" y="293" width="1162.6" height="15.0" fill="rgb(243,215,21)" rx="2" ry="2" />
<text  x="30.41" y="303.5" >java.security.Signature$Delegate.engineVerify:1414</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1EncodableVector.&lt;init&gt;:-1 (31,438 samples, 0.04%)</title><rect x="1181.2" y="149" width="0.5" height="15.0" fill="rgb(244,102,7)" rx="2" ry="2" />
<text  x="1184.25" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.&lt;init&gt;:-1 (266,110 samples, 0.32%)</title><rect x="1165.1" y="133" width="3.7" height="15.0" fill="rgb(215,218,40)" rx="2" ry="2" />
<text  x="1168.06" y="143.5" ></text>
</g>
<g >
<title>java.lang.Class.getConstructor:2150 (32,488 samples, 0.04%)</title><rect x="10.0" y="229" width="0.5" height="15.0" fill="rgb(222,217,54)" rx="2" ry="2" />
<text  x="13.01" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineInitVerify:-1 (908,488 samples, 1.10%)</title><rect x="14.5" y="277" width="12.9" height="15.0" fill="rgb(205,16,13)" rx="2" ry="2" />
<text  x="17.46" y="287.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(208,154,1)" rx="2" ry="2" />
<text  x="13.01" y="399.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1</text>
</g>
<g >
<title>org.sample.SM2Util.verify:51 (81,607,133 samples, 98.52%)</title><rect x="27.4" y="325" width="1162.6" height="15.0" fill="rgb(208,111,22)" rx="2" ry="2" />
<text  x="30.41" y="335.5" >org.sample.SM2Util.verify:51</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (6,248,748 samples, 7.54%)</title><rect x="789.8" y="149" width="89.1" height="15.0" fill="rgb(231,46,29)" rx="2" ry="2" />
<text  x="792.84" y="159.5" >org.bouncy..</text>
</g>
<g >
<title>org.sample.SM2Util.verify:49 (908,488 samples, 1.10%)</title><rect x="14.5" y="325" width="12.9" height="15.0" fill="rgb(234,222,3)" rx="2" ry="2" />
<text  x="17.46" y="335.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (8,775,290 samples, 10.59%)</title><rect x="912.3" y="149" width="125.0" height="15.0" fill="rgb(238,54,38)" rx="2" ry="2" />
<text  x="915.25" y="159.5" >org.bouncycastl..</text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.write:156 (281,366 samples, 0.34%)</title><rect x="1185.9" y="101" width="4.0" height="15.0" fill="rgb(245,13,49)" rx="2" ry="2" />
<text  x="1188.89" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (16,260 samples, 0.02%)</title><rect x="22.8" y="149" width="0.3" height="15.0" fill="rgb(244,174,35)" rx="2" ry="2" />
<text  x="25.82" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (16,260 samples, 0.02%)</title><rect x="22.8" y="165" width="0.3" height="15.0" fill="rgb(223,91,20)" rx="2" ry="2" />
<text  x="25.82" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (254,128 samples, 0.31%)</title><rect x="30.1" y="101" width="3.6" height="15.0" fill="rgb(234,173,30)" rx="2" ry="2" />
<text  x="33.12" y="111.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:218 (312,834 samples, 0.38%)</title><rect x="10.0" y="293" width="4.5" height="15.0" fill="rgb(224,79,48)" rx="2" ry="2" />
<text  x="13.01" y="303.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.sumOfTwoMultiplies:-1 (79,747,348 samples, 96.28%)</title><rect x="29.0" y="229" width="1136.1" height="15.0" fill="rgb(223,51,5)" rx="2" ry="2" />
<text  x="31.99" y="239.5" >org.bouncycastle.math.ec.ECAlgorithms.sumOfTwoMultiplies:-1</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (25,152 samples, 0.03%)</title><rect x="28.6" y="197" width="0.4" height="15.0" fill="rgb(244,30,25)" rx="2" ry="2" />
<text  x="31.62" y="207.5" ></text>
</g>
<g >
<title>java.lang.reflect.Constructor.copy:150 (32,488 samples, 0.04%)</title><rect x="10.0" y="181" width="0.5" height="15.0" fill="rgb(217,182,18)" rx="2" ry="2" />
<text  x="13.01" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.buildObject:-1 (51,812 samples, 0.06%)</title><rect x="1181.2" y="197" width="0.8" height="15.0" fill="rgb(234,205,23)" rx="2" ry="2" />
<text  x="1184.22" y="207.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.ReflectionFactory.copyConstructor:388 (32,488 samples, 0.04%)</title><rect x="10.0" y="213" width="0.5" height="15.0" fill="rgb(215,111,17)" rx="2" ry="2" />
<text  x="13.01" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twice:-1 (17,734,617 samples, 21.41%)</title><rect x="899.8" y="165" width="252.7" height="15.0" fill="rgb(217,98,45)" rx="2" ry="2" />
<text  x="902.85" y="175.5" >org.bouncycastle.math.ec.custom.g..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (300,050 samples, 0.36%)</title><rect x="1176.9" y="181" width="4.2" height="15.0" fill="rgb(219,46,3)" rx="2" ry="2" />
<text  x="1179.85" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.addFieldElement:-1 (875,594 samples, 1.06%)</title><rect x="14.9" y="229" width="12.5" height="15.0" fill="rgb(216,26,45)" rx="2" ry="2" />
<text  x="17.93" y="239.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:316 (251,606 samples, 0.30%)</title><rect x="1182.0" y="181" width="3.6" height="15.0" fill="rgb(234,217,32)" rx="2" ry="2" />
<text  x="1184.97" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (2,774,920 samples, 3.35%)</title><rect x="352.1" y="165" width="39.5" height="15.0" fill="rgb(220,75,21)" rx="2" ry="2" />
<text  x="355.07" y="175.5" >org..</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (82,828,455 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(224,116,15)" rx="2" ry="2" />
<text  x="13.01" y="527.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Integer.encode:-1 (281,366 samples, 0.34%)</title><rect x="1185.9" y="149" width="4.0" height="15.0" fill="rgb(222,171,10)" rx="2" ry="2" />
<text  x="1188.89" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRight:3375 (852,570 samples, 1.03%)</title><rect x="1152.5" y="165" width="12.1" height="15.0" fill="rgb(242,226,23)" rx="2" ry="2" />
<text  x="1155.49" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (300,050 samples, 0.36%)</title><rect x="1176.9" y="197" width="4.2" height="15.0" fill="rgb(243,75,5)" rx="2" ry="2" />
<text  x="1179.85" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (6,962,882 samples, 8.41%)</title><rect x="252.9" y="149" width="99.2" height="15.0" fill="rgb(233,100,8)" rx="2" ry="2" />
<text  x="255.88" y="159.5" >org.bouncyca..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (6,195,749 samples, 7.48%)</title><rect x="1037.3" y="149" width="88.2" height="15.0" fill="rgb(236,87,29)" rx="2" ry="2" />
<text  x="1040.26" y="159.5" >org.bouncy..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Mod.checkedModOddInverse:-1 (26,320 samples, 0.03%)</title><rect x="1176.5" y="181" width="0.4" height="15.0" fill="rgb(212,129,28)" rx="2" ry="2" />
<text  x="1179.48" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1EncodableVector.&lt;init&gt;:-1 (31,438 samples, 0.04%)</title><rect x="1181.2" y="133" width="0.5" height="15.0" fill="rgb(226,157,39)" rx="2" ry="2" />
<text  x="1184.25" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.init:-1 (908,488 samples, 1.10%)</title><rect x="14.5" y="261" width="12.9" height="15.0" fill="rgb(208,225,3)" rx="2" ry="2" />
<text  x="17.46" y="271.5" ></text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:153 (32,488 samples, 0.04%)</title><rect x="10.0" y="245" width="0.5" height="15.0" fill="rgb(214,163,29)" rx="2" ry="2" />
<text  x="13.01" y="255.5" ></text>
</g>
</g>
</svg>
