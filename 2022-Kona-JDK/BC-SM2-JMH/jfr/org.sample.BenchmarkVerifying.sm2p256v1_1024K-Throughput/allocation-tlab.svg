<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >allocation-tlab sm2p256v1_1024K-Throughput</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (258,429 samples, 18.13%)</title><rect x="424.9" y="133" width="213.9" height="15.0" fill="rgb(241,40,23)" rx="2" ry="2" />
<text  x="427.89" y="143.5" >org.bouncycastle.math.ec.cus..</text>
</g>
<g >
<title>org.sample.SM2Util.verify:49 (13,618 samples, 0.96%)</title><rect x="14.8" y="309" width="11.2" height="15.0" fill="rgb(253,32,41)" rx="2" ry="2" />
<text  x="17.77" y="319.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implCheckResult:-1 (14,504 samples, 1.02%)</title><rect x="28.2" y="197" width="12.0" height="15.0" fill="rgb(205,87,23)" rx="2" ry="2" />
<text  x="31.23" y="207.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder$$Lambda$87.995536478.run:-1 (1,248 samples, 0.09%)</title><rect x="1188.4" y="533" width="1.0" height="15.0" fill="rgb(211,171,15)" rx="2" ry="2" />
<text  x="1191.39" y="543.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (2,622 samples, 0.18%)</title><rect x="30.3" y="85" width="2.1" height="15.0" fill="rgb(249,159,49)" rx="2" ry="2" />
<text  x="33.27" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECCurve.precompute:-1 (14,504 samples, 1.02%)</title><rect x="28.2" y="149" width="12.0" height="15.0" fill="rgb(230,186,10)" rx="2" ry="2" />
<text  x="31.23" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3434 (4,736 samples, 0.33%)</title><rect x="1159.3" y="133" width="3.9" height="15.0" fill="rgb(249,226,23)" rx="2" ry="2" />
<text  x="1162.32" y="143.5" ></text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:154 (3,676 samples, 0.26%)</title><rect x="11.7" y="229" width="3.1" height="15.0" fill="rgb(253,12,43)" rx="2" ry="2" />
<text  x="14.73" y="239.5" ></text>
</g>
<g >
<title>org.sample.BenchmarkVerifying.sm2p256v1_1024K:62 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="325" width="1178.0" height="15.0" fill="rgb(233,103,38)" rx="2" ry="2" />
<text  x="13.43" y="335.5" >org.sample.BenchmarkVerifying.sm2p256v1_1024K:62</text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024K_jmhTest.sm2p256v1_1024K_Throughput:83 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="357" width="1178.0" height="15.0" fill="rgb(244,102,15)" rx="2" ry="2" />
<text  x="13.43" y="367.5" >org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024K_jmhTest.sm2p256v1_1024K_Throughput:83</text>
</g>
<g >
<title>java.lang.reflect.Constructor.copy:150 (1,566 samples, 0.11%)</title><rect x="10.4" y="165" width="1.3" height="15.0" fill="rgb(230,155,49)" rx="2" ry="2" />
<text  x="13.43" y="175.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (1,566 samples, 0.11%)</title><rect x="1187.1" y="165" width="1.3" height="15.0" fill="rgb(212,162,53)" rx="2" ry="2" />
<text  x="1190.10" y="175.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:230 (596 samples, 0.04%)</title><rect x="1188.9" y="469" width="0.5" height="15.0" fill="rgb(213,218,29)" rx="2" ry="2" />
<text  x="1191.93" y="479.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (56,452 samples, 3.96%)</title><rect x="276.9" y="133" width="46.7" height="15.0" fill="rgb(217,206,29)" rx="2" ry="2" />
<text  x="279.90" y="143.5" >org...</text>
</g>
<g >
<title>java.math.BigInteger.remainder:2343 (1,590 samples, 0.11%)</title><rect x="26.0" y="197" width="1.4" height="15.0" fill="rgb(232,153,15)" rx="2" ry="2" />
<text  x="29.04" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineVerify:-1 (1,404,309 samples, 98.50%)</title><rect x="26.0" y="261" width="1162.4" height="15.0" fill="rgb(229,144,4)" rx="2" ry="2" />
<text  x="29.04" y="271.5" >org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineVerify:-1</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:336 (1,056 samples, 0.07%)</title><rect x="1183.6" y="181" width="0.9" height="15.0" fill="rgb(238,51,33)" rx="2" ry="2" />
<text  x="1186.62" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.encode:-1 (4,712 samples, 0.33%)</title><rect x="1184.5" y="213" width="3.9" height="15.0" fill="rgb(208,24,10)" rx="2" ry="2" />
<text  x="1187.49" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (1,566 samples, 0.11%)</title><rect x="1166.3" y="181" width="1.3" height="15.0" fill="rgb(208,223,16)" rx="2" ry="2" />
<text  x="1169.29" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (47,642 samples, 3.34%)</title><rect x="1119.5" y="133" width="39.4" height="15.0" fill="rgb(233,58,29)" rx="2" ry="2" />
<text  x="1122.46" y="143.5" >org..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve.createRawPoint:-1 (31,064 samples, 2.18%)</title><rect x="68.8" y="133" width="25.7" height="15.0" fill="rgb(225,196,5)" rx="2" ry="2" />
<text  x="71.77" y="143.5" >o..</text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle$Holder.invokeStatic:-1 (522 samples, 0.04%)</title><rect x="1189.0" y="421" width="0.4" height="15.0" fill="rgb(228,220,23)" rx="2" ry="2" />
<text  x="1191.99" y="431.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve.randomFieldElementMult:-1 (4,184 samples, 0.29%)</title><rect x="1167.6" y="197" width="3.5" height="15.0" fill="rgb(249,86,16)" rx="2" ry="2" />
<text  x="1170.59" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.randomMult:-1 (1,572 samples, 0.11%)</title><rect x="1167.6" y="181" width="1.3" height="15.0" fill="rgb(250,132,33)" rx="2" ry="2" />
<text  x="1170.59" y="191.5" ></text>
</g>
<g >
<title>java.lang.invoke.Invokers$Holder.linkToTargetMethod:-1 (522 samples, 0.04%)</title><rect x="1189.0" y="437" width="0.4" height="15.0" fill="rgb(250,88,36)" rx="2" ry="2" />
<text  x="1191.99" y="447.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:316 (1,056 samples, 0.07%)</title><rect x="1183.6" y="165" width="0.9" height="15.0" fill="rgb(207,174,44)" rx="2" ry="2" />
<text  x="1186.62" y="175.5" ></text>
</g>
<g >
<title>java.security.SecureRandom.nextBytes:751 (1,048 samples, 0.07%)</title><rect x="1168.0" y="149" width="0.9" height="15.0" fill="rgb(223,51,0)" rx="2" ry="2" />
<text  x="1171.03" y="159.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="437" width="1178.0" height="15.0" fill="rgb(243,127,54)" rx="2" ry="2" />
<text  x="13.43" y="447.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1EncodableVector.&lt;init&gt;:-1 (2,088 samples, 0.15%)</title><rect x="1179.3" y="117" width="1.7" height="15.0" fill="rgb(228,115,29)" rx="2" ry="2" />
<text  x="1182.29" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:186 (522 samples, 0.04%)</title><rect x="26.9" y="165" width="0.5" height="15.0" fill="rgb(236,95,30)" rx="2" ry="2" />
<text  x="29.93" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat.create:-1 (2,104 samples, 0.15%)</title><rect x="1163.2" y="149" width="1.8" height="15.0" fill="rgb(222,54,42)" rx="2" ry="2" />
<text  x="1166.24" y="159.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="469" width="1178.0" height="15.0" fill="rgb(235,60,39)" rx="2" ry="2" />
<text  x="13.43" y="479.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>sun.security.provider.AbstractDrbg.engineNextBytes:394 (1,048 samples, 0.07%)</title><rect x="1168.0" y="101" width="0.9" height="15.0" fill="rgb(209,158,23)" rx="2" ry="2" />
<text  x="1171.03" y="111.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (93,722 samples, 6.57%)</title><rect x="758.4" y="133" width="77.5" height="15.0" fill="rgb(221,79,23)" rx="2" ry="2" />
<text  x="761.37" y="143.5" >org.boun..</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Primitive.encodeTo:-1 (530 samples, 0.04%)</title><rect x="1186.7" y="181" width="0.4" height="15.0" fill="rgb(232,104,6)" rx="2" ry="2" />
<text  x="1189.66" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.toBigInteger:-1 (1,046 samples, 0.07%)</title><rect x="1178.0" y="213" width="0.9" height="15.0" fill="rgb(224,53,4)" rx="2" ry="2" />
<text  x="1180.99" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.createPrimitiveDERObject:-1 (3,140 samples, 0.22%)</title><rect x="1181.0" y="101" width="2.6" height="15.0" fill="rgb(210,187,8)" rx="2" ry="2" />
<text  x="1184.02" y="111.5" ></text>
</g>
<g >
<title>java.lang.Thread.run:834 (1,424,417 samples, 99.91%)</title><rect x="10.4" y="549" width="1179.0" height="15.0" fill="rgb(214,95,35)" rx="2" ry="2" />
<text  x="13.43" y="559.5" >java.lang.Thread.run:834</text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:515 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="485" width="1178.0" height="15.0" fill="rgb(229,74,51)" rx="2" ry="2" />
<text  x="13.43" y="495.5" >java.util.concurrent.Executors$RunnableAdapter.call:515</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="501" width="1178.0" height="15.0" fill="rgb(252,137,40)" rx="2" ry="2" />
<text  x="13.43" y="511.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.&lt;init&gt;:79 (1,048 samples, 0.07%)</title><rect x="1184.9" y="165" width="0.9" height="15.0" fill="rgb(231,10,35)" rx="2" ry="2" />
<text  x="1187.93" y="175.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (1,048 samples, 0.07%)</title><rect x="27.4" y="197" width="0.8" height="15.0" fill="rgb(226,30,29)" rx="2" ry="2" />
<text  x="30.36" y="207.5" ></text>
</g>
<g >
<title>java.util.Hashtable.&lt;init&gt;:195 (1,574 samples, 0.11%)</title><rect x="28.2" y="117" width="1.3" height="15.0" fill="rgb(254,50,41)" rx="2" ry="2" />
<text  x="31.24" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2352 (532 samples, 0.04%)</title><rect x="26.0" y="181" width="0.5" height="15.0" fill="rgb(245,54,1)" rx="2" ry="2" />
<text  x="29.04" y="191.5" ></text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:566 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="421" width="1178.0" height="15.0" fill="rgb(237,45,16)" rx="2" ry="2" />
<text  x="13.43" y="431.5" >java.lang.reflect.Method.invoke:566</text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:212 (652 samples, 0.05%)</title><rect x="1188.4" y="469" width="0.5" height="15.0" fill="rgb(248,174,53)" rx="2" ry="2" />
<text  x="1191.39" y="479.5" ></text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (3,658 samples, 0.26%)</title><rect x="18.7" y="117" width="3.0" height="15.0" fill="rgb(249,118,44)" rx="2" ry="2" />
<text  x="21.68" y="127.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked:75 (200 samples, 0.01%)</title><rect x="1189.4" y="517" width="0.2" height="15.0" fill="rgb(228,109,7)" rx="2" ry="2" />
<text  x="1192.42" y="527.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (2,622 samples, 0.18%)</title><rect x="1175.8" y="181" width="2.2" height="15.0" fill="rgb(235,6,7)" rx="2" ry="2" />
<text  x="1178.82" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (4,190 samples, 0.29%)</title><rect x="35.9" y="69" width="3.5" height="15.0" fill="rgb(253,175,19)" rx="2" ry="2" />
<text  x="38.90" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (1,044 samples, 0.07%)</title><rect x="1185.8" y="165" width="0.9" height="15.0" fill="rgb(209,63,25)" rx="2" ry="2" />
<text  x="1188.79" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.init:-1 (13,618 samples, 0.96%)</title><rect x="14.8" y="245" width="11.2" height="15.0" fill="rgb(211,61,6)" rx="2" ry="2" />
<text  x="17.77" y="255.5" ></text>
</g>
<g >
<title>sun.security.provider.AbstractDrbg.engineNextBytes:334 (1,048 samples, 0.07%)</title><rect x="1168.0" y="117" width="0.9" height="15.0" fill="rgb(237,223,14)" rx="2" ry="2" />
<text  x="1171.03" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readObject:-1 (5,752 samples, 0.40%)</title><rect x="1178.9" y="197" width="4.7" height="15.0" fill="rgb(230,206,48)" rx="2" ry="2" />
<text  x="1181.86" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (144,469 samples, 10.13%)</title><rect x="638.8" y="133" width="119.6" height="15.0" fill="rgb(244,103,1)" rx="2" ry="2" />
<text  x="641.79" y="143.5" >org.bouncycast..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (112,136 samples, 7.87%)</title><rect x="925.5" y="117" width="92.9" height="15.0" fill="rgb(230,121,45)" rx="2" ry="2" />
<text  x="928.54" y="127.5" >org.bouncyc..</text>
</g>
<g >
<title>java.util.Arrays.copyOf:3793 (522 samples, 0.04%)</title><rect x="1158.9" y="117" width="0.4" height="15.0" fill="rgb(209,37,17)" rx="2" ry="2" />
<text  x="1161.89" y="127.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:224 (524 samples, 0.04%)</title><rect x="1168.0" y="85" width="0.5" height="15.0" fill="rgb(251,10,2)" rx="2" ry="2" />
<text  x="1171.03" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.toBigInteger:-1 (1,046 samples, 0.07%)</title><rect x="1178.0" y="197" width="0.9" height="15.0" fill="rgb(254,175,6)" rx="2" ry="2" />
<text  x="1180.99" y="207.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedRunner.run:72 (200 samples, 0.01%)</title><rect x="1189.4" y="533" width="0.2" height="15.0" fill="rgb(236,47,6)" rx="2" ry="2" />
<text  x="1192.42" y="543.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.verify:51 (1,404,309 samples, 98.50%)</title><rect x="26.0" y="309" width="1162.4" height="15.0" fill="rgb(209,33,11)" rx="2" ry="2" />
<text  x="29.04" y="319.5" >org.sample.SM2Util.verify:51</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (122,151 samples, 8.57%)</title><rect x="1018.4" y="133" width="101.1" height="15.0" fill="rgb(240,145,27)" rx="2" ry="2" />
<text  x="1021.35" y="143.5" >org.bouncyca..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.WNafUtil.precompute:-1 (526 samples, 0.04%)</title><rect x="1165.0" y="181" width="0.4" height="15.0" fill="rgb(241,68,49)" rx="2" ry="2" />
<text  x="1167.99" y="191.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="389" width="1178.0" height="15.0" fill="rgb(206,59,30)" rx="2" ry="2" />
<text  x="13.43" y="399.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62</text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.isValidPartial:-1 (14,504 samples, 1.02%)</title><rect x="28.2" y="181" width="12.0" height="15.0" fill="rgb(223,110,50)" rx="2" ry="2" />
<text  x="31.23" y="191.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.verify:47 (5,242 samples, 0.37%)</title><rect x="10.4" y="309" width="4.4" height="15.0" fill="rgb(252,77,51)" rx="2" ry="2" />
<text  x="13.43" y="319.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (4,714 samples, 0.33%)</title><rect x="22.1" y="165" width="3.9" height="15.0" fill="rgb(253,105,3)" rx="2" ry="2" />
<text  x="25.14" y="175.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine$RequestHook$$Lambda$98.1692840645.get$Lambda:-1 (522 samples, 0.04%)</title><rect x="1189.0" y="405" width="0.4" height="15.0" fill="rgb(225,68,51)" rx="2" ry="2" />
<text  x="1191.99" y="415.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.normalize:-1 (2,624 samples, 0.18%)</title><rect x="1165.4" y="197" width="2.2" height="15.0" fill="rgb(213,97,45)" rx="2" ry="2" />
<text  x="1168.42" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineInitVerify:-1 (13,618 samples, 0.96%)</title><rect x="14.8" y="261" width="11.2" height="15.0" fill="rgb(215,212,51)" rx="2" ry="2" />
<text  x="17.77" y="271.5" ></text>
</g>
<g >
<title>java.util.concurrent.CopyOnWriteArrayList.iterator:1024 (652 samples, 0.05%)</title><rect x="1188.4" y="453" width="0.5" height="15.0" fill="rgb(228,21,17)" rx="2" ry="2" />
<text  x="1191.39" y="463.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.buildObject:-1 (3,142 samples, 0.22%)</title><rect x="1181.0" y="117" width="2.6" height="15.0" fill="rgb(226,15,8)" rx="2" ry="2" />
<text  x="1184.02" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1 (1,392,783 samples, 97.70%)</title><rect x="26.0" y="229" width="1152.9" height="15.0" fill="rgb(221,183,46)" rx="2" ry="2" />
<text  x="29.04" y="239.5" >org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (522 samples, 0.04%)</title><rect x="1167.2" y="165" width="0.4" height="15.0" fill="rgb(228,13,14)" rx="2" ry="2" />
<text  x="1170.16" y="175.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.doSingle:138 (200 samples, 0.01%)</title><rect x="1189.4" y="501" width="0.2" height="15.0" fill="rgb(228,140,39)" rx="2" ry="2" />
<text  x="1192.42" y="511.5" ></text>
</g>
<g >
<title>sun.security.provider.DigestBase.engineDigest:187 (524 samples, 0.04%)</title><rect x="1168.0" y="37" width="0.5" height="15.0" fill="rgb(221,140,9)" rx="2" ry="2" />
<text  x="1171.03" y="47.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (258,429 samples, 18.13%)</title><rect x="424.9" y="117" width="213.9" height="15.0" fill="rgb(211,55,0)" rx="2" ry="2" />
<text  x="427.89" y="127.5" >org.bouncycastle.math.raw.Na..</text>
</g>
<g >
<title>org.bouncycastle.util.BigIntegers.asUnsignedByteArray:-1 (5,240 samples, 0.37%)</title><rect x="21.7" y="181" width="4.3" height="15.0" fill="rgb(221,27,27)" rx="2" ry="2" />
<text  x="24.71" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.decodeValue:-1 (1,058 samples, 0.07%)</title><rect x="1183.6" y="213" width="0.9" height="15.0" fill="rgb(206,30,24)" rx="2" ry="2" />
<text  x="1186.62" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.normalize:-1 (15,180 samples, 1.06%)</title><rect x="1165.4" y="213" width="12.6" height="15.0" fill="rgb(250,87,41)" rx="2" ry="2" />
<text  x="1168.42" y="223.5" ></text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:153 (1,566 samples, 0.11%)</title><rect x="10.4" y="229" width="1.3" height="15.0" fill="rgb(206,89,6)" rx="2" ry="2" />
<text  x="13.43" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.buildObject:-1 (5,752 samples, 0.40%)</title><rect x="1178.9" y="181" width="4.7" height="15.0" fill="rgb(239,27,51)" rx="2" ry="2" />
<text  x="1181.86" y="191.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine$RequestHook.execute:70 (522 samples, 0.04%)</title><rect x="1189.0" y="453" width="0.4" height="15.0" fill="rgb(208,28,52)" rx="2" ry="2" />
<text  x="1191.99" y="463.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve$1.createPoint:-1 (65,535 samples, 4.60%)</title><rect x="40.2" y="149" width="54.3" height="15.0" fill="rgb(240,90,51)" rx="2" ry="2" />
<text  x="43.23" y="159.5" >org.b..</text>
</g>
<g >
<title>org.bouncycastle.asn1.DefiniteLengthInputStream.toByteArray:-1 (2,092 samples, 0.15%)</title><rect x="1181.9" y="85" width="1.7" height="15.0" fill="rgb(243,120,52)" rx="2" ry="2" />
<text  x="1184.88" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (21,195 samples, 1.49%)</title><rect x="393.4" y="149" width="17.5" height="15.0" fill="rgb(226,213,44)" rx="2" ry="2" />
<text  x="396.37" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (522 samples, 0.04%)</title><rect x="1175.4" y="181" width="0.4" height="15.0" fill="rgb(209,30,4)" rx="2" ry="2" />
<text  x="1178.38" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.&lt;init&gt;:-1 (1,566 samples, 0.11%)</title><rect x="13.5" y="133" width="1.3" height="15.0" fill="rgb(214,97,22)" rx="2" ry="2" />
<text  x="16.47" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (1,044 samples, 0.07%)</title><rect x="1166.3" y="149" width="0.9" height="15.0" fill="rgb(241,54,17)" rx="2" ry="2" />
<text  x="1169.29" y="159.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineInitVerify:1325 (13,618 samples, 0.96%)</title><rect x="14.8" y="277" width="11.2" height="15.0" fill="rgb(217,25,8)" rx="2" ry="2" />
<text  x="17.77" y="287.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickWNaf:-1 (1,359,413 samples, 95.35%)</title><rect x="40.2" y="197" width="1125.2" height="15.0" fill="rgb(249,165,24)" rx="2" ry="2" />
<text  x="43.23" y="207.5" >org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickWNaf:-1</text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:233 (524 samples, 0.04%)</title><rect x="1168.5" y="85" width="0.4" height="15.0" fill="rgb(234,122,0)" rx="2" ry="2" />
<text  x="1171.46" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (7,684 samples, 0.54%)</title><rect x="29.5" y="101" width="6.4" height="15.0" fill="rgb(253,16,47)" rx="2" ry="2" />
<text  x="32.54" y="111.5" ></text>
</g>
<g >
<title>all (1,425,636 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(217,94,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="453" width="1178.0" height="15.0" fill="rgb(216,132,7)" rx="2" ry="2" />
<text  x="13.43" y="463.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1:386 (1,248 samples, 0.09%)</title><rect x="1188.4" y="517" width="1.0" height="15.0" fill="rgb(205,133,5)" rx="2" ry="2" />
<text  x="1191.39" y="527.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1 (558,446 samples, 39.17%)</title><rect x="410.9" y="149" width="462.2" height="15.0" fill="rgb(215,161,36)" rx="2" ry="2" />
<text  x="413.91" y="159.5" >org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1</text>
</g>
<g >
<title>java.math.BigInteger.shiftRight:3375 (5,258 samples, 0.37%)</title><rect x="1158.9" y="149" width="4.3" height="15.0" fill="rgb(211,93,2)" rx="2" ry="2" />
<text  x="1161.89" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (112,136 samples, 7.87%)</title><rect x="925.5" y="133" width="92.9" height="15.0" fill="rgb(214,212,42)" rx="2" ry="2" />
<text  x="928.54" y="143.5" >org.bouncyc..</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.getZ:-1 (13,618 samples, 0.96%)</title><rect x="14.8" y="229" width="11.2" height="15.0" fill="rgb(206,198,40)" rx="2" ry="2" />
<text  x="17.77" y="239.5" ></text>
</g>
<g >
<title>java.lang.reflect.ReflectAccess.copyConstructor:155 (1,566 samples, 0.11%)</title><rect x="10.4" y="181" width="1.3" height="15.0" fill="rgb(234,203,40)" rx="2" ry="2" />
<text  x="13.43" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twicePlus:-1 (903,684 samples, 63.39%)</title><rect x="410.9" y="165" width="748.0" height="15.0" fill="rgb(239,134,38)" rx="2" ry="2" />
<text  x="413.91" y="175.5" >org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twicePlus:-1</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (104,634 samples, 7.34%)</title><rect x="94.5" y="149" width="86.6" height="15.0" fill="rgb(250,137,13)" rx="2" ry="2" />
<text  x="97.48" y="159.5" >org.bouncy..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:233 (200 samples, 0.01%)</title><rect x="1189.4" y="485" width="0.2" height="15.0" fill="rgb(234,15,54)" rx="2" ry="2" />
<text  x="1192.42" y="495.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECFieldElement.getEncoded:-1 (10,998 samples, 0.77%)</title><rect x="16.9" y="197" width="9.1" height="15.0" fill="rgb(244,63,35)" rx="2" ry="2" />
<text  x="19.94" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.addFieldElement:-1 (10,998 samples, 0.77%)</title><rect x="16.9" y="213" width="9.1" height="15.0" fill="rgb(240,122,27)" rx="2" ry="2" />
<text  x="19.94" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.square:-1 (5,236 samples, 0.37%)</title><rect x="35.9" y="101" width="4.3" height="15.0" fill="rgb(229,97,26)" rx="2" ry="2" />
<text  x="38.90" y="111.5" ></text>
</g>
<g >
<title>java.security.MessageDigest.digest:385 (524 samples, 0.04%)</title><rect x="1168.0" y="69" width="0.5" height="15.0" fill="rgb(215,113,34)" rx="2" ry="2" />
<text  x="1171.03" y="79.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="373" width="1178.0" height="15.0" fill="rgb(246,92,24)" rx="2" ry="2" />
<text  x="13.43" y="383.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1</text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (1,056 samples, 0.07%)</title><rect x="1183.6" y="149" width="0.9" height="15.0" fill="rgb(225,83,20)" rx="2" ry="2" />
<text  x="1186.62" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (44,938 samples, 3.15%)</title><rect x="835.9" y="133" width="37.2" height="15.0" fill="rgb(228,140,1)" rx="2" ry="2" />
<text  x="838.94" y="143.5" >org..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1511 (524 samples, 0.04%)</title><rect x="26.5" y="133" width="0.4" height="15.0" fill="rgb(220,5,44)" rx="2" ry="2" />
<text  x="29.49" y="143.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:236 (5,242 samples, 0.37%)</title><rect x="10.4" y="261" width="4.4" height="15.0" fill="rgb(239,80,37)" rx="2" ry="2" />
<text  x="13.43" y="271.5" ></text>
</g>
<g >
<title>java.lang.Class.getConstructor:2150 (1,566 samples, 0.11%)</title><rect x="10.4" y="213" width="1.3" height="15.0" fill="rgb(234,194,1)" rx="2" ry="2" />
<text  x="13.43" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Integer.createPrimitive:-1 (1,048 samples, 0.07%)</title><rect x="1181.0" y="85" width="0.9" height="15.0" fill="rgb(251,154,29)" rx="2" ry="2" />
<text  x="1184.02" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.sumOfTwoMultiplies:-1 (1,373,917 samples, 96.37%)</title><rect x="28.2" y="213" width="1137.2" height="15.0" fill="rgb(235,143,18)" rx="2" ry="2" />
<text  x="31.23" y="223.5" >org.bouncycastle.math.ec.ECAlgorithms.sumOfTwoMultiplies:-1</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:218 (5,242 samples, 0.37%)</title><rect x="10.4" y="277" width="4.4" height="15.0" fill="rgb(234,86,3)" rx="2" ry="2" />
<text  x="13.43" y="287.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.ReflectionFactory.copyConstructor:388 (1,566 samples, 0.11%)</title><rect x="10.4" y="197" width="1.3" height="15.0" fill="rgb(205,5,32)" rx="2" ry="2" />
<text  x="13.43" y="207.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (3,658 samples, 0.26%)</title><rect x="18.7" y="133" width="3.0" height="15.0" fill="rgb(217,154,45)" rx="2" ry="2" />
<text  x="21.68" y="143.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.GeneratedConstructorAccessor1.newInstance:-1 (3,676 samples, 0.26%)</title><rect x="11.7" y="181" width="3.1" height="15.0" fill="rgb(245,106,36)" rx="2" ry="2" />
<text  x="14.73" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (70,866 samples, 4.97%)</title><rect x="218.2" y="149" width="58.7" height="15.0" fill="rgb(232,26,54)" rx="2" ry="2" />
<text  x="221.24" y="159.5" >org.bo..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickFixedPoint:-1 (1,358,887 samples, 95.32%)</title><rect x="40.2" y="181" width="1124.8" height="15.0" fill="rgb(249,162,46)" rx="2" ry="2" />
<text  x="43.23" y="191.5" >org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickFixedPoint:-1</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (1,046 samples, 0.07%)</title><rect x="39.4" y="85" width="0.8" height="15.0" fill="rgb(243,22,21)" rx="2" ry="2" />
<text  x="42.37" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.&lt;init&gt;:-1 (1,566 samples, 0.11%)</title><rect x="13.5" y="149" width="1.3" height="15.0" fill="rgb(241,47,3)" rx="2" ry="2" />
<text  x="16.47" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (1,048 samples, 0.07%)</title><rect x="27.4" y="181" width="0.8" height="15.0" fill="rgb(247,82,26)" rx="2" ry="2" />
<text  x="30.36" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (1,044 samples, 0.07%)</title><rect x="1166.3" y="165" width="0.9" height="15.0" fill="rgb(209,160,22)" rx="2" ry="2" />
<text  x="1169.29" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Mod.checkedModOddInverse:-1 (5,226 samples, 0.37%)</title><rect x="1171.1" y="165" width="4.3" height="15.0" fill="rgb(253,87,10)" rx="2" ry="2" />
<text  x="1174.06" y="175.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2355 (1,048 samples, 0.07%)</title><rect x="26.5" y="181" width="0.9" height="15.0" fill="rgb(213,119,33)" rx="2" ry="2" />
<text  x="29.49" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.invert:-1 (5,228 samples, 0.37%)</title><rect x="1171.1" y="197" width="4.3" height="15.0" fill="rgb(230,81,52)" rx="2" ry="2" />
<text  x="1174.06" y="207.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:628 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="533" width="1178.0" height="15.0" fill="rgb(229,95,39)" rx="2" ry="2" />
<text  x="13.43" y="543.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:628</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readVector:-1 (5,752 samples, 0.40%)</title><rect x="1178.9" y="149" width="4.7" height="15.0" fill="rgb(252,134,29)" rx="2" ry="2" />
<text  x="1181.86" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readObject:-1 (3,142 samples, 0.22%)</title><rect x="1181.0" y="133" width="2.6" height="15.0" fill="rgb(217,221,14)" rx="2" ry="2" />
<text  x="1184.02" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (84,264 samples, 5.91%)</title><rect x="323.6" y="149" width="69.8" height="15.0" fill="rgb(212,186,34)" rx="2" ry="2" />
<text  x="326.62" y="159.5" >org.bou..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (122,151 samples, 8.57%)</title><rect x="1018.4" y="117" width="101.1" height="15.0" fill="rgb(229,18,22)" rx="2" ry="2" />
<text  x="1021.35" y="127.5" >org.bouncyca..</text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:439 (1,248 samples, 0.09%)</title><rect x="1188.4" y="501" width="1.0" height="15.0" fill="rgb(224,184,34)" rx="2" ry="2" />
<text  x="1191.39" y="511.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Integer.&lt;init&gt;:-1 (1,566 samples, 0.11%)</title><rect x="1187.1" y="181" width="1.3" height="15.0" fill="rgb(221,130,46)" rx="2" ry="2" />
<text  x="1190.10" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint$AbstractFp.satisfiesCurveEquation:-1 (12,920 samples, 0.91%)</title><rect x="29.5" y="117" width="10.7" height="15.0" fill="rgb(227,127,16)" rx="2" ry="2" />
<text  x="32.54" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve$1.lookupVar:-1 (170,169 samples, 11.94%)</title><rect x="40.2" y="165" width="140.9" height="15.0" fill="rgb(214,99,23)" rx="2" ry="2" />
<text  x="43.23" y="175.5" >org.bouncycastle...</text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024K_jmhTest.sm2p256v1_1024K_thrpt_jmhStub:119 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="341" width="1178.0" height="15.0" fill="rgb(214,94,10)" rx="2" ry="2" />
<text  x="13.43" y="351.5" >org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024K_jmhTest.sm2p256v1_1024K_thrpt_jmhStub:119</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.random:-1 (1,572 samples, 0.11%)</title><rect x="1167.6" y="165" width="1.3" height="15.0" fill="rgb(222,204,6)" rx="2" ry="2" />
<text  x="1170.59" y="175.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (3,658 samples, 0.26%)</title><rect x="18.7" y="149" width="3.0" height="15.0" fill="rgb(248,147,48)" rx="2" ry="2" />
<text  x="21.68" y="159.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1128 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="517" width="1178.0" height="15.0" fill="rgb(215,15,12)" rx="2" ry="2" />
<text  x="13.43" y="527.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1128</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (144,469 samples, 10.13%)</title><rect x="638.8" y="117" width="119.6" height="15.0" fill="rgb(228,161,19)" rx="2" ry="2" />
<text  x="641.79" y="127.5" >org.bouncycast..</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.encodeValue:-1 (1,566 samples, 0.11%)</title><rect x="1187.1" y="197" width="1.3" height="15.0" fill="rgb(222,105,54)" rx="2" ry="2" />
<text  x="1190.10" y="207.5" ></text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (1,048 samples, 0.07%)</title><rect x="27.4" y="165" width="0.8" height="15.0" fill="rgb(229,220,50)" rx="2" ry="2" />
<text  x="30.36" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (4,184 samples, 0.29%)</title><rect x="32.4" y="85" width="3.5" height="15.0" fill="rgb(219,126,7)" rx="2" ry="2" />
<text  x="35.44" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (4,190 samples, 0.29%)</title><rect x="35.9" y="85" width="3.5" height="15.0" fill="rgb(246,201,19)" rx="2" ry="2" />
<text  x="38.90" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (70,866 samples, 4.97%)</title><rect x="218.2" y="133" width="58.7" height="15.0" fill="rgb(227,1,30)" rx="2" ry="2" />
<text  x="221.24" y="143.5" >org.bo..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:281 (200 samples, 0.01%)</title><rect x="1189.4" y="469" width="0.2" height="15.0" fill="rgb(226,85,16)" rx="2" ry="2" />
<text  x="1192.42" y="479.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.calculateE:-1 (1,048 samples, 0.07%)</title><rect x="27.4" y="213" width="0.8" height="15.0" fill="rgb(220,181,19)" rx="2" ry="2" />
<text  x="30.36" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (1,046 samples, 0.07%)</title><rect x="1165.4" y="165" width="0.9" height="15.0" fill="rgb(231,224,40)" rx="2" ry="2" />
<text  x="1168.43" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (2,622 samples, 0.18%)</title><rect x="30.3" y="69" width="2.1" height="15.0" fill="rgb(228,207,52)" rx="2" ry="2" />
<text  x="33.27" y="79.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance:45 (3,676 samples, 0.26%)</title><rect x="11.7" y="197" width="3.1" height="15.0" fill="rgb(214,27,21)" rx="2" ry="2" />
<text  x="14.73" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (3,144 samples, 0.22%)</title><rect x="1175.4" y="197" width="2.6" height="15.0" fill="rgb(252,94,22)" rx="2" ry="2" />
<text  x="1178.38" y="207.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43 (1,423,169 samples, 99.83%)</title><rect x="10.4" y="405" width="1178.0" height="15.0" fill="rgb(253,116,4)" rx="2" ry="2" />
<text  x="13.43" y="415.5" >jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1 (1,404,309 samples, 98.50%)</title><rect x="26.0" y="245" width="1162.4" height="15.0" fill="rgb(214,146,13)" rx="2" ry="2" />
<text  x="29.04" y="255.5" >org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Integer.getValue:-1 (1,058 samples, 0.07%)</title><rect x="1183.6" y="197" width="0.9" height="15.0" fill="rgb(222,100,31)" rx="2" ry="2" />
<text  x="1186.62" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twice:-1 (345,238 samples, 24.22%)</title><rect x="873.1" y="149" width="285.8" height="15.0" fill="rgb(249,90,5)" rx="2" ry="2" />
<text  x="876.14" y="159.5" >org.bouncycastle.math.ec.custom.gm.SM2..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1163 (526 samples, 0.04%)</title><rect x="26.5" y="165" width="0.4" height="15.0" fill="rgb(225,210,17)" rx="2" ry="2" />
<text  x="29.49" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.createScaledPoint:-1 (1,052 samples, 0.07%)</title><rect x="1165.4" y="181" width="0.9" height="15.0" fill="rgb(252,88,46)" rx="2" ry="2" />
<text  x="1168.42" y="191.5" ></text>
</g>
<g >
<title>java.security.Provider$Service.newInstance:1915 (5,242 samples, 0.37%)</title><rect x="10.4" y="245" width="4.4" height="15.0" fill="rgb(221,31,2)" rx="2" ry="2" />
<text  x="13.43" y="255.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.toBigInteger:-1 (5,758 samples, 0.40%)</title><rect x="16.9" y="165" width="4.8" height="15.0" fill="rgb(249,191,49)" rx="2" ry="2" />
<text  x="19.94" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.implIsValid:-1 (14,504 samples, 1.02%)</title><rect x="28.2" y="165" width="12.0" height="15.0" fill="rgb(241,148,5)" rx="2" ry="2" />
<text  x="31.23" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Mod.modOddInverse:-1 (5,226 samples, 0.37%)</title><rect x="1171.1" y="149" width="4.3" height="15.0" fill="rgb(235,153,24)" rx="2" ry="2" />
<text  x="1174.06" y="159.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedMain.main:86 (200 samples, 0.01%)</title><rect x="1189.4" y="549" width="0.2" height="15.0" fill="rgb(249,216,8)" rx="2" ry="2" />
<text  x="1192.42" y="559.5" ></text>
</g>
<g >
<title>java.security.Signature.initVerify:506 (13,618 samples, 0.96%)</title><rect x="14.8" y="293" width="11.2" height="15.0" fill="rgb(249,167,3)" rx="2" ry="2" />
<text  x="17.77" y="303.5" ></text>
</g>
<g >
<title>java.security.Signature.getInstance:450 (5,242 samples, 0.37%)</title><rect x="10.4" y="293" width="4.4" height="15.0" fill="rgb(212,96,19)" rx="2" ry="2" />
<text  x="13.43" y="303.5" ></text>
</g>
<g >
<title>java.math.BigInteger.mod:2699 (1,590 samples, 0.11%)</title><rect x="26.0" y="213" width="1.4" height="15.0" fill="rgb(225,118,33)" rx="2" ry="2" />
<text  x="29.04" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.decode:-1 (11,526 samples, 0.81%)</title><rect x="1178.9" y="229" width="9.5" height="15.0" fill="rgb(251,84,40)" rx="2" ry="2" />
<text  x="1181.85" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint$1.precompute:-1 (12,920 samples, 0.91%)</title><rect x="29.5" y="133" width="10.7" height="15.0" fill="rgb(221,88,50)" rx="2" ry="2" />
<text  x="32.54" y="143.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3405 (522 samples, 0.04%)</title><rect x="1158.9" y="133" width="0.4" height="15.0" fill="rgb(240,157,27)" rx="2" ry="2" />
<text  x="1161.89" y="143.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.InputStreamDrainer.run:77 (493 samples, 0.03%)</title><rect x="1189.6" y="549" width="0.4" height="15.0" fill="rgb(238,133,50)" rx="2" ry="2" />
<text  x="1192.59" y="559.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Object.getEncoded:-1 (2,624 samples, 0.18%)</title><rect x="1184.9" y="197" width="2.2" height="15.0" fill="rgb(246,196,27)" rx="2" ry="2" />
<text  x="1187.92" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.DERSequence.encode:-1 (530 samples, 0.04%)</title><rect x="1186.7" y="149" width="0.4" height="15.0" fill="rgb(227,39,15)" rx="2" ry="2" />
<text  x="1189.66" y="159.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.&lt;init&gt;:64 (1,048 samples, 0.07%)</title><rect x="1184.9" y="181" width="0.9" height="15.0" fill="rgb(218,16,32)" rx="2" ry="2" />
<text  x="1187.93" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1EncodableVector.&lt;init&gt;:-1 (2,088 samples, 0.15%)</title><rect x="1179.3" y="133" width="1.7" height="15.0" fill="rgb(253,158,7)" rx="2" ry="2" />
<text  x="1182.29" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Primitive.fromByteArray:-1 (5,756 samples, 0.40%)</title><rect x="1178.9" y="213" width="4.7" height="15.0" fill="rgb(220,40,27)" rx="2" ry="2" />
<text  x="1181.85" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.toBigInteger:-1 (5,758 samples, 0.40%)</title><rect x="16.9" y="181" width="4.8" height="15.0" fill="rgb(217,12,34)" rx="2" ry="2" />
<text  x="19.94" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.DEROutputStream.writePrimitive:-1 (530 samples, 0.04%)</title><rect x="1186.7" y="165" width="0.4" height="15.0" fill="rgb(222,75,20)" rx="2" ry="2" />
<text  x="1189.66" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (522 samples, 0.04%)</title><rect x="1175.4" y="165" width="0.4" height="15.0" fill="rgb(218,183,47)" rx="2" ry="2" />
<text  x="1178.38" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.digests.SHA256Digest.&lt;init&gt;:-1 (1,582 samples, 0.11%)</title><rect x="12.2" y="149" width="1.3" height="15.0" fill="rgb(229,222,37)" rx="2" ry="2" />
<text  x="15.17" y="159.5" ></text>
</g>
<g >
<title>java.lang.reflect.Constructor.newInstance:490 (3,676 samples, 0.26%)</title><rect x="11.7" y="213" width="3.1" height="15.0" fill="rgb(241,223,19)" rx="2" ry="2" />
<text  x="14.73" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (2,612 samples, 0.18%)</title><rect x="1168.9" y="181" width="2.2" height="15.0" fill="rgb(210,64,29)" rx="2" ry="2" />
<text  x="1171.89" y="191.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineVerify:1414 (1,404,309 samples, 98.50%)</title><rect x="26.0" y="277" width="1162.4" height="15.0" fill="rgb(240,56,27)" rx="2" ry="2" />
<text  x="29.04" y="287.5" >java.security.Signature$Delegate.engineVerify:1414</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1227 (526 samples, 0.04%)</title><rect x="26.5" y="149" width="0.4" height="15.0" fill="rgb(252,120,34)" rx="2" ry="2" />
<text  x="29.49" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (56,452 samples, 3.96%)</title><rect x="276.9" y="149" width="46.7" height="15.0" fill="rgb(225,188,36)" rx="2" ry="2" />
<text  x="279.90" y="159.5" >org...</text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi$sha256WithSM2.&lt;init&gt;:-1 (3,674 samples, 0.26%)</title><rect x="11.7" y="165" width="3.1" height="15.0" fill="rgb(218,98,45)" rx="2" ry="2" />
<text  x="14.73" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.inv:-1 (5,226 samples, 0.37%)</title><rect x="1171.1" y="181" width="4.3" height="15.0" fill="rgb(223,204,26)" rx="2" ry="2" />
<text  x="1174.06" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat.fromBigInteger:-1 (7,362 samples, 0.52%)</title><rect x="1158.9" y="165" width="6.1" height="15.0" fill="rgb(232,13,23)" rx="2" ry="2" />
<text  x="1161.89" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readVector:-1 (5,752 samples, 0.40%)</title><rect x="1178.9" y="165" width="4.7" height="15.0" fill="rgb(209,130,2)" rx="2" ry="2" />
<text  x="1181.86" y="175.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:4102 (524 samples, 0.04%)</title><rect x="26.5" y="117" width="0.4" height="15.0" fill="rgb(232,122,48)" rx="2" ry="2" />
<text  x="29.49" y="127.5" ></text>
</g>
<g >
<title>sun.security.provider.DRBG.engineNextBytes:233 (1,048 samples, 0.07%)</title><rect x="1168.0" y="133" width="0.9" height="15.0" fill="rgb(211,197,50)" rx="2" ry="2" />
<text  x="1171.03" y="143.5" ></text>
</g>
<g >
<title>java.util.Hashtable.&lt;init&gt;:208 (1,574 samples, 0.11%)</title><rect x="28.2" y="133" width="1.3" height="15.0" fill="rgb(236,69,15)" rx="2" ry="2" />
<text  x="31.24" y="143.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.toByteArray:211 (1,044 samples, 0.07%)</title><rect x="1185.8" y="181" width="0.9" height="15.0" fill="rgb(212,135,14)" rx="2" ry="2" />
<text  x="1188.79" y="191.5" ></text>
</g>
<g >
<title>java.security.Signature.verify:788 (1,404,309 samples, 98.50%)</title><rect x="26.0" y="293" width="1162.4" height="15.0" fill="rgb(216,21,21)" rx="2" ry="2" />
<text  x="29.04" y="303.5" >java.security.Signature.verify:788</text>
</g>
<g >
<title>java.security.MessageDigest$Delegate.engineDigest:639 (524 samples, 0.04%)</title><rect x="1168.0" y="53" width="0.5" height="15.0" fill="rgb(228,188,6)" rx="2" ry="2" />
<text  x="1171.03" y="63.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.doPeriodic:183 (1,248 samples, 0.09%)</title><rect x="1188.4" y="485" width="1.0" height="15.0" fill="rgb(238,97,10)" rx="2" ry="2" />
<text  x="1191.39" y="495.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1 (277,672 samples, 19.48%)</title><rect x="181.1" y="165" width="229.8" height="15.0" fill="rgb(220,164,5)" rx="2" ry="2" />
<text  x="184.08" y="175.5" >org.bouncycastle.math.ec.custo..</text>
</g>
</g>
</svg>
