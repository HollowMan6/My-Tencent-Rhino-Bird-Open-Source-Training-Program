<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >cpu sm2p256v1_1024K-Throughput</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>org.sample.SM2Util.verify:50 (3,101 samples, 97.39%)</title><rect x="11.5" y="245" width="1149.2" height="15.0" fill="rgb(225,199,10)" rx="2" ry="2" />
<text  x="14.48" y="255.5" >org.sample.SM2Util.verify:50</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.reduce:-1 (2 samples, 0.06%)</title><rect x="1170.0" y="69" width="0.7" height="15.0" fill="rgb(251,94,29)" rx="2" ry="2" />
<text  x="1172.99" y="79.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.verify:51 (60 samples, 1.88%)</title><rect x="1160.7" y="245" width="22.3" height="15.0" fill="rgb(244,105,39)" rx="2" ry="2" />
<text  x="1163.72" y="255.5" >o..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.sub:-1 (2 samples, 0.06%)</title><rect x="1180.7" y="53" width="0.8" height="15.0" fill="rgb(230,31,23)" rx="2" ry="2" />
<text  x="1183.73" y="63.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1:386 (3 samples, 0.09%)</title><rect x="1183.0" y="453" width="1.1" height="15.0" fill="rgb(246,42,6)" rx="2" ry="2" />
<text  x="1185.96" y="463.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:281 (6 samples, 0.19%)</title><rect x="1184.1" y="405" width="2.2" height="15.0" fill="rgb(205,172,44)" rx="2" ry="2" />
<text  x="1187.07" y="415.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (1 samples, 0.03%)</title><rect x="10.7" y="85" width="0.4" height="15.0" fill="rgb(232,9,41)" rx="2" ry="2" />
<text  x="13.74" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.isOne:-1 (1 samples, 0.03%)</title><rect x="1162.9" y="85" width="0.4" height="15.0" fill="rgb(217,155,28)" rx="2" ry="2" />
<text  x="1165.95" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Mod.modOddInverse:-1 (1 samples, 0.03%)</title><rect x="1182.6" y="85" width="0.4" height="15.0" fill="rgb(236,2,20)" rx="2" ry="2" />
<text  x="1185.59" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3434 (1 samples, 0.03%)</title><rect x="1181.8" y="69" width="0.4" height="15.0" fill="rgb(238,38,7)" rx="2" ry="2" />
<text  x="1184.85" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineInitVerify:-1 (4 samples, 0.13%)</title><rect x="10.0" y="197" width="1.5" height="15.0" fill="rgb(229,78,21)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1128 (3,165 samples, 99.40%)</title><rect x="10.0" y="453" width="1173.0" height="15.0" fill="rgb(209,46,32)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1128</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:325 (1 samples, 0.03%)</title><rect x="1184.1" y="389" width="0.3" height="15.0" fill="rgb(243,92,46)" rx="2" ry="2" />
<text  x="1187.07" y="399.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.startProfilers:249 (1 samples, 0.03%)</title><rect x="1184.1" y="373" width="0.3" height="15.0" fill="rgb(220,175,28)" rx="2" ry="2" />
<text  x="1187.07" y="383.5" ></text>
</g>
<g >
<title>java.io.FilterInputStream.read:107 (5 samples, 0.16%)</title><rect x="1188.1" y="469" width="1.9" height="15.0" fill="rgb(218,103,12)" rx="2" ry="2" />
<text  x="1191.15" y="479.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twicePlus:-1 (48 samples, 1.51%)</title><rect x="1163.7" y="101" width="17.8" height="15.0" fill="rgb(228,131,22)" rx="2" ry="2" />
<text  x="1166.69" y="111.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.reduce:-1 (2 samples, 0.06%)</title><rect x="1164.4" y="53" width="0.8" height="15.0" fill="rgb(248,62,8)" rx="2" ry="2" />
<text  x="1167.43" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.getInt:4575 (1 samples, 0.03%)</title><rect x="11.1" y="85" width="0.4" height="15.0" fill="rgb(231,32,10)" rx="2" ry="2" />
<text  x="14.11" y="95.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitForInterruptibly:-1 (1 samples, 0.03%)</title><rect x="1184.1" y="293" width="0.3" height="15.0" fill="rgb(243,9,17)" rx="2" ry="2" />
<text  x="1187.07" y="303.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRight:3375 (1 samples, 0.03%)</title><rect x="1181.8" y="85" width="0.4" height="15.0" fill="rgb(213,217,30)" rx="2" ry="2" />
<text  x="1184.85" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.digests.GeneralDigest.update:-1 (2 samples, 0.06%)</title><rect x="10.0" y="133" width="0.7" height="15.0" fill="rgb(218,169,21)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedRunner.run:72 (6 samples, 0.19%)</title><rect x="1184.1" y="469" width="2.2" height="15.0" fill="rgb(245,9,28)" rx="2" ry="2" />
<text  x="1187.07" y="479.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.square:-1 (4 samples, 0.13%)</title><rect x="1178.9" y="53" width="1.5" height="15.0" fill="rgb(215,25,17)" rx="2" ry="2" />
<text  x="1181.88" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.Utils.tryWith:507 (5 samples, 0.16%)</title><rect x="1184.4" y="325" width="1.9" height="15.0" fill="rgb(222,45,26)" rx="2" ry="2" />
<text  x="1187.44" y="335.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (3,165 samples, 99.40%)</title><rect x="10.0" y="437" width="1173.0" height="15.0" fill="rgb(206,40,38)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (4 samples, 0.13%)</title><rect x="1178.9" y="69" width="1.5" height="15.0" fill="rgb(228,8,35)" rx="2" ry="2" />
<text  x="1181.88" y="79.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineUpdate:1392 (3,100 samples, 97.36%)</title><rect x="11.9" y="197" width="1148.8" height="15.0" fill="rgb(239,48,44)" rx="2" ry="2" />
<text  x="14.85" y="207.5" >java.security.Signature$Delegate.engineUpdate:1392</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Mod.checkedModOddInverse:-1 (1 samples, 0.03%)</title><rect x="1182.6" y="101" width="0.4" height="15.0" fill="rgb(236,5,10)" rx="2" ry="2" />
<text  x="1185.59" y="111.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitForInterruptibly:-1 (5 samples, 0.16%)</title><rect x="1184.4" y="293" width="1.9" height="15.0" fill="rgb(230,32,2)" rx="2" ry="2" />
<text  x="1187.44" y="303.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.Utils.tryWith:507 (1 samples, 0.03%)</title><rect x="1184.1" y="325" width="0.3" height="15.0" fill="rgb(238,4,21)" rx="2" ry="2" />
<text  x="1187.07" y="335.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.digests.SHA256Digest.processBlock:-1 (2,676 samples, 84.05%)</title><rect x="169.0" y="117" width="991.7" height="15.0" fill="rgb(211,52,15)" rx="2" ry="2" />
<text  x="171.99" y="127.5" >org.bouncycastle.crypto.digests.SHA256Digest.processBlock:-1</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.subtract:-1 (3 samples, 0.09%)</title><rect x="1180.4" y="69" width="1.1" height="15.0" fill="rgb(252,174,2)" rx="2" ry="2" />
<text  x="1183.36" y="79.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:628 (3,165 samples, 99.40%)</title><rect x="10.0" y="469" width="1173.0" height="15.0" fill="rgb(240,129,44)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:628</text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECFieldElement.getEncoded:-1 (2 samples, 0.06%)</title><rect x="10.7" y="133" width="0.8" height="15.0" fill="rgb(218,79,44)" rx="2" ry="2" />
<text  x="13.74" y="143.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (3,165 samples, 99.40%)</title><rect x="10.0" y="373" width="1173.0" height="15.0" fill="rgb(225,94,48)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.sub:-1 (1 samples, 0.03%)</title><rect x="1162.6" y="69" width="0.3" height="15.0" fill="rgb(220,36,10)" rx="2" ry="2" />
<text  x="1165.58" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.execute:191 (1 samples, 0.03%)</title><rect x="1184.1" y="341" width="0.3" height="15.0" fill="rgb(224,109,24)" rx="2" ry="2" />
<text  x="1187.07" y="351.5" ></text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineVerify:-1 (60 samples, 1.88%)</title><rect x="1160.7" y="197" width="22.3" height="15.0" fill="rgb(235,145,29)" rx="2" ry="2" />
<text  x="1163.72" y="207.5" >o..</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (3,165 samples, 99.40%)</title><rect x="10.0" y="405" width="1173.0" height="15.0" fill="rgb(239,126,19)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.addFieldElement:-1 (4 samples, 0.13%)</title><rect x="10.0" y="149" width="1.5" height="15.0" fill="rgb(248,121,1)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.add:-1 (1 samples, 0.03%)</title><rect x="1175.5" y="53" width="0.4" height="15.0" fill="rgb(207,85,3)" rx="2" ry="2" />
<text  x="1178.55" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (3,165 samples, 99.40%)</title><rect x="10.0" y="389" width="1173.0" height="15.0" fill="rgb(238,49,32)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (15 samples, 0.47%)</title><rect x="1164.4" y="69" width="5.6" height="15.0" fill="rgb(226,67,53)" rx="2" ry="2" />
<text  x="1167.43" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.inv:-1 (1 samples, 0.03%)</title><rect x="1182.6" y="117" width="0.4" height="15.0" fill="rgb(226,19,11)" rx="2" ry="2" />
<text  x="1185.59" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickFixedPoint:-1 (58 samples, 1.82%)</title><rect x="1160.7" y="117" width="21.5" height="15.0" fill="rgb(243,24,48)" rx="2" ry="2" />
<text  x="1163.72" y="127.5" >o..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.mul:-1 (13 samples, 0.41%)</title><rect x="1165.2" y="53" width="4.8" height="15.0" fill="rgb(226,141,6)" rx="2" ry="2" />
<text  x="1168.17" y="63.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.subtract:-1 (4 samples, 0.13%)</title><rect x="1173.0" y="69" width="1.4" height="15.0" fill="rgb(213,97,25)" rx="2" ry="2" />
<text  x="1175.95" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twice:-1 (17 samples, 0.53%)</title><rect x="1175.2" y="85" width="6.3" height="15.0" fill="rgb(244,204,50)" rx="2" ry="2" />
<text  x="1178.18" y="95.5" ></text>
</g>
<g >
<title>java.security.Signature.update:870 (3,101 samples, 97.39%)</title><rect x="11.5" y="229" width="1149.2" height="15.0" fill="rgb(227,129,50)" rx="2" ry="2" />
<text  x="14.48" y="239.5" >java.security.Signature.update:870</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1 (30 samples, 0.94%)</title><rect x="1164.1" y="85" width="11.1" height="15.0" fill="rgb(213,76,50)" rx="2" ry="2" />
<text  x="1167.06" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.toBigInteger:-1 (1 samples, 0.03%)</title><rect x="10.7" y="117" width="0.4" height="15.0" fill="rgb(243,1,31)" rx="2" ry="2" />
<text  x="13.74" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.bitLength:3684 (1 samples, 0.03%)</title><rect x="1181.5" y="85" width="0.3" height="15.0" fill="rgb(223,16,30)" rx="2" ry="2" />
<text  x="1184.48" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.digests.GeneralDigest.update:-1 (3,100 samples, 97.36%)</title><rect x="11.9" y="149" width="1148.8" height="15.0" fill="rgb(251,71,43)" rx="2" ry="2" />
<text  x="14.85" y="159.5" >org.bouncycastle.crypto.digests.GeneralDigest.update:-1</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.invert:-1 (1 samples, 0.03%)</title><rect x="1182.6" y="133" width="0.4" height="15.0" fill="rgb(245,184,1)" rx="2" ry="2" />
<text  x="1185.59" y="143.5" ></text>
</g>
<g >
<title>org.sample.BenchmarkVerifying.sm2p256v1_1024K:62 (3,165 samples, 99.40%)</title><rect x="10.0" y="261" width="1173.0" height="15.0" fill="rgb(214,222,46)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >org.sample.BenchmarkVerifying.sm2p256v1_1024K:62</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Mod.encode30:-1 (1 samples, 0.03%)</title><rect x="1182.6" y="69" width="0.4" height="15.0" fill="rgb(229,152,37)" rx="2" ry="2" />
<text  x="1185.59" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.init:-1 (4 samples, 0.13%)</title><rect x="10.0" y="181" width="1.5" height="15.0" fill="rgb(207,212,18)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.toBigInteger:-1 (1 samples, 0.03%)</title><rect x="10.7" y="101" width="0.4" height="15.0" fill="rgb(247,132,1)" rx="2" ry="2" />
<text  x="13.74" y="111.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.mul:-1 (1 samples, 0.03%)</title><rect x="1163.3" y="85" width="0.4" height="15.0" fill="rgb(214,19,32)" rx="2" ry="2" />
<text  x="1166.32" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.normalize:-1 (2 samples, 0.06%)</title><rect x="1182.2" y="149" width="0.8" height="15.0" fill="rgb(207,109,47)" rx="2" ry="2" />
<text  x="1185.22" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (1 samples, 0.03%)</title><rect x="10.7" y="69" width="0.4" height="15.0" fill="rgb(234,4,9)" rx="2" ry="2" />
<text  x="13.74" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1 (6 samples, 0.19%)</title><rect x="1161.5" y="101" width="2.2" height="15.0" fill="rgb(211,46,9)" rx="2" ry="2" />
<text  x="1164.46" y="111.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.read:351 (5 samples, 0.16%)</title><rect x="1188.1" y="453" width="1.9" height="15.0" fill="rgb(222,22,4)" rx="2" ry="2" />
<text  x="1191.15" y="463.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.update:-1 (3,100 samples, 97.36%)</title><rect x="11.9" y="165" width="1148.8" height="15.0" fill="rgb(250,197,0)" rx="2" ry="2" />
<text  x="14.85" y="175.5" >org.bouncycastle.crypto.signers.SM2Signer.update:-1</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.reduce:-1 (1 samples, 0.03%)</title><rect x="1175.9" y="53" width="0.4" height="15.0" fill="rgb(223,14,24)" rx="2" ry="2" />
<text  x="1178.92" y="63.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (8 samples, 0.25%)</title><rect x="1175.9" y="69" width="3.0" height="15.0" fill="rgb(221,55,30)" rx="2" ry="2" />
<text  x="1178.92" y="79.5" ></text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:566 (3,165 samples, 99.40%)</title><rect x="10.0" y="357" width="1173.0" height="15.0" fill="rgb(211,99,40)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >java.lang.reflect.Method.invoke:566</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (1 samples, 0.03%)</title><rect x="1162.2" y="85" width="0.4" height="15.0" fill="rgb(219,223,48)" rx="2" ry="2" />
<text  x="1165.20" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.subPInvFrom:-1 (2 samples, 0.06%)</title><rect x="1173.0" y="53" width="0.7" height="15.0" fill="rgb(214,181,1)" rx="2" ry="2" />
<text  x="1175.95" y="63.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.digests.SHA256Digest.processWord:-1 (2 samples, 0.06%)</title><rect x="10.0" y="117" width="0.7" height="15.0" fill="rgb(252,29,3)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.mul:-1 (2 samples, 0.06%)</title><rect x="1174.4" y="69" width="0.8" height="15.0" fill="rgb(253,6,35)" rx="2" ry="2" />
<text  x="1177.43" y="79.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024K_jmhTest.sm2p256v1_1024K_Throughput:83 (3,165 samples, 99.40%)</title><rect x="10.0" y="293" width="1173.0" height="15.0" fill="rgb(222,63,7)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024K_jmhTest.sm2p256v1_1024K_Throughput:83</text>
</g>
<g >
<title>java.lang.ProcessImpl.waitFor:554 (1 samples, 0.03%)</title><rect x="1184.1" y="309" width="0.3" height="15.0" fill="rgb(216,39,33)" rx="2" ry="2" />
<text  x="1187.07" y="319.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.digests.SHA256Digest.processBlock:-1 (2 samples, 0.06%)</title><rect x="10.0" y="101" width="0.7" height="15.0" fill="rgb(227,84,18)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>java.security.Signature.initVerify:506 (4 samples, 0.13%)</title><rect x="10.0" y="229" width="1.5" height="15.0" fill="rgb(209,195,30)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.readBytes:-1 (5 samples, 0.16%)</title><rect x="1188.1" y="389" width="1.9" height="15.0" fill="rgb(237,31,22)" rx="2" ry="2" />
<text  x="1191.15" y="399.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.InputStreamDrainer.run:80 (10 samples, 0.31%)</title><rect x="1186.3" y="485" width="3.7" height="15.0" fill="rgb(235,189,23)" rx="2" ry="2" />
<text  x="1189.29" y="495.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.digests.SHA256Digest.processWord:-1 (3,023 samples, 94.94%)</title><rect x="40.4" y="133" width="1120.3" height="15.0" fill="rgb(226,186,26)" rx="2" ry="2" />
<text  x="43.39" y="143.5" >org.bouncycastle.crypto.digests.SHA256Digest.processWord:-1</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.getZ:-1 (4 samples, 0.13%)</title><rect x="10.0" y="165" width="1.5" height="15.0" fill="rgb(219,210,35)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.reduce32:-1 (1 samples, 0.03%)</title><rect x="1164.8" y="37" width="0.4" height="15.0" fill="rgb(219,54,50)" rx="2" ry="2" />
<text  x="1167.80" y="47.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.mul:-1 (1 samples, 0.03%)</title><rect x="1161.8" y="69" width="0.4" height="15.0" fill="rgb(240,38,26)" rx="2" ry="2" />
<text  x="1164.83" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1 (60 samples, 1.88%)</title><rect x="1160.7" y="165" width="22.3" height="15.0" fill="rgb(244,11,2)" rx="2" ry="2" />
<text  x="1163.72" y="175.5" >o..</text>
</g>
<g >
<title>org.bouncycastle.crypto.digests.SHA256Digest.Sum1:-1 (1 samples, 0.03%)</title><rect x="1160.4" y="101" width="0.3" height="15.0" fill="rgb(211,221,2)" rx="2" ry="2" />
<text  x="1163.35" y="111.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.mul:-1 (7 samples, 0.22%)</title><rect x="1176.3" y="53" width="2.6" height="15.0" fill="rgb(206,208,12)" rx="2" ry="2" />
<text  x="1179.29" y="63.5" ></text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:515 (3,165 samples, 99.40%)</title><rect x="10.0" y="421" width="1173.0" height="15.0" fill="rgb(226,155,18)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >java.util.concurrent.Executors$RunnableAdapter.call:515</text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4123 (1 samples, 0.03%)</title><rect x="11.1" y="101" width="0.4" height="15.0" fill="rgb(207,150,7)" rx="2" ry="2" />
<text  x="14.11" y="111.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.sub:-1 (2 samples, 0.06%)</title><rect x="1173.7" y="53" width="0.7" height="15.0" fill="rgb(236,55,48)" rx="2" ry="2" />
<text  x="1176.69" y="63.5" ></text>
</g>
<g >
<title>all (3,184 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(216,217,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.execute:191 (5 samples, 0.16%)</title><rect x="1184.4" y="341" width="1.9" height="15.0" fill="rgb(224,93,26)" rx="2" ry="2" />
<text  x="1187.44" y="351.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1 (3,165 samples, 99.40%)</title><rect x="10.0" y="309" width="1173.0" height="15.0" fill="rgb(206,104,47)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1</text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:216 (3 samples, 0.09%)</title><rect x="1183.0" y="405" width="1.1" height="15.0" fill="rgb(244,24,27)" rx="2" ry="2" />
<text  x="1185.96" y="415.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.verify:49 (4 samples, 0.13%)</title><rect x="10.0" y="245" width="1.5" height="15.0" fill="rgb(237,21,25)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder$$Lambda$87.995536478.run:-1 (3 samples, 0.09%)</title><rect x="1183.0" y="469" width="1.1" height="15.0" fill="rgb(252,142,51)" rx="2" ry="2" />
<text  x="1185.96" y="479.5" ></text>
</g>
<g >
<title>java.security.Signature.update:901 (3,101 samples, 97.39%)</title><rect x="11.5" y="213" width="1149.2" height="15.0" fill="rgb(250,141,25)" rx="2" ry="2" />
<text  x="14.48" y="223.5" >java.security.Signature.update:901</text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineUpdate:-1 (3,100 samples, 97.36%)</title><rect x="11.9" y="181" width="1148.8" height="15.0" fill="rgb(244,82,12)" rx="2" ry="2" />
<text  x="14.85" y="191.5" >org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineUpdate:-1</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (1 samples, 0.03%)</title><rect x="1161.8" y="85" width="0.4" height="15.0" fill="rgb(243,102,54)" rx="2" ry="2" />
<text  x="1164.83" y="95.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked:75 (6 samples, 0.19%)</title><rect x="1184.1" y="453" width="2.2" height="15.0" fill="rgb(252,184,54)" rx="2" ry="2" />
<text  x="1187.07" y="463.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:421 (5 samples, 0.16%)</title><rect x="1184.4" y="389" width="1.9" height="15.0" fill="rgb(226,174,2)" rx="2" ry="2" />
<text  x="1187.44" y="399.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.add:-1 (1 samples, 0.03%)</title><rect x="1175.5" y="69" width="0.4" height="15.0" fill="rgb(208,228,43)" rx="2" ry="2" />
<text  x="1178.55" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.subPInvFrom:-1 (1 samples, 0.03%)</title><rect x="1180.4" y="53" width="0.3" height="15.0" fill="rgb(222,187,42)" rx="2" ry="2" />
<text  x="1183.36" y="63.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.subtract:-1 (1 samples, 0.03%)</title><rect x="1162.6" y="85" width="0.3" height="15.0" fill="rgb(210,216,46)" rx="2" ry="2" />
<text  x="1165.58" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.isOne:-1 (1 samples, 0.03%)</title><rect x="1162.9" y="69" width="0.4" height="15.0" fill="rgb(238,33,9)" rx="2" ry="2" />
<text  x="1165.95" y="79.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineInitVerify:1325 (4 samples, 0.13%)</title><rect x="10.0" y="213" width="1.5" height="15.0" fill="rgb(249,141,4)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.fill:252 (5 samples, 0.16%)</title><rect x="1188.1" y="421" width="1.9" height="15.0" fill="rgb(217,204,30)" rx="2" ry="2" />
<text  x="1191.15" y="431.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024K_jmhTest.sm2p256v1_1024K_thrpt_jmhStub:119 (3,165 samples, 99.40%)</title><rect x="10.0" y="277" width="1173.0" height="15.0" fill="rgb(216,22,4)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024K_jmhTest.sm2p256v1_1024K_thrpt_jmhStub:119</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.square:-1 (6 samples, 0.19%)</title><rect x="1170.7" y="53" width="2.3" height="15.0" fill="rgb(222,87,40)" rx="2" ry="2" />
<text  x="1173.73" y="63.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (6 samples, 0.19%)</title><rect x="1170.7" y="69" width="2.3" height="15.0" fill="rgb(205,192,48)" rx="2" ry="2" />
<text  x="1173.73" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.afterIteration:146 (5 samples, 0.16%)</title><rect x="1184.4" y="357" width="1.9" height="15.0" fill="rgb(226,213,5)" rx="2" ry="2" />
<text  x="1187.44" y="367.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.read:279 (5 samples, 0.16%)</title><rect x="1188.1" y="405" width="1.9" height="15.0" fill="rgb(218,32,52)" rx="2" ry="2" />
<text  x="1191.15" y="415.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.read:257 (5 samples, 0.16%)</title><rect x="1186.3" y="469" width="1.8" height="15.0" fill="rgb(215,106,48)" rx="2" ry="2" />
<text  x="1189.29" y="479.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineVerify:1414 (60 samples, 1.88%)</title><rect x="1160.7" y="213" width="22.3" height="15.0" fill="rgb(222,40,27)" rx="2" ry="2" />
<text  x="1163.72" y="223.5" >j..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.normalize:-1 (1 samples, 0.03%)</title><rect x="1182.2" y="133" width="0.4" height="15.0" fill="rgb(245,51,23)" rx="2" ry="2" />
<text  x="1185.22" y="143.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:233 (6 samples, 0.19%)</title><rect x="1184.1" y="421" width="2.2" height="15.0" fill="rgb(207,13,11)" rx="2" ry="2" />
<text  x="1187.07" y="431.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitFor:554 (5 samples, 0.16%)</title><rect x="1184.4" y="309" width="1.9" height="15.0" fill="rgb(248,109,43)" rx="2" ry="2" />
<text  x="1187.44" y="319.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.sumOfTwoMultiplies:-1 (58 samples, 1.82%)</title><rect x="1160.7" y="149" width="21.5" height="15.0" fill="rgb(238,147,33)" rx="2" ry="2" />
<text  x="1163.72" y="159.5" >o..</text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43 (3,165 samples, 99.40%)</title><rect x="10.0" y="341" width="1173.0" height="15.0" fill="rgb(235,205,49)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43</text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedMain.main:86 (6 samples, 0.19%)</title><rect x="1184.1" y="485" width="2.2" height="15.0" fill="rgb(231,177,14)" rx="2" ry="2" />
<text  x="1187.07" y="495.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.doSingle:138 (6 samples, 0.19%)</title><rect x="1184.1" y="437" width="2.2" height="15.0" fill="rgb(254,83,1)" rx="2" ry="2" />
<text  x="1187.07" y="447.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickWNaf:-1 (58 samples, 1.82%)</title><rect x="1160.7" y="133" width="21.5" height="15.0" fill="rgb(205,145,36)" rx="2" ry="2" />
<text  x="1163.72" y="143.5" >o..</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1 (60 samples, 1.88%)</title><rect x="1160.7" y="181" width="22.3" height="15.0" fill="rgb(249,168,25)" rx="2" ry="2" />
<text  x="1163.72" y="191.5" >o..</text>
</g>
<g >
<title>java.io.BufferedInputStream.read1:292 (5 samples, 0.16%)</title><rect x="1188.1" y="437" width="1.9" height="15.0" fill="rgb(241,197,17)" rx="2" ry="2" />
<text  x="1191.15" y="447.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.doPeriodic:183 (3 samples, 0.09%)</title><rect x="1183.0" y="421" width="1.1" height="15.0" fill="rgb(234,227,45)" rx="2" ry="2" />
<text  x="1185.96" y="431.5" ></text>
</g>
<g >
<title>java.security.Signature.verify:788 (60 samples, 1.88%)</title><rect x="1160.7" y="229" width="22.3" height="15.0" fill="rgb(247,33,4)" rx="2" ry="2" />
<text  x="1163.72" y="239.5" >j..</text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62 (3,165 samples, 99.40%)</title><rect x="10.0" y="325" width="1173.0" height="15.0" fill="rgb(243,131,41)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62</text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.beforeIteration:131 (1 samples, 0.03%)</title><rect x="1184.1" y="357" width="0.3" height="15.0" fill="rgb(240,211,7)" rx="2" ry="2" />
<text  x="1187.07" y="367.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.readBytes:-1 (5 samples, 0.16%)</title><rect x="1186.3" y="453" width="1.8" height="15.0" fill="rgb(205,16,38)" rx="2" ry="2" />
<text  x="1189.29" y="463.5" ></text>
</g>
<g >
<title>java.lang.Thread.run:834 (3,168 samples, 99.50%)</title><rect x="10.0" y="485" width="1174.1" height="15.0" fill="rgb(226,23,20)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >java.lang.Thread.run:834</text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4405 (1 samples, 0.03%)</title><rect x="10.7" y="53" width="0.4" height="15.0" fill="rgb(240,197,2)" rx="2" ry="2" />
<text  x="13.74" y="63.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat.fromBigInteger:-1 (2 samples, 0.06%)</title><rect x="1181.5" y="101" width="0.7" height="15.0" fill="rgb(233,76,9)" rx="2" ry="2" />
<text  x="1184.48" y="111.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.isInfinity:-1 (1 samples, 0.03%)</title><rect x="1163.7" y="85" width="0.4" height="15.0" fill="rgb(222,93,0)" rx="2" ry="2" />
<text  x="1166.69" y="95.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:439 (3 samples, 0.09%)</title><rect x="1183.0" y="437" width="1.1" height="15.0" fill="rgb(227,3,28)" rx="2" ry="2" />
<text  x="1185.96" y="447.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve$1.lookupVar:-1 (1 samples, 0.03%)</title><rect x="1161.1" y="101" width="0.4" height="15.0" fill="rgb(247,74,17)" rx="2" ry="2" />
<text  x="1164.09" y="111.5" ></text>
</g>
<g >
<title>org.bouncycastle.util.BigIntegers.asUnsignedByteArray:-1 (1 samples, 0.03%)</title><rect x="11.1" y="117" width="0.4" height="15.0" fill="rgb(232,57,5)" rx="2" ry="2" />
<text  x="14.11" y="127.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.stopProfilers:260 (5 samples, 0.16%)</title><rect x="1184.4" y="373" width="1.9" height="15.0" fill="rgb(225,63,42)" rx="2" ry="2" />
<text  x="1187.44" y="383.5" ></text>
</g>
</g>
</svg>
