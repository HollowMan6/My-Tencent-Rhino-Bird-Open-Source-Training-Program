<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >allocation-tlab sm2p256v1_1024B-Throughput</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(243,108,38)" rx="2" ry="2" />
<text  x="13.01" y="399.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(245,131,8)" rx="2" ry="2" />
<text  x="13.01" y="479.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:154 (833,622 samples, 1.05%)</title><rect x="10.0" y="229" width="12.4" height="15.0" fill="rgb(214,141,44)" rx="2" ry="2" />
<text  x="13.02" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (65,786 samples, 0.08%)</title><rect x="28.2" y="85" width="1.0" height="15.0" fill="rgb(239,90,31)" rx="2" ry="2" />
<text  x="31.18" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineVerify:-1 (78,405,400 samples, 98.69%)</title><rect x="25.5" y="261" width="1164.5" height="15.0" fill="rgb(225,94,18)" rx="2" ry="2" />
<text  x="28.46" y="271.5" >org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineVerify:-1</text>
</g>
<g >
<title>java.math.BigInteger.add:1309 (70,724 samples, 0.09%)</title><rect x="25.5" y="213" width="1.0" height="15.0" fill="rgb(206,132,47)" rx="2" ry="2" />
<text  x="28.46" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (2,208,522 samples, 2.78%)</title><rect x="120.1" y="149" width="32.8" height="15.0" fill="rgb(228,68,21)" rx="2" ry="2" />
<text  x="123.10" y="159.5" >or..</text>
</g>
<g >
<title>org.bouncycastle.asn1.DEROutputStream.writePrimitive:-1 (13,020 samples, 0.02%)</title><rect x="1178.2" y="165" width="0.2" height="15.0" fill="rgb(232,224,47)" rx="2" ry="2" />
<text  x="1181.23" y="175.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (30,528 samples, 0.04%)</title><rect x="23.6" y="133" width="0.4" height="15.0" fill="rgb(227,84,4)" rx="2" ry="2" />
<text  x="26.59" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Primitive.fromByteArray:-1 (49,500 samples, 0.06%)</title><rect x="1175.6" y="213" width="0.8" height="15.0" fill="rgb(213,18,49)" rx="2" ry="2" />
<text  x="1178.63" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.DLFactory.createSequence:-1 (19,390 samples, 0.02%)</title><rect x="1176.1" y="165" width="0.3" height="15.0" fill="rgb(240,218,24)" rx="2" ry="2" />
<text  x="1179.08" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.normalize:-1 (1,012,445 samples, 1.27%)</title><rect x="1160.6" y="213" width="15.0" height="15.0" fill="rgb(228,71,43)" rx="2" ry="2" />
<text  x="1163.58" y="223.5" ></text>
</g>
<g >
<title>java.security.MessageDigest$Delegate.engineDigest:639 (16,242 samples, 0.02%)</title><rect x="1161.9" y="53" width="0.2" height="15.0" fill="rgb(213,128,29)" rx="2" ry="2" />
<text  x="1164.85" y="63.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve$1.createPoint:-1 (5,265,255 samples, 6.63%)</title><rect x="30.1" y="149" width="78.2" height="15.0" fill="rgb(222,194,7)" rx="2" ry="2" />
<text  x="33.14" y="159.5" >org.bounc..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.inv:-1 (822,315 samples, 1.04%)</title><rect x="1163.0" y="181" width="12.3" height="15.0" fill="rgb(236,160,11)" rx="2" ry="2" />
<text  x="1166.04" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1 (78,405,400 samples, 98.69%)</title><rect x="25.5" y="245" width="1164.5" height="15.0" fill="rgb(208,221,4)" rx="2" ry="2" />
<text  x="28.46" y="255.5" >org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (5,781,512 samples, 7.28%)</title><rect x="762.8" y="133" width="85.8" height="15.0" fill="rgb(243,133,51)" rx="2" ry="2" />
<text  x="765.76" y="143.5" >org.bouncy..</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1EncodableVector.&lt;init&gt;:-1 (19,388 samples, 0.02%)</title><rect x="1177.3" y="181" width="0.3" height="15.0" fill="rgb(254,42,9)" rx="2" ry="2" />
<text  x="1180.32" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint$1.precompute:-1 (165,612 samples, 0.21%)</title><rect x="27.7" y="133" width="2.4" height="15.0" fill="rgb(208,92,12)" rx="2" ry="2" />
<text  x="30.68" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.toBigInteger:-1 (109,785 samples, 0.14%)</title><rect x="22.4" y="181" width="1.6" height="15.0" fill="rgb(223,188,23)" rx="2" ry="2" />
<text  x="25.41" y="191.5" ></text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:566 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(214,136,17)" rx="2" ry="2" />
<text  x="13.01" y="431.5" >java.lang.reflect.Method.invoke:566</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.decode:-1 (965,013 samples, 1.21%)</title><rect x="1175.6" y="229" width="14.4" height="15.0" fill="rgb(242,103,38)" rx="2" ry="2" />
<text  x="1178.63" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.square:-1 (66,280 samples, 0.08%)</title><rect x="29.2" y="101" width="0.9" height="15.0" fill="rgb(223,221,53)" rx="2" ry="2" />
<text  x="32.16" y="111.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.encodeValue:-1 (777,263 samples, 0.98%)</title><rect x="1178.4" y="197" width="11.6" height="15.0" fill="rgb(229,38,19)" rx="2" ry="2" />
<text  x="1181.42" y="207.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.grow:120 (10,406 samples, 0.01%)</title><rect x="1178.3" y="53" width="0.1" height="15.0" fill="rgb(236,24,34)" rx="2" ry="2" />
<text  x="1181.27" y="63.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineInitVerify:1325 (205,443 samples, 0.26%)</title><rect x="22.4" y="277" width="3.1" height="15.0" fill="rgb(243,185,21)" rx="2" ry="2" />
<text  x="25.40" y="287.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint$AbstractFp.satisfiesCurveEquation:-1 (165,612 samples, 0.21%)</title><rect x="27.7" y="117" width="2.4" height="15.0" fill="rgb(230,7,6)" rx="2" ry="2" />
<text  x="30.68" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.sumOfTwoMultiplies:-1 (76,280,188 samples, 96.01%)</title><rect x="27.6" y="213" width="1133.0" height="15.0" fill="rgb(223,141,45)" rx="2" ry="2" />
<text  x="30.63" y="223.5" >org.bouncycastle.math.ec.ECAlgorithms.sumOfTwoMultiplies:-1</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.decodeValue:-1 (63,928 samples, 0.08%)</title><rect x="1176.4" y="213" width="0.9" height="15.0" fill="rgb(205,207,41)" rx="2" ry="2" />
<text  x="1179.37" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (242,248 samples, 0.30%)</title><rect x="361.7" y="149" width="3.6" height="15.0" fill="rgb(244,57,4)" rx="2" ry="2" />
<text  x="364.69" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.isValidPartial:-1 (168,750 samples, 0.21%)</title><rect x="27.6" y="181" width="2.5" height="15.0" fill="rgb(236,45,49)" rx="2" ry="2" />
<text  x="30.63" y="191.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(223,163,17)" rx="2" ry="2" />
<text  x="13.01" y="383.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.invert:-1 (824,403 samples, 1.04%)</title><rect x="1163.0" y="197" width="12.3" height="15.0" fill="rgb(247,226,52)" rx="2" ry="2" />
<text  x="1166.03" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (63,412 samples, 0.08%)</title><rect x="1160.7" y="149" width="0.9" height="15.0" fill="rgb(253,213,14)" rx="2" ry="2" />
<text  x="1163.69" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (7,864,602 samples, 9.90%)</title><rect x="876.5" y="117" width="116.8" height="15.0" fill="rgb(207,54,47)" rx="2" ry="2" />
<text  x="879.48" y="127.5" >org.bouncycast..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickWNaf:-1 (76,111,438 samples, 95.80%)</title><rect x="30.1" y="197" width="1130.5" height="15.0" fill="rgb(244,14,36)" rx="2" ry="2" />
<text  x="33.14" y="207.5" >org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickWNaf:-1</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (4,534,721 samples, 5.71%)</title><rect x="695.4" y="133" width="67.4" height="15.0" fill="rgb(222,56,22)" rx="2" ry="2" />
<text  x="698.41" y="143.5" >org.bou..</text>
</g>
<g >
<title>sun.security.provider.DigestBase.engineDigest:187 (16,242 samples, 0.02%)</title><rect x="1161.9" y="37" width="0.2" height="15.0" fill="rgb(218,209,14)" rx="2" ry="2" />
<text  x="1164.85" y="47.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3405 (33,960 samples, 0.04%)</title><rect x="1146.8" y="133" width="0.5" height="15.0" fill="rgb(226,63,50)" rx="2" ry="2" />
<text  x="1149.79" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1OutputStream.writeEncodingDL:-1 (10,406 samples, 0.01%)</title><rect x="1178.3" y="117" width="0.1" height="15.0" fill="rgb(237,24,50)" rx="2" ry="2" />
<text  x="1181.27" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (554,914 samples, 0.70%)</title><rect x="108.3" y="149" width="8.3" height="15.0" fill="rgb(245,82,28)" rx="2" ry="2" />
<text  x="111.34" y="159.5" ></text>
</g>
<g >
<title>java.security.Provider$Service.newInstance:1915 (834,672 samples, 1.05%)</title><rect x="10.0" y="245" width="12.4" height="15.0" fill="rgb(245,141,16)" rx="2" ry="2" />
<text  x="13.01" y="255.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twicePlus:-1 (52,617,696 samples, 66.23%)</title><rect x="365.3" y="165" width="781.5" height="15.0" fill="rgb(237,188,8)" rx="2" ry="2" />
<text  x="368.29" y="175.5" >org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twicePlus:-1</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (7,355,283 samples, 9.26%)</title><rect x="252.4" y="149" width="109.3" height="15.0" fill="rgb(241,22,47)" rx="2" ry="2" />
<text  x="255.45" y="159.5" >org.bouncycas..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (3,610,012 samples, 4.54%)</title><rect x="1093.2" y="133" width="53.6" height="15.0" fill="rgb(206,65,46)" rx="2" ry="2" />
<text  x="1096.17" y="143.5" >org.b..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.toBigInteger:-1 (109,785 samples, 0.14%)</title><rect x="22.4" y="165" width="1.6" height="15.0" fill="rgb(224,111,25)" rx="2" ry="2" />
<text  x="25.41" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readVector:-1 (8,906 samples, 0.01%)</title><rect x="1175.9" y="149" width="0.2" height="15.0" fill="rgb(220,83,8)" rx="2" ry="2" />
<text  x="1178.95" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (19,528,749 samples, 24.58%)</title><rect x="405.4" y="117" width="290.0" height="15.0" fill="rgb(216,76,41)" rx="2" ry="2" />
<text  x="408.36" y="127.5" >org.bouncycastle.math.raw.Nat256.creat..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Mod.modOddInverse:-1 (822,315 samples, 1.04%)</title><rect x="1163.0" y="149" width="12.3" height="15.0" fill="rgb(236,229,10)" rx="2" ry="2" />
<text  x="1166.04" y="159.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:628 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(245,67,33)" rx="2" ry="2" />
<text  x="13.01" y="543.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:628</text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(240,111,9)" rx="2" ry="2" />
<text  x="13.01" y="415.5" >jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43</text>
</g>
<g >
<title>java.security.MessageDigest.digest:385 (16,242 samples, 0.02%)</title><rect x="1161.9" y="69" width="0.2" height="15.0" fill="rgb(243,221,17)" rx="2" ry="2" />
<text  x="1164.85" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1OutputStream.write:-1 (10,406 samples, 0.01%)</title><rect x="1178.3" y="101" width="0.1" height="15.0" fill="rgb(217,40,48)" rx="2" ry="2" />
<text  x="1181.27" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (63,926 samples, 0.08%)</title><rect x="26.7" y="181" width="0.9" height="15.0" fill="rgb(236,57,10)" rx="2" ry="2" />
<text  x="29.69" y="191.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineVerify:1414 (78,405,400 samples, 98.69%)</title><rect x="25.5" y="277" width="1164.5" height="15.0" fill="rgb(253,194,19)" rx="2" ry="2" />
<text  x="28.46" y="287.5" >java.security.Signature$Delegate.engineVerify:1414</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Integer.encode:-1 (10,406 samples, 0.01%)</title><rect x="1178.3" y="133" width="0.1" height="15.0" fill="rgb(212,123,42)" rx="2" ry="2" />
<text  x="1181.27" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1 (16,745,089 samples, 21.08%)</title><rect x="116.6" y="165" width="248.7" height="15.0" fill="rgb(252,201,28)" rx="2" ry="2" />
<text  x="119.58" y="175.5" >org.bouncycastle.math.ec.custom.g..</text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.addFieldElement:-1 (204,391 samples, 0.26%)</title><rect x="22.4" y="213" width="3.0" height="15.0" fill="rgb(243,9,50)" rx="2" ry="2" />
<text  x="25.41" y="223.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.verify:51 (78,405,400 samples, 98.69%)</title><rect x="25.5" y="309" width="1164.5" height="15.0" fill="rgb(250,25,44)" rx="2" ry="2" />
<text  x="28.46" y="319.5" >org.sample.SM2Util.verify:51</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readVector:-1 (26,200 samples, 0.03%)</title><rect x="1175.7" y="165" width="0.4" height="15.0" fill="rgb(253,49,39)" rx="2" ry="2" />
<text  x="1178.69" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (12,066 samples, 0.02%)</title><rect x="28.0" y="69" width="0.2" height="15.0" fill="rgb(236,172,41)" rx="2" ry="2" />
<text  x="31.00" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.randomMult:-1 (80,704 samples, 0.10%)</title><rect x="1161.8" y="181" width="1.2" height="15.0" fill="rgb(239,121,45)" rx="2" ry="2" />
<text  x="1164.81" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat.create:-1 (69,140 samples, 0.09%)</title><rect x="1159.5" y="149" width="1.1" height="15.0" fill="rgb(205,78,3)" rx="2" ry="2" />
<text  x="1162.54" y="159.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.verify:49 (205,443 samples, 0.26%)</title><rect x="22.4" y="309" width="3.1" height="15.0" fill="rgb(222,84,5)" rx="2" ry="2" />
<text  x="25.40" y="319.5" ></text>
</g>
<g >
<title>sun.security.provider.AbstractDrbg.engineNextBytes:394 (77,554 samples, 0.10%)</title><rect x="1161.9" y="101" width="1.1" height="15.0" fill="rgb(225,55,21)" rx="2" ry="2" />
<text  x="1164.85" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (22,012 samples, 0.03%)</title><rect x="25.1" y="165" width="0.3" height="15.0" fill="rgb(253,163,29)" rx="2" ry="2" />
<text  x="28.12" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (6,702,188 samples, 8.44%)</title><rect x="152.9" y="149" width="99.5" height="15.0" fill="rgb(247,79,26)" rx="2" ry="2" />
<text  x="155.90" y="159.5" >org.bouncyca..</text>
</g>
<g >
<title>java.math.BigInteger.mod:2699 (11,528 samples, 0.01%)</title><rect x="26.5" y="213" width="0.2" height="15.0" fill="rgb(242,156,51)" rx="2" ry="2" />
<text  x="29.51" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.digests.SHA256Digest.&lt;init&gt;:-1 (815,346 samples, 1.03%)</title><rect x="10.3" y="149" width="12.1" height="15.0" fill="rgb(207,29,32)" rx="2" ry="2" />
<text  x="13.29" y="159.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(227,197,38)" rx="2" ry="2" />
<text  x="13.01" y="511.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>org.sample.SM2Util.verify:47 (834,674 samples, 1.05%)</title><rect x="10.0" y="309" width="12.4" height="15.0" fill="rgb(216,99,34)" rx="2" ry="2" />
<text  x="13.01" y="319.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.random:-1 (80,704 samples, 0.10%)</title><rect x="1161.8" y="165" width="1.2" height="15.0" fill="rgb(228,89,15)" rx="2" ry="2" />
<text  x="1164.81" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.util.BigIntegers.asUnsignedByteArray:-1 (94,606 samples, 0.12%)</title><rect x="24.0" y="181" width="1.4" height="15.0" fill="rgb(232,151,11)" rx="2" ry="2" />
<text  x="27.04" y="191.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (30,528 samples, 0.04%)</title><rect x="23.6" y="149" width="0.4" height="15.0" fill="rgb(232,100,21)" rx="2" ry="2" />
<text  x="26.59" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (23,276 samples, 0.03%)</title><rect x="1175.3" y="197" width="0.3" height="15.0" fill="rgb(232,1,29)" rx="2" ry="2" />
<text  x="1178.27" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (19,528,749 samples, 24.58%)</title><rect x="405.4" y="133" width="290.0" height="15.0" fill="rgb(238,224,34)" rx="2" ry="2" />
<text  x="408.36" y="143.5" >org.bouncycastle.math.ec.custom.gm.SM2..</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve$1.lookupVar:-1 (5,820,169 samples, 7.33%)</title><rect x="30.1" y="165" width="86.5" height="15.0" fill="rgb(248,164,51)" rx="2" ry="2" />
<text  x="33.14" y="175.5" >org.bouncy..</text>
</g>
<g >
<title>java.lang.Thread.run:834 (79,446,181 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(212,202,35)" rx="2" ry="2" />
<text  x="13.01" y="559.5" >java.lang.Thread.run:834</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readObject:-1 (45,590 samples, 0.06%)</title><rect x="1175.7" y="197" width="0.7" height="15.0" fill="rgb(226,194,30)" rx="2" ry="2" />
<text  x="1178.69" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.buildObject:-1 (45,590 samples, 0.06%)</title><rect x="1175.7" y="181" width="0.7" height="15.0" fill="rgb(245,211,25)" rx="2" ry="2" />
<text  x="1178.69" y="191.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:218 (834,672 samples, 1.05%)</title><rect x="10.0" y="277" width="12.4" height="15.0" fill="rgb(205,166,27)" rx="2" ry="2" />
<text  x="13.01" y="287.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (2,208,522 samples, 2.78%)</title><rect x="120.1" y="133" width="32.8" height="15.0" fill="rgb(245,68,3)" rx="2" ry="2" />
<text  x="123.10" y="143.5" >or..</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Object.getEncoded:-1 (54,934 samples, 0.07%)</title><rect x="1177.6" y="197" width="0.8" height="15.0" fill="rgb(219,28,43)" rx="2" ry="2" />
<text  x="1180.61" y="207.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1128 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(214,44,9)" rx="2" ry="2" />
<text  x="13.01" y="527.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1128</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (21,710 samples, 0.03%)</title><rect x="1175.3" y="181" width="0.3" height="15.0" fill="rgb(205,12,2)" rx="2" ry="2" />
<text  x="1178.28" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (7,042 samples, 0.01%)</title><rect x="1161.6" y="181" width="0.1" height="15.0" fill="rgb(206,25,38)" rx="2" ry="2" />
<text  x="1164.63" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.calculateE:-1 (64,448 samples, 0.08%)</title><rect x="26.7" y="213" width="0.9" height="15.0" fill="rgb(230,119,24)" rx="2" ry="2" />
<text  x="29.68" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.DERSequence.encode:-1 (13,020 samples, 0.02%)</title><rect x="1178.2" y="149" width="0.2" height="15.0" fill="rgb(225,170,26)" rx="2" ry="2" />
<text  x="1181.23" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (6,725,242 samples, 8.46%)</title><rect x="993.3" y="117" width="99.9" height="15.0" fill="rgb(217,134,54)" rx="2" ry="2" />
<text  x="996.29" y="127.5" >org.bouncyca..</text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (30,528 samples, 0.04%)</title><rect x="23.6" y="117" width="0.4" height="15.0" fill="rgb(236,2,6)" rx="2" ry="2" />
<text  x="26.59" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECFieldElement.getEncoded:-1 (204,391 samples, 0.26%)</title><rect x="22.4" y="197" width="3.0" height="15.0" fill="rgb(252,40,16)" rx="2" ry="2" />
<text  x="25.41" y="207.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:231 (61,078 samples, 0.08%)</title><rect x="1162.1" y="85" width="0.9" height="15.0" fill="rgb(207,203,16)" rx="2" ry="2" />
<text  x="1165.09" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (776,219 samples, 0.98%)</title><rect x="1178.4" y="165" width="11.6" height="15.0" fill="rgb(217,148,5)" rx="2" ry="2" />
<text  x="1181.44" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve.createRawPoint:-1 (4,142,814 samples, 5.21%)</title><rect x="46.8" y="133" width="61.5" height="15.0" fill="rgb(244,24,6)" rx="2" ry="2" />
<text  x="49.81" y="143.5" >org.bo..</text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:515 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(206,42,31)" rx="2" ry="2" />
<text  x="13.01" y="495.5" >java.util.concurrent.Executors$RunnableAdapter.call:515</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Primitive.encodeTo:-1 (52,320 samples, 0.07%)</title><rect x="1177.6" y="181" width="0.8" height="15.0" fill="rgb(234,135,14)" rx="2" ry="2" />
<text  x="1180.65" y="191.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (392,702 samples, 0.49%)</title><rect x="848.6" y="133" width="5.9" height="15.0" fill="rgb(248,25,50)" rx="2" ry="2" />
<text  x="851.63" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1EncodableVector.&lt;init&gt;:-1 (19,388 samples, 0.02%)</title><rect x="1177.3" y="197" width="0.3" height="15.0" fill="rgb(220,177,37)" rx="2" ry="2" />
<text  x="1180.32" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (6,702,188 samples, 8.44%)</title><rect x="152.9" y="133" width="99.5" height="15.0" fill="rgb(253,93,51)" rx="2" ry="2" />
<text  x="155.90" y="143.5" >org.bouncyca..</text>
</g>
<g >
<title>java.security.Signature.verify:788 (78,405,400 samples, 98.69%)</title><rect x="25.5" y="293" width="1164.5" height="15.0" fill="rgb(212,44,40)" rx="2" ry="2" />
<text  x="28.46" y="303.5" >java.security.Signature.verify:788</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Integer.&lt;init&gt;:-1 (776,219 samples, 0.98%)</title><rect x="1178.4" y="181" width="11.6" height="15.0" fill="rgb(221,208,29)" rx="2" ry="2" />
<text  x="1181.44" y="191.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3434 (824,340 samples, 1.04%)</title><rect x="1147.3" y="133" width="12.2" height="15.0" fill="rgb(210,92,34)" rx="2" ry="2" />
<text  x="1150.30" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.init:-1 (205,443 samples, 0.26%)</title><rect x="22.4" y="245" width="3.1" height="15.0" fill="rgb(231,159,41)" rx="2" ry="2" />
<text  x="25.40" y="255.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (21,710 samples, 0.03%)</title><rect x="1175.3" y="165" width="0.3" height="15.0" fill="rgb(228,73,7)" rx="2" ry="2" />
<text  x="1178.28" y="175.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024B_jmhTest.sm2p256v1_1024B_thrpt_jmhStub:119 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(242,103,44)" rx="2" ry="2" />
<text  x="13.01" y="351.5" >org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024B_jmhTest.sm2p256v1_1024B_thrpt_jmhStub:119</text>
</g>
<g >
<title>jdk.internal.reflect.GeneratedConstructorAccessor1.newInstance:-1 (833,622 samples, 1.05%)</title><rect x="10.0" y="181" width="12.4" height="15.0" fill="rgb(240,142,16)" rx="2" ry="2" />
<text  x="13.02" y="191.5" ></text>
</g>
<g >
<title>sun.security.provider.DRBG.engineNextBytes:233 (77,554 samples, 0.10%)</title><rect x="1161.9" y="133" width="1.1" height="15.0" fill="rgb(248,181,24)" rx="2" ry="2" />
<text  x="1164.85" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1 (77,440,387 samples, 97.47%)</title><rect x="25.5" y="229" width="1150.1" height="15.0" fill="rgb(222,52,40)" rx="2" ry="2" />
<text  x="28.46" y="239.5" >org.bouncycastle.crypto.signers.SM2Signer.verifySignature:-1</text>
</g>
<g >
<title>java.lang.reflect.Constructor.newInstance:490 (833,622 samples, 1.05%)</title><rect x="10.0" y="213" width="12.4" height="15.0" fill="rgb(231,66,9)" rx="2" ry="2" />
<text  x="13.02" y="223.5" ></text>
</g>
<g >
<title>sun.security.provider.AbstractDrbg.engineNextBytes:334 (77,554 samples, 0.10%)</title><rect x="1161.9" y="117" width="1.1" height="15.0" fill="rgb(251,21,39)" rx="2" ry="2" />
<text  x="1164.85" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECCurve.precompute:-1 (167,706 samples, 0.21%)</title><rect x="27.7" y="149" width="2.4" height="15.0" fill="rgb(214,88,54)" rx="2" ry="2" />
<text  x="30.65" y="159.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(205,147,5)" rx="2" ry="2" />
<text  x="13.01" y="447.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:224 (16,242 samples, 0.02%)</title><rect x="1161.9" y="85" width="0.2" height="15.0" fill="rgb(205,186,44)" rx="2" ry="2" />
<text  x="1164.85" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi.engineInitVerify:-1 (205,443 samples, 0.26%)</title><rect x="22.4" y="261" width="3.1" height="15.0" fill="rgb(239,76,17)" rx="2" ry="2" />
<text  x="25.40" y="271.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance:45 (833,622 samples, 1.05%)</title><rect x="10.0" y="197" width="12.4" height="15.0" fill="rgb(230,102,54)" rx="2" ry="2" />
<text  x="13.02" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1OutputStream.create:-1 (39,300 samples, 0.05%)</title><rect x="1177.6" y="165" width="0.6" height="15.0" fill="rgb(236,42,16)" rx="2" ry="2" />
<text  x="1180.65" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Mod.checkedModOddInverse:-1 (822,315 samples, 1.04%)</title><rect x="1163.0" y="165" width="12.3" height="15.0" fill="rgb(237,80,34)" rx="2" ry="2" />
<text  x="1166.04" y="175.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRight:3375 (858,300 samples, 1.08%)</title><rect x="1146.8" y="149" width="12.7" height="15.0" fill="rgb(243,33,38)" rx="2" ry="2" />
<text  x="1149.79" y="159.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.StandardDSAEncoding.encode:-1 (851,585 samples, 1.07%)</title><rect x="1177.3" y="213" width="12.7" height="15.0" fill="rgb(243,87,0)" rx="2" ry="2" />
<text  x="1180.32" y="223.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.createScaledPoint:-1 (70,734 samples, 0.09%)</title><rect x="1160.6" y="181" width="1.0" height="15.0" fill="rgb(241,2,6)" rx="2" ry="2" />
<text  x="1163.58" y="191.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (63,926 samples, 0.08%)</title><rect x="26.7" y="197" width="0.9" height="15.0" fill="rgb(209,144,16)" rx="2" ry="2" />
<text  x="29.69" y="207.5" ></text>
</g>
<g >
<title>java.security.SecureRandom.nextBytes:751 (77,554 samples, 0.10%)</title><rect x="1161.9" y="149" width="1.1" height="15.0" fill="rgb(249,31,32)" rx="2" ry="2" />
<text  x="1164.85" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainder:2343 (11,528 samples, 0.01%)</title><rect x="26.5" y="197" width="0.2" height="15.0" fill="rgb(231,218,29)" rx="2" ry="2" />
<text  x="29.51" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.add:-1 (20,958 samples, 0.03%)</title><rect x="27.7" y="101" width="0.3" height="15.0" fill="rgb(209,130,53)" rx="2" ry="2" />
<text  x="30.68" y="111.5" ></text>
</g>
<g >
<title>java.security.Signature.initVerify:506 (205,443 samples, 0.26%)</title><rect x="22.4" y="293" width="3.1" height="15.0" fill="rgb(221,135,26)" rx="2" ry="2" />
<text  x="25.40" y="303.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.implIsValid:-1 (168,750 samples, 0.21%)</title><rect x="27.6" y="165" width="2.5" height="15.0" fill="rgb(206,6,44)" rx="2" ry="2" />
<text  x="30.63" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (78,374 samples, 0.10%)</title><rect x="28.0" y="101" width="1.2" height="15.0" fill="rgb(219,164,44)" rx="2" ry="2" />
<text  x="30.99" y="111.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Curve.randomFieldElementMult:-1 (82,274 samples, 0.10%)</title><rect x="1161.8" y="197" width="1.2" height="15.0" fill="rgb(244,9,10)" rx="2" ry="2" />
<text  x="1164.81" y="207.5" ></text>
</g>
<g >
<title>all (79,448,275 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(252,202,17)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:236 (834,672 samples, 1.05%)</title><rect x="10.0" y="261" width="12.4" height="15.0" fill="rgb(205,82,6)" rx="2" ry="2" />
<text  x="13.01" y="271.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.readObject:-1 (7,858 samples, 0.01%)</title><rect x="1176.0" y="133" width="0.1" height="15.0" fill="rgb(218,34,2)" rx="2" ry="2" />
<text  x="1178.96" y="143.5" ></text>
</g>
<g >
<title>org.bouncycastle.crypto.signers.SM2Signer.getZ:-1 (204,913 samples, 0.26%)</title><rect x="22.4" y="229" width="3.0" height="15.0" fill="rgb(236,229,19)" rx="2" ry="2" />
<text  x="25.40" y="239.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECPoint.normalize:-1 (82,492 samples, 0.10%)</title><rect x="1160.6" y="197" width="1.2" height="15.0" fill="rgb(226,54,2)" rx="2" ry="2" />
<text  x="1163.58" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1Integer.getValue:-1 (63,928 samples, 0.08%)</title><rect x="1176.4" y="197" width="0.9" height="15.0" fill="rgb(245,175,50)" rx="2" ry="2" />
<text  x="1179.37" y="207.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (59,410 samples, 0.07%)</title><rect x="29.2" y="69" width="0.8" height="15.0" fill="rgb(253,163,30)" rx="2" ry="2" />
<text  x="32.16" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3793 (33,960 samples, 0.04%)</title><rect x="1146.8" y="117" width="0.5" height="15.0" fill="rgb(230,16,24)" rx="2" ry="2" />
<text  x="1149.79" y="127.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1FieldElement.multiply:-1 (69,682 samples, 0.09%)</title><rect x="1160.6" y="165" width="1.0" height="15.0" fill="rgb(221,226,5)" rx="2" ry="2" />
<text  x="1163.60" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1 (32,935,474 samples, 41.46%)</title><rect x="365.3" y="149" width="489.2" height="15.0" fill="rgb(212,142,45)" rx="2" ry="2" />
<text  x="368.29" y="159.5" >org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.add:-1</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (59,410 samples, 0.07%)</title><rect x="29.2" y="85" width="0.8" height="15.0" fill="rgb(216,155,4)" rx="2" ry="2" />
<text  x="32.16" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat.fromBigInteger:-1 (927,440 samples, 1.17%)</title><rect x="1146.8" y="165" width="13.8" height="15.0" fill="rgb(250,182,25)" rx="2" ry="2" />
<text  x="1149.79" y="175.5" ></text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1176 (60,554 samples, 0.08%)</title><rect x="1162.1" y="69" width="0.9" height="15.0" fill="rgb(244,152,41)" rx="2" ry="2" />
<text  x="1165.10" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implCheckResult:-1 (168,750 samples, 0.21%)</title><rect x="27.6" y="197" width="2.5" height="15.0" fill="rgb(234,45,28)" rx="2" ry="2" />
<text  x="30.63" y="207.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.ensureCapacity:95 (10,406 samples, 0.01%)</title><rect x="1178.3" y="69" width="0.1" height="15.0" fill="rgb(207,213,44)" rx="2" ry="2" />
<text  x="1181.27" y="79.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (12,066 samples, 0.02%)</title><rect x="28.0" y="85" width="0.2" height="15.0" fill="rgb(252,16,24)" rx="2" ry="2" />
<text  x="31.00" y="95.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.multiply:-1 (7,864,602 samples, 9.90%)</title><rect x="876.5" y="133" width="116.8" height="15.0" fill="rgb(249,200,20)" rx="2" ry="2" />
<text  x="879.48" y="143.5" >org.bouncycast..</text>
</g>
<g >
<title>org.bouncycastle.jcajce.provider.asymmetric.ec.GMSignatureSpi$sha256WithSM2.&lt;init&gt;:-1 (824,746 samples, 1.04%)</title><rect x="10.2" y="165" width="12.2" height="15.0" fill="rgb(241,68,12)" rx="2" ry="2" />
<text  x="13.16" y="175.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickFixedPoint:-1 (76,110,394 samples, 95.80%)</title><rect x="30.1" y="181" width="1130.5" height="15.0" fill="rgb(249,97,48)" rx="2" ry="2" />
<text  x="33.14" y="191.5" >org.bouncycastle.math.ec.ECAlgorithms.implShamirsTrickFixedPoint:-1</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (6,866 samples, 0.01%)</title><rect x="30.0" y="85" width="0.1" height="15.0" fill="rgb(214,1,0)" rx="2" ry="2" />
<text  x="33.04" y="95.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(253,168,34)" rx="2" ry="2" />
<text  x="13.01" y="463.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Point.twice:-1 (19,682,222 samples, 24.77%)</title><rect x="854.5" y="149" width="292.3" height="15.0" fill="rgb(220,209,0)" rx="2" ry="2" />
<text  x="857.46" y="159.5" >org.bouncycastle.math.ec.custom.gm.SM2P..</text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.create:-1 (20,958 samples, 0.03%)</title><rect x="27.7" y="85" width="0.3" height="15.0" fill="rgb(249,127,44)" rx="2" ry="2" />
<text  x="30.68" y="95.5" ></text>
</g>
<g >
<title>org.sample.BenchmarkVerifying.sm2p256v1_1024B:57 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(237,222,22)" rx="2" ry="2" />
<text  x="13.01" y="335.5" >org.sample.BenchmarkVerifying.sm2p256v1_1024B:57</text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.write:156 (10,406 samples, 0.01%)</title><rect x="1178.3" y="85" width="0.1" height="15.0" fill="rgb(206,182,39)" rx="2" ry="2" />
<text  x="1181.27" y="95.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (10,406 samples, 0.01%)</title><rect x="1178.3" y="37" width="0.1" height="15.0" fill="rgb(237,113,1)" rx="2" ry="2" />
<text  x="1181.27" y="47.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024B_jmhTest.sm2p256v1_1024B_Throughput:83 (79,445,517 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(242,193,5)" rx="2" ry="2" />
<text  x="13.01" y="367.5" >org.sample.jmh_generated.BenchmarkVerifying_sm2p256v1_1024B_jmhTest.sm2p256v1_1024B_Throughput:83</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1192 (60,554 samples, 0.08%)</title><rect x="1162.1" y="53" width="0.9" height="15.0" fill="rgb(227,59,43)" rx="2" ry="2" />
<text  x="1165.10" y="63.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.ec.custom.gm.SM2P256V1Field.square:-1 (6,725,242 samples, 8.46%)</title><rect x="993.3" y="133" width="99.9" height="15.0" fill="rgb(213,107,29)" rx="2" ry="2" />
<text  x="996.29" y="143.5" >org.bouncyca..</text>
</g>
<g >
<title>org.bouncycastle.asn1.ASN1InputStream.buildObject:-1 (7,858 samples, 0.01%)</title><rect x="1176.0" y="117" width="0.1" height="15.0" fill="rgb(232,21,17)" rx="2" ry="2" />
<text  x="1178.96" y="127.5" ></text>
</g>
<g >
<title>java.security.Signature.getInstance:450 (834,672 samples, 1.05%)</title><rect x="10.0" y="293" width="12.4" height="15.0" fill="rgb(218,200,25)" rx="2" ry="2" />
<text  x="13.01" y="303.5" ></text>
</g>
<g >
<title>org.bouncycastle.math.raw.Nat256.createExt:-1 (4,534,721 samples, 5.71%)</title><rect x="695.4" y="117" width="67.4" height="15.0" fill="rgb(219,165,41)" rx="2" ry="2" />
<text  x="698.41" y="127.5" >org.bou..</text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (63,926 samples, 0.08%)</title><rect x="26.7" y="165" width="0.9" height="15.0" fill="rgb(236,24,38)" rx="2" ry="2" />
<text  x="29.69" y="175.5" ></text>
</g>
</g>
</svg>
