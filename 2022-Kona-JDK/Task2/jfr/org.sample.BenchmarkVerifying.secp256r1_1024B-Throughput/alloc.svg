<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >alloc secp256r1_1024B-Throughput</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>java.lang.Throwable.fillInStackTrace:787 (524 samples, 1.25%)</title><rect x="1145.7" y="421" width="14.8" height="15.0" fill="rgb(243,198,46)" rx="2" ry="2" />
<text  x="1148.75" y="431.5" ></text>
</g>
<g >
<title>java.lang.IllegalArgumentException.&lt;init&gt;:52 (524 samples, 1.25%)</title><rect x="1145.7" y="485" width="14.8" height="15.0" fill="rgb(221,13,19)" rx="2" ry="2" />
<text  x="1148.75" y="495.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.trimZeroes:83 (524 samples, 1.25%)</title><rect x="932.7" y="261" width="14.7" height="15.0" fill="rgb(254,17,17)" rx="2" ry="2" />
<text  x="935.66" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.&lt;init&gt;:106 (11,008 samples, 26.26%)</title><rect x="10.1" y="245" width="309.8" height="15.0" fill="rgb(215,184,33)" rx="2" ry="2" />
<text  x="13.06" y="255.5" >sun.security.ec.ECDSASignature.&lt;init&gt;:106</text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:153 (526 samples, 1.25%)</title><rect x="24.8" y="133" width="14.8" height="15.0" fill="rgb(213,132,26)" rx="2" ry="2" />
<text  x="27.81" y="143.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineVerify:1414 (27,513 samples, 65.63%)</title><rect x="364.4" y="309" width="774.5" height="15.0" fill="rgb(235,0,36)" rx="2" ry="2" />
<text  x="367.40" y="319.5" >java.security.Signature$Delegate.engineVerify:1414</text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeECParameterSpec:141 (3,666 samples, 8.75%)</title><rect x="364.4" y="277" width="103.2" height="15.0" fill="rgb(251,118,6)" rx="2" ry="2" />
<text  x="367.40" y="287.5" >sun.security..</text>
</g>
<g >
<title>java.security.Signature.verify:788 (27,513 samples, 65.63%)</title><rect x="364.4" y="325" width="774.5" height="15.0" fill="rgb(228,214,21)" rx="2" ry="2" />
<text  x="367.40" y="335.5" >java.security.Signature.verify:788</text>
</g>
<g >
<title>java.lang.reflect.ReflectAccess.copyConstructor:155 (524 samples, 1.25%)</title><rect x="24.9" y="85" width="14.7" height="15.0" fill="rgb(234,182,11)" rx="2" ry="2" />
<text  x="27.86" y="95.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.ReflectionFactory.copyConstructor:388 (524 samples, 1.25%)</title><rect x="24.9" y="101" width="14.7" height="15.0" fill="rgb(223,38,32)" rx="2" ry="2" />
<text  x="27.86" y="111.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.engineVerify:486 (3,668 samples, 8.75%)</title><rect x="364.4" y="293" width="103.3" height="15.0" fill="rgb(214,87,23)" rx="2" ry="2" />
<text  x="367.40" y="303.5" >sun.security..</text>
</g>
<g >
<title>sun.security.provider.SHA2$SHA256.&lt;init&gt;:288 (8,908 samples, 21.25%)</title><rect x="54.3" y="69" width="250.8" height="15.0" fill="rgb(240,193,26)" rx="2" ry="2" />
<text  x="57.31" y="79.5" >sun.security.provider.SHA2$SHA256..</text>
</g>
<g >
<title>sun.security.ec.SunEC$ProviderService.newInstance:108 (11,008 samples, 26.26%)</title><rect x="10.1" y="277" width="309.8" height="15.0" fill="rgb(242,141,54)" rx="2" ry="2" />
<text  x="13.06" y="287.5" >sun.security.ec.SunEC$ProviderService.new..</text>
</g>
<g >
<title>java.lang.reflect.Constructor.newInstance:490 (9,430 samples, 22.50%)</title><rect x="39.6" y="117" width="265.5" height="15.0" fill="rgb(239,17,54)" rx="2" ry="2" />
<text  x="42.61" y="127.5" >java.lang.reflect.Constructor.newIn..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:281 (526 samples, 1.25%)</title><rect x="1160.5" y="501" width="14.8" height="15.0" fill="rgb(250,69,31)" rx="2" ry="2" />
<text  x="1163.50" y="511.5" ></text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:566 (40,101 samples, 95.66%)</title><rect x="10.1" y="453" width="1128.8" height="15.0" fill="rgb(253,166,38)" rx="2" ry="2" />
<text  x="13.06" y="463.5" >java.lang.reflect.Method.invoke:566</text>
</g>
<g >
<title>sun.security.util.DerInputStream.readVector:438 (5,228 samples, 12.47%)</title><rect x="696.6" y="245" width="147.2" height="15.0" fill="rgb(249,209,35)" rx="2" ry="2" />
<text  x="699.60" y="255.5" >sun.security.util...</text>
</g>
<g >
<title>sun.security.util.DerInputBuffer.getBigInteger:155 (1,584 samples, 3.78%)</title><rect x="843.8" y="245" width="44.5" height="15.0" fill="rgb(219,143,5)" rx="2" ry="2" />
<text  x="846.76" y="255.5" >sun...</text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1:386 (244 samples, 0.58%)</title><rect x="1138.9" y="549" width="6.8" height="15.0" fill="rgb(225,107,20)" rx="2" ry="2" />
<text  x="1141.88" y="559.5" ></text>
</g>
<g >
<title>java.util.Vector.&lt;init&gt;:155 (522 samples, 1.25%)</title><rect x="622.9" y="229" width="14.7" height="15.0" fill="rgb(254,144,26)" rx="2" ry="2" />
<text  x="625.90" y="239.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.decodeSignature:283 (524 samples, 1.25%)</title><rect x="932.7" y="277" width="14.7" height="15.0" fill="rgb(207,138,15)" rx="2" ry="2" />
<text  x="935.66" y="287.5" ></text>
</g>
<g >
<title>java.security.Security.getImpl:700 (11,006 samples, 26.26%)</title><rect x="10.1" y="197" width="309.8" height="15.0" fill="rgb(238,32,50)" rx="2" ry="2" />
<text  x="13.06" y="207.5" >java.security.Security.getImpl:700</text>
</g>
<g >
<title>java.util.Vector.&lt;init&gt;:142 (522 samples, 1.25%)</title><rect x="622.9" y="213" width="14.7" height="15.0" fill="rgb(207,190,53)" rx="2" ry="2" />
<text  x="625.90" y="223.5" ></text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (522 samples, 1.25%)</title><rect x="903.3" y="197" width="14.7" height="15.0" fill="rgb(209,156,38)" rx="2" ry="2" />
<text  x="906.27" y="207.5" ></text>
</g>
<g >
<title>java.security.Signature.getInstance:404 (12,588 samples, 30.03%)</title><rect x="10.1" y="325" width="354.3" height="15.0" fill="rgb(254,163,3)" rx="2" ry="2" />
<text  x="13.06" y="335.5" >java.security.Signature.getInstance:404</text>
</g>
<g >
<title>java.security.AlgorithmParameters.getInstance:158 (3,666 samples, 8.75%)</title><rect x="364.4" y="245" width="103.2" height="15.0" fill="rgb(230,69,38)" rx="2" ry="2" />
<text  x="367.40" y="255.5" >java.securit..</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:206 (12,588 samples, 30.03%)</title><rect x="10.1" y="309" width="354.3" height="15.0" fill="rgb(233,58,24)" rx="2" ry="2" />
<text  x="13.06" y="319.5" >sun.security.jca.GetInstance.getInstance:206</text>
</g>
<g >
<title>sun.security.provider.SHA2.&lt;init&gt;:85 (2,612 samples, 6.23%)</title><rect x="157.6" y="53" width="73.5" height="15.0" fill="rgb(227,216,53)" rx="2" ry="2" />
<text  x="160.56" y="63.5" >sun.secu..</text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.doPeriodic:183 (244 samples, 0.58%)</title><rect x="1138.9" y="517" width="6.8" height="15.0" fill="rgb(205,170,42)" rx="2" ry="2" />
<text  x="1141.88" y="527.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:4030 (524 samples, 1.25%)</title><rect x="932.7" y="245" width="14.7" height="15.0" fill="rgb(228,82,9)" rx="2" ry="2" />
<text  x="935.66" y="255.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.dcmd.DCmdStop.execute:65 (524 samples, 1.25%)</title><rect x="1145.7" y="581" width="14.8" height="15.0" fill="rgb(245,24,7)" rx="2" ry="2" />
<text  x="1148.75" y="591.5" ></text>
</g>
<g >
<title>all (41,919 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(246,173,51)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>java.security.Provider$ServiceKey.hashCode:1107 (6 samples, 0.01%)</title><rect x="364.2" y="245" width="0.2" height="15.0" fill="rgb(215,35,35)" rx="2" ry="2" />
<text  x="367.23" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.DerInputStream.getSequence:334 (7,846 samples, 18.72%)</title><rect x="622.9" y="261" width="220.9" height="15.0" fill="rgb(247,130,20)" rx="2" ry="2" />
<text  x="625.90" y="271.5" >sun.security.util.DerInputStr..</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (522 samples, 1.25%)</title><rect x="903.3" y="213" width="14.7" height="15.0" fill="rgb(220,88,48)" rx="2" ry="2" />
<text  x="906.27" y="223.5" ></text>
</g>
<g >
<title>sun.security.provider.SHA2.&lt;init&gt;:83 (3,668 samples, 8.75%)</title><rect x="54.3" y="53" width="103.3" height="15.0" fill="rgb(246,170,31)" rx="2" ry="2" />
<text  x="57.31" y="63.5" >sun.security..</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:164 (10,482 samples, 25.01%)</title><rect x="24.8" y="181" width="295.1" height="15.0" fill="rgb(225,130,28)" rx="2" ry="2" />
<text  x="27.81" y="191.5" >sun.security.jca.GetInstance.getInstanc..</text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1128 (40,101 samples, 95.66%)</title><rect x="10.1" y="549" width="1128.8" height="15.0" fill="rgb(248,134,37)" rx="2" ry="2" />
<text  x="13.06" y="559.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1128</text>
</g>
<g >
<title>java.lang.Throwable.fillInStackTrace:-1 (524 samples, 1.25%)</title><rect x="1145.7" y="405" width="14.8" height="15.0" fill="rgb(207,130,27)" rx="2" ry="2" />
<text  x="1148.75" y="415.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.getPositiveBigInteger:558 (1,584 samples, 3.78%)</title><rect x="843.8" y="261" width="44.5" height="15.0" fill="rgb(225,149,22)" rx="2" ry="2" />
<text  x="846.76" y="271.5" >sun...</text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:230 (244 samples, 0.58%)</title><rect x="1138.9" y="501" width="6.8" height="15.0" fill="rgb(223,33,3)" rx="2" ry="2" />
<text  x="1141.88" y="511.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (40,101 samples, 95.66%)</title><rect x="10.1" y="469" width="1128.8" height="15.0" fill="rgb(232,172,48)" rx="2" ry="2" />
<text  x="13.06" y="479.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (40,101 samples, 95.66%)</title><rect x="10.1" y="533" width="1128.8" height="15.0" fill="rgb(218,155,50)" rx="2" ry="2" />
<text  x="13.06" y="543.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (522 samples, 1.25%)</title><rect x="903.3" y="229" width="14.7" height="15.0" fill="rgb(244,197,11)" rx="2" ry="2" />
<text  x="906.27" y="239.5" ></text>
</g>
<g >
<title>sun.security.ec.ECPublicKeyImpl.getEncodedPublicValue:93 (5,515 samples, 13.16%)</title><rect x="467.7" y="277" width="155.2" height="15.0" fill="rgb(244,115,1)" rx="2" ry="2" />
<text  x="470.66" y="287.5" >sun.security.ec.ECP..</text>
</g>
<g >
<title>org.sample.BenchmarkVerifying.secp256r1_1024B:77 (40,101 samples, 95.66%)</title><rect x="10.1" y="357" width="1128.8" height="15.0" fill="rgb(206,118,16)" rx="2" ry="2" />
<text  x="13.06" y="367.5" >org.sample.BenchmarkVerifying.secp256r1_1024B:77</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:236 (11,008 samples, 26.26%)</title><rect x="10.1" y="293" width="309.8" height="15.0" fill="rgb(224,150,18)" rx="2" ry="2" />
<text  x="13.06" y="303.5" >sun.security.jca.GetInstance.getInstance:..</text>
</g>
<g >
<title>sun.security.util.DerInputStream.readVector:423 (522 samples, 1.25%)</title><rect x="622.9" y="245" width="14.7" height="15.0" fill="rgb(212,184,38)" rx="2" ry="2" />
<text  x="625.90" y="255.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:311 (524 samples, 1.25%)</title><rect x="1160.5" y="485" width="14.7" height="15.0" fill="rgb(227,148,22)" rx="2" ry="2" />
<text  x="1163.50" y="495.5" ></text>
</g>
<g >
<title>sun.security.provider.SHA2.&lt;init&gt;:86 (2,628 samples, 6.27%)</title><rect x="231.1" y="53" width="74.0" height="15.0" fill="rgb(237,29,11)" rx="2" ry="2" />
<text  x="234.09" y="63.5" >sun.secu..</text>
</g>
<g >
<title>sun.security.util.ECUtil.decodeSignature:270 (7,846 samples, 18.72%)</title><rect x="622.9" y="277" width="220.9" height="15.0" fill="rgb(209,77,16)" rx="2" ry="2" />
<text  x="625.90" y="287.5" >sun.security.util.ECUtil.deco..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:233 (526 samples, 1.25%)</title><rect x="1160.5" y="517" width="14.8" height="15.0" fill="rgb(217,168,22)" rx="2" ry="2" />
<text  x="1163.50" y="527.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:157 (3,666 samples, 8.75%)</title><rect x="364.4" y="213" width="103.2" height="15.0" fill="rgb(220,152,43)" rx="2" ry="2" />
<text  x="367.40" y="223.5" >sun.security..</text>
</g>
<g >
<title>sun.security.util.ECUtil.decodeSignature:278 (1,584 samples, 3.78%)</title><rect x="843.8" y="277" width="44.5" height="15.0" fill="rgb(218,84,50)" rx="2" ry="2" />
<text  x="846.76" y="287.5" >sun...</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:157 (524 samples, 1.25%)</title><rect x="10.1" y="181" width="14.7" height="15.0" fill="rgb(236,15,35)" rx="2" ry="2" />
<text  x="13.06" y="191.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.&lt;init&gt;:331 (2,094 samples, 5.00%)</title><rect x="637.6" y="229" width="59.0" height="15.0" fill="rgb(219,57,52)" rx="2" ry="2" />
<text  x="640.65" y="239.5" >sun.se..</text>
</g>
<g >
<title>java.lang.Exception.&lt;init&gt;:66 (524 samples, 1.25%)</title><rect x="1145.7" y="453" width="14.8" height="15.0" fill="rgb(239,23,54)" rx="2" ry="2" />
<text  x="1148.75" y="463.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.GeneratedConstructorAccessor1.newInstance:-1 (9,430 samples, 22.50%)</title><rect x="39.6" y="85" width="265.5" height="15.0" fill="rgb(240,47,8)" rx="2" ry="2" />
<text  x="42.61" y="95.5" >jdk.internal.reflect.GeneratedConst..</text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder$$Lambda$89.1973932916.run:-1 (244 samples, 0.58%)</title><rect x="1138.9" y="565" width="6.8" height="15.0" fill="rgb(237,31,54)" rx="2" ry="2" />
<text  x="1141.88" y="575.5" ></text>
</g>
<g >
<title>java.security.Provider$Service.newInstance:1915 (9,956 samples, 23.75%)</title><rect x="24.8" y="149" width="280.3" height="15.0" fill="rgb(247,163,4)" rx="2" ry="2" />
<text  x="27.81" y="159.5" >java.security.Provider$Service.newIns..</text>
</g>
<g >
<title>org.sample.DigitalSignature.verify:39 (27,513 samples, 65.63%)</title><rect x="364.4" y="341" width="774.5" height="15.0" fill="rgb(228,123,10)" rx="2" ry="2" />
<text  x="367.40" y="351.5" >org.sample.DigitalSignature.verify:39</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (40,101 samples, 95.66%)</title><rect x="10.1" y="501" width="1128.8" height="15.0" fill="rgb(251,182,21)" rx="2" ry="2" />
<text  x="13.06" y="511.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.get:936 (6 samples, 0.01%)</title><rect x="364.2" y="261" width="0.2" height="15.0" fill="rgb(249,73,33)" rx="2" ry="2" />
<text  x="367.23" y="271.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.instrument.JDKEvents.emitExceptionStatistics:133 (244 samples, 0.58%)</title><rect x="1138.9" y="453" width="6.8" height="15.0" fill="rgb(229,79,5)" rx="2" ry="2" />
<text  x="1141.88" y="463.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getService:85 (1,580 samples, 3.77%)</title><rect x="319.9" y="293" width="44.5" height="15.0" fill="rgb(214,155,42)" rx="2" ry="2" />
<text  x="322.93" y="303.5" >sun...</text>
</g>
<g >
<title>java.security.Provider$ServiceKey.&lt;init&gt;:1103 (1,574 samples, 3.75%)</title><rect x="319.9" y="261" width="44.3" height="15.0" fill="rgb(217,7,27)" rx="2" ry="2" />
<text  x="322.93" y="271.5" >java..</text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkVerifying_secp256r1_1024B_jmhTest.secp256r1_1024B_thrpt_jmhStub:119 (40,101 samples, 95.66%)</title><rect x="10.1" y="373" width="1128.8" height="15.0" fill="rgb(248,44,25)" rx="2" ry="2" />
<text  x="13.06" y="383.5" >org.sample.jmh_generated.BenchmarkVerifying_secp256r1_1024B_jmhTest.secp256r1_1024B_thrpt_jmhStub:119</text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkVerifying_secp256r1_1024B_jmhTest.secp256r1_1024B_Throughput:83 (40,101 samples, 95.66%)</title><rect x="10.1" y="389" width="1128.8" height="15.0" fill="rgb(207,118,43)" rx="2" ry="2" />
<text  x="13.06" y="399.5" >org.sample.jmh_generated.BenchmarkVerifying_secp256r1_1024B_jmhTest.secp256r1_1024B_Throughput:83</text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedRunner.run:72 (526 samples, 1.25%)</title><rect x="1160.5" y="565" width="14.8" height="15.0" fill="rgb(244,83,45)" rx="2" ry="2" />
<text  x="1163.50" y="575.5" ></text>
</g>
<g >
<title>sun.security.util.DerInputBuffer.getBigInteger:166 (522 samples, 1.25%)</title><rect x="903.3" y="245" width="14.7" height="15.0" fill="rgb(239,86,17)" rx="2" ry="2" />
<text  x="906.27" y="255.5" ></text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.get:936 (3,666 samples, 8.75%)</title><rect x="364.4" y="165" width="103.2" height="15.0" fill="rgb(222,65,23)" rx="2" ry="2" />
<text  x="367.40" y="175.5" >java.util.co..</text>
</g>
<g >
<title>sun.security.util.DerInputBuffer.getBigInteger:155 (530 samples, 1.26%)</title><rect x="888.3" y="245" width="15.0" height="15.0" fill="rgb(246,187,40)" rx="2" ry="2" />
<text  x="891.35" y="255.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (40,101 samples, 95.66%)</title><rect x="10.1" y="485" width="1128.8" height="15.0" fill="rgb(229,142,36)" rx="2" ry="2" />
<text  x="13.06" y="495.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>sun.security.util.ECUtil.decodeSignature:282 (522 samples, 1.25%)</title><rect x="918.0" y="277" width="14.7" height="15.0" fill="rgb(228,34,2)" rx="2" ry="2" />
<text  x="920.96" y="287.5" ></text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:515 (40,101 samples, 95.66%)</title><rect x="10.1" y="517" width="1128.8" height="15.0" fill="rgb(207,186,1)" rx="2" ry="2" />
<text  x="13.06" y="527.5" >java.util.concurrent.Executors$RunnableAdapter.call:515</text>
</g>
<g >
<title>sun.security.util.IOUtils.readExactlyNBytes:59 (1,046 samples, 2.50%)</title><rect x="637.6" y="197" width="29.5" height="15.0" fill="rgb(252,129,40)" rx="2" ry="2" />
<text  x="640.65" y="207.5" >su..</text>
</g>
<g >
<title>java.lang.String.toUpperCase:2584 (1,574 samples, 3.75%)</title><rect x="319.9" y="245" width="44.3" height="15.0" fill="rgb(218,21,9)" rx="2" ry="2" />
<text  x="322.93" y="255.5" >java..</text>
</g>
<g >
<title>org.openjdk.jmh.util.InputStreamDrainer.run:77 (522 samples, 1.25%)</title><rect x="1175.3" y="581" width="14.7" height="15.0" fill="rgb(213,23,20)" rx="2" ry="2" />
<text  x="1178.31" y="591.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.decodeSignature:279 (1,052 samples, 2.51%)</title><rect x="888.3" y="277" width="29.7" height="15.0" fill="rgb(242,93,28)" rx="2" ry="2" />
<text  x="891.35" y="287.5" >su..</text>
</g>
<g >
<title>jdk.jfr.internal.dcmd.AbstractDCmd.findRecording:94 (524 samples, 1.25%)</title><rect x="1145.7" y="565" width="14.8" height="15.0" fill="rgb(254,119,17)" rx="2" ry="2" />
<text  x="1148.75" y="575.5" ></text>
</g>
<g >
<title>java.lang.RuntimeException.&lt;init&gt;:62 (524 samples, 1.25%)</title><rect x="1145.7" y="469" width="14.8" height="15.0" fill="rgb(229,140,18)" rx="2" ry="2" />
<text  x="1148.75" y="479.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:439 (244 samples, 0.58%)</title><rect x="1138.9" y="533" width="6.8" height="15.0" fill="rgb(218,2,18)" rx="2" ry="2" />
<text  x="1141.88" y="543.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1 (40,101 samples, 95.66%)</title><rect x="10.1" y="405" width="1128.8" height="15.0" fill="rgb(214,42,19)" rx="2" ry="2" />
<text  x="13.06" y="415.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1</text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedMain.main:86 (526 samples, 1.25%)</title><rect x="1160.5" y="581" width="14.8" height="15.0" fill="rgb(232,145,12)" rx="2" ry="2" />
<text  x="1163.50" y="591.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.decodeSignature:286 (6,802 samples, 16.23%)</title><rect x="947.4" y="277" width="191.5" height="15.0" fill="rgb(248,112,18)" rx="2" ry="2" />
<text  x="950.41" y="287.5" >sun.security.util.ECUtil...</text>
</g>
<g >
<title>java.io.InputStream.readNBytes:392 (1,046 samples, 2.50%)</title><rect x="637.6" y="181" width="29.5" height="15.0" fill="rgb(229,227,9)" rx="2" ry="2" />
<text  x="640.65" y="191.5" >ja..</text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:628 (40,101 samples, 95.66%)</title><rect x="10.1" y="565" width="1128.8" height="15.0" fill="rgb(232,22,42)" rx="2" ry="2" />
<text  x="13.06" y="575.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:628</text>
</g>
<g >
<title>sun.security.jca.ProviderList.getService:380 (524 samples, 1.25%)</title><rect x="10.1" y="165" width="14.7" height="15.0" fill="rgb(206,65,16)" rx="2" ry="2" />
<text  x="13.06" y="175.5" ></text>
</g>
<g >
<title>sun.security.jca.ProviderList.getService:380 (3,666 samples, 8.75%)</title><rect x="364.4" y="197" width="103.2" height="15.0" fill="rgb(219,38,45)" rx="2" ry="2" />
<text  x="367.40" y="207.5" >sun.security..</text>
</g>
<g >
<title>sun.security.util.DerValue.getPositiveBigInteger:558 (1,052 samples, 2.51%)</title><rect x="888.3" y="261" width="29.7" height="15.0" fill="rgb(230,137,36)" rx="2" ry="2" />
<text  x="891.35" y="271.5" >su..</text>
</g>
<g >
<title>sun.security.util.DerValue.init:414 (526 samples, 1.25%)</title><rect x="681.8" y="213" width="14.8" height="15.0" fill="rgb(205,135,36)" rx="2" ry="2" />
<text  x="684.79" y="223.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine$RequestHook.execute:66 (244 samples, 0.58%)</title><rect x="1138.9" y="485" width="6.8" height="15.0" fill="rgb(249,36,7)" rx="2" ry="2" />
<text  x="1141.88" y="495.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance:45 (9,430 samples, 22.50%)</title><rect x="39.6" y="101" width="265.5" height="15.0" fill="rgb(231,103,48)" rx="2" ry="2" />
<text  x="42.61" y="111.5" >jdk.internal.reflect.DelegatingCons..</text>
</g>
<g >
<title>java.security.Provider.getService:1299 (524 samples, 1.25%)</title><rect x="10.1" y="149" width="14.7" height="15.0" fill="rgb(234,68,38)" rx="2" ry="2" />
<text  x="13.06" y="159.5" ></text>
</g>
<g >
<title>java.security.Provider.getService:1303 (3,666 samples, 8.75%)</title><rect x="364.4" y="181" width="103.2" height="15.0" fill="rgb(241,199,29)" rx="2" ry="2" />
<text  x="367.40" y="191.5" >java.securit..</text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (522 samples, 1.25%)</title><rect x="918.0" y="261" width="14.7" height="15.0" fill="rgb(239,186,9)" rx="2" ry="2" />
<text  x="920.96" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.engineVerify:489 (5,515 samples, 13.16%)</title><rect x="467.7" y="293" width="155.2" height="15.0" fill="rgb(243,204,34)" rx="2" ry="2" />
<text  x="470.66" y="303.5" >sun.security.ec.ECD..</text>
</g>
<g >
<title>java.lang.Throwable.&lt;init&gt;:270 (524 samples, 1.25%)</title><rect x="1145.7" y="437" width="14.8" height="15.0" fill="rgb(254,109,30)" rx="2" ry="2" />
<text  x="1148.75" y="447.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.getECParameters:133 (3,666 samples, 8.75%)</title><rect x="364.4" y="261" width="103.2" height="15.0" fill="rgb(238,196,48)" rx="2" ry="2" />
<text  x="367.40" y="271.5" >sun.security..</text>
</g>
<g >
<title>org.sample.DigitalSignature.verify:35 (12,588 samples, 30.03%)</title><rect x="10.1" y="341" width="354.3" height="15.0" fill="rgb(245,197,32)" rx="2" ry="2" />
<text  x="13.06" y="351.5" >org.sample.DigitalSignature.verify:35</text>
</g>
<g >
<title>sun.security.provider.DigestBase.&lt;init&gt;:86 (3,668 samples, 8.75%)</title><rect x="54.3" y="37" width="103.3" height="15.0" fill="rgb(212,160,0)" rx="2" ry="2" />
<text  x="57.31" y="47.5" >sun.security..</text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.engineVerify:498 (18,330 samples, 43.73%)</title><rect x="622.9" y="293" width="516.0" height="15.0" fill="rgb(213,196,2)" rx="2" ry="2" />
<text  x="625.90" y="303.5" >sun.security.ec.ECDSASignature.engineVerify:498</text>
</g>
<g >
<title>jdk.jfr.internal.instrument.JDKEvents$$Lambda$68.1855782113.run:-1 (244 samples, 0.58%)</title><rect x="1138.9" y="469" width="6.8" height="15.0" fill="rgb(231,103,9)" rx="2" ry="2" />
<text  x="1141.88" y="479.5" ></text>
</g>
<g >
<title>java.lang.Thread.run:834 (40,345 samples, 96.25%)</title><rect x="10.1" y="581" width="1135.6" height="15.0" fill="rgb(207,109,11)" rx="2" ry="2" />
<text  x="13.06" y="591.5" >java.lang.Thread.run:834</text>
</g>
<g >
<title>sun.security.util.DerValue.init:411 (1,046 samples, 2.50%)</title><rect x="637.6" y="213" width="29.5" height="15.0" fill="rgb(218,99,28)" rx="2" ry="2" />
<text  x="640.65" y="223.5" >su..</text>
</g>
<g >
<title>java.lang.Integer.parseInt:770 (524 samples, 1.25%)</title><rect x="1145.7" y="549" width="14.8" height="15.0" fill="rgb(208,148,1)" rx="2" ry="2" />
<text  x="1148.75" y="559.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.init:413 (522 samples, 1.25%)</title><rect x="667.1" y="213" width="14.7" height="15.0" fill="rgb(227,175,24)" rx="2" ry="2" />
<text  x="670.09" y="223.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:238 (526 samples, 1.25%)</title><rect x="305.1" y="165" width="14.8" height="15.0" fill="rgb(207,209,44)" rx="2" ry="2" />
<text  x="308.06" y="175.5" ></text>
</g>
<g >
<title>java.lang.reflect.Constructor.copy:150 (524 samples, 1.25%)</title><rect x="24.9" y="69" width="14.7" height="15.0" fill="rgb(224,208,50)" rx="2" ry="2" />
<text  x="27.86" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked:75 (526 samples, 1.25%)</title><rect x="1160.5" y="549" width="14.8" height="15.0" fill="rgb(224,40,37)" rx="2" ry="2" />
<text  x="1163.50" y="559.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62 (40,101 samples, 95.66%)</title><rect x="10.1" y="421" width="1128.8" height="15.0" fill="rgb(252,51,40)" rx="2" ry="2" />
<text  x="13.06" y="431.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62</text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:154 (9,430 samples, 22.50%)</title><rect x="39.6" y="133" width="265.5" height="15.0" fill="rgb(244,224,46)" rx="2" ry="2" />
<text  x="42.61" y="143.5" >java.security.Provider.newInstanceU..</text>
</g>
<g >
<title>java.lang.NumberFormatException.forInputString:65 (524 samples, 1.25%)</title><rect x="1145.7" y="517" width="14.8" height="15.0" fill="rgb(225,200,6)" rx="2" ry="2" />
<text  x="1148.75" y="527.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:236 (9,956 samples, 23.75%)</title><rect x="24.8" y="165" width="280.3" height="15.0" fill="rgb(235,27,20)" rx="2" ry="2" />
<text  x="27.81" y="175.5" >sun.security.jca.GetInstance.getInsta..</text>
</g>
<g >
<title>java.security.Provider.getService:1303 (6 samples, 0.01%)</title><rect x="364.2" y="277" width="0.2" height="15.0" fill="rgb(227,37,4)" rx="2" ry="2" />
<text  x="367.23" y="287.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43 (40,101 samples, 95.66%)</title><rect x="10.1" y="437" width="1128.8" height="15.0" fill="rgb(244,16,46)" rx="2" ry="2" />
<text  x="13.06" y="447.5" >jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43</text>
</g>
<g >
<title>sun.security.ec.ECDSASignature$SHA256.&lt;init&gt;:242 (11,008 samples, 26.26%)</title><rect x="10.1" y="261" width="309.8" height="15.0" fill="rgb(208,228,31)" rx="2" ry="2" />
<text  x="13.06" y="271.5" >sun.security.ec.ECDSASignature$SHA256.&lt;in..</text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.&lt;init&gt;:118 (11,008 samples, 26.26%)</title><rect x="10.1" y="229" width="309.8" height="15.0" fill="rgb(254,148,34)" rx="2" ry="2" />
<text  x="13.06" y="239.5" >sun.security.ec.ECDSASignature.&lt;init&gt;:118</text>
</g>
<g >
<title>java.security.Security.getImpl:700 (3,666 samples, 8.75%)</title><rect x="364.4" y="229" width="103.2" height="15.0" fill="rgb(234,189,37)" rx="2" ry="2" />
<text  x="367.40" y="239.5" >java.securit..</text>
</g>
<g >
<title>java.lang.NumberFormatException.&lt;init&gt;:55 (524 samples, 1.25%)</title><rect x="1145.7" y="501" width="14.8" height="15.0" fill="rgb(239,79,6)" rx="2" ry="2" />
<text  x="1148.75" y="511.5" ></text>
</g>
<g >
<title>java.security.Provider$ServiceKey.hashCode:1107 (3,666 samples, 8.75%)</title><rect x="364.4" y="149" width="103.2" height="15.0" fill="rgb(216,171,0)" rx="2" ry="2" />
<text  x="367.40" y="159.5" >java.securit..</text>
</g>
<g >
<title>java.lang.Class.getConstructor:2150 (524 samples, 1.25%)</title><rect x="24.9" y="117" width="14.7" height="15.0" fill="rgb(247,140,30)" rx="2" ry="2" />
<text  x="27.86" y="127.5" ></text>
</g>
<g >
<title>sun.security.util.DerInputStream.readVector:427 (2,096 samples, 5.00%)</title><rect x="637.6" y="245" width="59.0" height="15.0" fill="rgb(227,44,19)" rx="2" ry="2" />
<text  x="640.59" y="255.5" >sun.se..</text>
</g>
<g >
<title>java.security.Provider.getService:1299 (1,574 samples, 3.75%)</title><rect x="319.9" y="277" width="44.3" height="15.0" fill="rgb(226,41,13)" rx="2" ry="2" />
<text  x="322.93" y="287.5" >java..</text>
</g>
<g >
<title>java.lang.Integer.parseInt:652 (524 samples, 1.25%)</title><rect x="1145.7" y="533" width="14.8" height="15.0" fill="rgb(211,104,26)" rx="2" ry="2" />
<text  x="1148.75" y="543.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.doSingle:138 (526 samples, 1.25%)</title><rect x="1160.5" y="533" width="14.8" height="15.0" fill="rgb(237,49,46)" rx="2" ry="2" />
<text  x="1163.50" y="543.5" ></text>
</g>
<g >
<title>java.security.MessageDigest.getInstance:178 (11,006 samples, 26.26%)</title><rect x="10.1" y="213" width="309.8" height="15.0" fill="rgb(235,188,45)" rx="2" ry="2" />
<text  x="13.06" y="223.5" >java.security.MessageDigest.getInstance:178</text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:472 (1,574 samples, 3.75%)</title><rect x="319.9" y="229" width="44.3" height="15.0" fill="rgb(222,182,4)" rx="2" ry="2" />
<text  x="322.93" y="239.5" >java..</text>
</g>
</g>
</svg>
