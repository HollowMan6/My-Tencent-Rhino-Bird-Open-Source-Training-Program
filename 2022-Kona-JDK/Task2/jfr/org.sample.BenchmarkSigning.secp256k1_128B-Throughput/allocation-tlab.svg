<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >allocation-tlab secp256k1_128B-Throughput</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>sun.security.ec.ECDSASignature.&lt;init&gt;:106 (26,724 samples, 16.25%)</title><rect x="49.4" y="245" width="191.7" height="15.0" fill="rgb(238,57,17)" rx="2" ry="2" />
<text  x="52.42" y="255.5" >sun.security.ec.ECDSASign..</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:164 (1,060 samples, 0.64%)</title><rect x="397.3" y="197" width="7.6" height="15.0" fill="rgb(210,220,32)" rx="2" ry="2" />
<text  x="400.28" y="207.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:281 (429 samples, 0.26%)</title><rect x="1183.4" y="501" width="3.1" height="15.0" fill="rgb(236,52,49)" rx="2" ry="2" />
<text  x="1186.38" y="511.5" ></text>
</g>
<g >
<title>java.security.Signature.getInstance:297 (2,632 samples, 1.60%)</title><rect x="327.3" y="309" width="18.9" height="15.0" fill="rgb(226,125,6)" rx="2" ry="2" />
<text  x="330.35" y="319.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:206 (43,717 samples, 26.58%)</title><rect x="13.8" y="309" width="313.5" height="15.0" fill="rgb(253,42,16)" rx="2" ry="2" />
<text  x="16.76" y="319.5" >sun.security.jca.GetInstance.getInstance:206</text>
</g>
<g >
<title>java.security.Security.getImpl:700 (24,624 samples, 14.97%)</title><rect x="49.4" y="197" width="176.6" height="15.0" fill="rgb(209,193,28)" rx="2" ry="2" />
<text  x="52.42" y="207.5" >java.security.Security..</text>
</g>
<g >
<title>java.util.concurrent.CopyOnWriteArrayList.iterator:1024 (522 samples, 0.32%)</title><rect x="1177.8" y="485" width="3.7" height="15.0" fill="rgb(208,206,3)" rx="2" ry="2" />
<text  x="1180.80" y="495.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestNative:439 (17,290 samples, 10.51%)</title><rect x="472.6" y="277" width="124.0" height="15.0" fill="rgb(235,76,3)" rx="2" ry="2" />
<text  x="475.60" y="287.5" >sun.security.ec..</text>
</g>
<g >
<title>sun.security.ec.ECDSASignature$SHA256.&lt;init&gt;:242 (26,724 samples, 16.25%)</title><rect x="49.4" y="261" width="191.7" height="15.0" fill="rgb(249,17,49)" rx="2" ry="2" />
<text  x="52.42" y="271.5" >sun.security.ec.ECDSASign..</text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (6,286 samples, 3.82%)</title><rect x="1132.7" y="229" width="45.1" height="15.0" fill="rgb(250,62,49)" rx="2" ry="2" />
<text  x="1135.71" y="239.5" >java..</text>
</g>
<g >
<title>java.security.MessageDigest.digest:385 (2,620 samples, 1.59%)</title><rect x="514.0" y="181" width="18.8" height="15.0" fill="rgb(229,48,46)" rx="2" ry="2" />
<text  x="516.98" y="191.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.&lt;init&gt;:79 (2,980 samples, 1.81%)</title><rect x="942.3" y="213" width="21.3" height="15.0" fill="rgb(229,60,33)" rx="2" ry="2" />
<text  x="945.26" y="223.5" >j..</text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.write:156 (13,096 samples, 7.96%)</title><rect x="1038.8" y="213" width="93.9" height="15.0" fill="rgb(213,78,26)" rx="2" ry="2" />
<text  x="1041.77" y="223.5" >java.io.Byt..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.doSingle:138 (429 samples, 0.26%)</title><rect x="1183.4" y="533" width="3.1" height="15.0" fill="rgb(244,159,25)" rx="2" ry="2" />
<text  x="1186.38" y="543.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkSigning_secp256k1_128B_jmhTest.secp256k1_128B_Throughput:83 (162,276 samples, 98.65%)</title><rect x="13.8" y="389" width="1164.0" height="15.0" fill="rgb(224,128,2)" rx="2" ry="2" />
<text  x="16.76" y="399.5" >org.sample.jmh_generated.BenchmarkSigning_secp256k1_128B_jmhTest.secp256k1_128B_Throughput:83</text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.toByteArray:211 (6,812 samples, 4.14%)</title><rect x="807.0" y="261" width="48.8" height="15.0" fill="rgb(238,135,47)" rx="2" ry="2" />
<text  x="809.97" y="271.5" >java..</text>
</g>
<g >
<title>java.security.Provider.getService:1303 (526 samples, 0.32%)</title><rect x="60.7" y="149" width="3.8" height="15.0" fill="rgb(218,11,36)" rx="2" ry="2" />
<text  x="63.68" y="159.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.hashGen:259 (4,190 samples, 2.55%)</title><rect x="472.6" y="181" width="30.1" height="15.0" fill="rgb(246,41,40)" rx="2" ry="2" />
<text  x="475.60" y="191.5" >su..</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (4,716 samples, 2.87%)</title><rect x="743.1" y="261" width="33.8" height="15.0" fill="rgb(225,188,16)" rx="2" ry="2" />
<text  x="746.06" y="271.5" >ja..</text>
</g>
<g >
<title>java.security.MessageDigest.getInstance:178 (24,624 samples, 14.97%)</title><rect x="49.4" y="213" width="176.6" height="15.0" fill="rgb(220,186,54)" rx="2" ry="2" />
<text  x="52.42" y="223.5" >java.security.MessageD..</text>
</g>
<g >
<title>sun.security.util.DerOutputStream.putInteger:165 (1,578 samples, 0.96%)</title><rect x="791.9" y="261" width="11.3" height="15.0" fill="rgb(252,178,26)" rx="2" ry="2" />
<text  x="794.88" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestNative:442 (7,850 samples, 4.77%)</title><rect x="596.6" y="277" width="56.3" height="15.0" fill="rgb(253,80,2)" rx="2" ry="2" />
<text  x="599.63" y="287.5" >sun.s..</text>
</g>
<g >
<title>java.lang.Class.getConstructor:2150 (4,706 samples, 2.86%)</title><rect x="64.5" y="117" width="33.7" height="15.0" fill="rgb(205,5,51)" rx="2" ry="2" />
<text  x="67.45" y="127.5" >ja..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (162,276 samples, 98.65%)</title><rect x="13.8" y="469" width="1164.0" height="15.0" fill="rgb(206,166,24)" rx="2" ry="2" />
<text  x="16.76" y="479.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getService:85 (12,022 samples, 7.31%)</title><rect x="241.1" y="293" width="86.2" height="15.0" fill="rgb(208,197,10)" rx="2" ry="2" />
<text  x="244.11" y="303.5" >sun.securi..</text>
</g>
<g >
<title>sun.security.provider.DigestBase.engineDigest:187 (1,570 samples, 0.95%)</title><rect x="600.4" y="85" width="11.2" height="15.0" fill="rgb(210,48,42)" rx="2" ry="2" />
<text  x="603.37" y="95.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.toByteArray:861 (6,286 samples, 3.82%)</title><rect x="1132.7" y="261" width="45.1" height="15.0" fill="rgb(216,186,22)" rx="2" ry="2" />
<text  x="1135.71" y="271.5" >sun...</text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.get:936 (3,162 samples, 1.92%)</title><rect x="374.6" y="149" width="22.7" height="15.0" fill="rgb(254,188,34)" rx="2" ry="2" />
<text  x="377.60" y="159.5" >j..</text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1:386 (778 samples, 0.47%)</title><rect x="1177.8" y="549" width="5.6" height="15.0" fill="rgb(230,43,40)" rx="2" ry="2" />
<text  x="1180.80" y="559.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (6,284 samples, 3.82%)</title><rect x="698.0" y="245" width="45.1" height="15.0" fill="rgb(239,10,8)" rx="2" ry="2" />
<text  x="700.98" y="255.5" >java..</text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (1,054 samples, 0.64%)</title><rect x="502.7" y="165" width="7.5" height="15.0" fill="rgb(226,67,2)" rx="2" ry="2" />
<text  x="505.66" y="175.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.hashGen:280 (524 samples, 0.32%)</title><rect x="510.2" y="181" width="3.8" height="15.0" fill="rgb(233,207,20)" rx="2" ry="2" />
<text  x="513.22" y="191.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:253 (526 samples, 0.32%)</title><rect x="803.2" y="277" width="3.8" height="15.0" fill="rgb(221,37,41)" rx="2" ry="2" />
<text  x="806.20" y="287.5" ></text>
</g>
<g >
<title>java.security.SecureRandom.nextBytes:751 (7,328 samples, 4.45%)</title><rect x="600.4" y="229" width="52.5" height="15.0" fill="rgb(237,108,12)" rx="2" ry="2" />
<text  x="603.37" y="239.5" >java...</text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.get:936 (1,566 samples, 0.95%)</title><rect x="316.1" y="261" width="11.2" height="15.0" fill="rgb(246,158,24)" rx="2" ry="2" />
<text  x="319.12" y="271.5" ></text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1176 (3,138 samples, 1.91%)</title><rect x="626.7" y="149" width="22.5" height="15.0" fill="rgb(229,227,54)" rx="2" ry="2" />
<text  x="629.65" y="159.5" >j..</text>
</g>
<g >
<title>sun.security.jca.ProviderList.getService:380 (2,096 samples, 1.27%)</title><rect x="49.4" y="165" width="15.1" height="15.0" fill="rgb(213,214,36)" rx="2" ry="2" />
<text  x="52.42" y="175.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked:75 (429 samples, 0.26%)</title><rect x="1183.4" y="549" width="3.1" height="15.0" fill="rgb(221,224,14)" rx="2" ry="2" />
<text  x="1186.38" y="559.5" ></text>
</g>
<g >
<title>java.util.Random.nextInt:329 (7,850 samples, 4.77%)</title><rect x="596.6" y="261" width="56.3" height="15.0" fill="rgb(210,9,28)" rx="2" ry="2" />
<text  x="599.63" y="271.5" >java...</text>
</g>
<g >
<title>sun.security.util.DerOutputStream.putInteger:165 (526 samples, 0.32%)</title><rect x="803.2" y="261" width="3.8" height="15.0" fill="rgb(254,148,22)" rx="2" ry="2" />
<text  x="806.20" y="271.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (4,716 samples, 2.87%)</title><rect x="743.1" y="245" width="33.8" height="15.0" fill="rgb(225,62,39)" rx="2" ry="2" />
<text  x="746.06" y="255.5" >ja..</text>
</g>
<g >
<title>java.security.MessageDigest.digest:431 (4,190 samples, 2.55%)</title><rect x="472.6" y="165" width="30.1" height="15.0" fill="rgb(251,66,1)" rx="2" ry="2" />
<text  x="475.60" y="175.5" >ja..</text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.engineSign:464 (526 samples, 0.32%)</title><rect x="350.0" y="293" width="3.8" height="15.0" fill="rgb(224,158,49)" rx="2" ry="2" />
<text  x="353.00" y="303.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.&lt;init&gt;:118 (26,724 samples, 16.25%)</title><rect x="49.4" y="229" width="191.7" height="15.0" fill="rgb(217,120,35)" rx="2" ry="2" />
<text  x="52.42" y="239.5" >sun.security.ec.ECDSASign..</text>
</g>
<g >
<title>sun.security.util.DerValue.toByteArray:857 (2,982 samples, 1.81%)</title><rect x="942.2" y="261" width="21.4" height="15.0" fill="rgb(233,208,3)" rx="2" ry="2" />
<text  x="945.24" y="271.5" >s..</text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkSigning_secp256k1_128B_jmhTest.secp256k1_128B_thrpt_jmhStub:119 (162,276 samples, 98.65%)</title><rect x="13.8" y="373" width="1164.0" height="15.0" fill="rgb(244,54,48)" rx="2" ry="2" />
<text  x="16.76" y="383.5" >org.sample.jmh_generated.BenchmarkSigning_secp256k1_128B_jmhTest.secp256k1_128B_thrpt_jmhStub:119</text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.forParameters:91 (526 samples, 0.32%)</title><rect x="350.0" y="261" width="3.8" height="15.0" fill="rgb(243,196,23)" rx="2" ry="2" />
<text  x="353.00" y="271.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:230 (256 samples, 0.16%)</title><rect x="1181.5" y="501" width="1.9" height="15.0" fill="rgb(219,47,45)" rx="2" ry="2" />
<text  x="1184.54" y="511.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.InputStreamDrainer.run:77 (492 samples, 0.30%)</title><rect x="1186.5" y="581" width="3.5" height="15.0" fill="rgb(213,163,23)" rx="2" ry="2" />
<text  x="1189.46" y="591.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestNative:447 (3,658 samples, 2.22%)</title><rect x="652.9" y="277" width="26.3" height="15.0" fill="rgb(226,150,9)" rx="2" ry="2" />
<text  x="655.93" y="287.5" >s..</text>
</g>
<g >
<title>java.security.MessageDigest$Delegate.engineDigest:639 (4,190 samples, 2.55%)</title><rect x="472.6" y="133" width="30.1" height="15.0" fill="rgb(231,171,19)" rx="2" ry="2" />
<text  x="475.60" y="143.5" >ja..</text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.doPeriodic:183 (778 samples, 0.47%)</title><rect x="1177.8" y="517" width="5.6" height="15.0" fill="rgb(233,201,37)" rx="2" ry="2" />
<text  x="1180.80" y="527.5" ></text>
</g>
<g >
<title>sun.security.util.ECParameters.engineGetEncoded:220 (1,050 samples, 0.64%)</title><rect x="404.9" y="229" width="7.5" height="15.0" fill="rgb(208,217,29)" rx="2" ry="2" />
<text  x="407.89" y="239.5" ></text>
</g>
<g >
<title>sun.security.provider.DigestBase.engineDigest:187 (4,190 samples, 2.55%)</title><rect x="472.6" y="117" width="30.1" height="15.0" fill="rgb(247,136,34)" rx="2" ry="2" />
<text  x="475.60" y="127.5" >su..</text>
</g>
<g >
<title>java.lang.Thread.run:834 (163,054 samples, 99.12%)</title><rect x="13.8" y="581" width="1169.6" height="15.0" fill="rgb(221,90,19)" rx="2" ry="2" />
<text  x="16.76" y="591.5" >java.lang.Thread.run:834</text>
</g>
<g >
<title>sun.security.util.DerValue.encode:426 (10,474 samples, 6.37%)</title><rect x="963.6" y="245" width="75.2" height="15.0" fill="rgb(223,1,24)" rx="2" ry="2" />
<text  x="966.64" y="255.5" >sun.secu..</text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:439 (778 samples, 0.47%)</title><rect x="1177.8" y="533" width="5.6" height="15.0" fill="rgb(238,89,39)" rx="2" ry="2" />
<text  x="1180.80" y="543.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedRunner.run:72 (429 samples, 0.26%)</title><rect x="1183.4" y="565" width="3.1" height="15.0" fill="rgb(247,33,18)" rx="2" ry="2" />
<text  x="1186.38" y="575.5" ></text>
</g>
<g >
<title>java.security.Signature.getInstance:404 (43,717 samples, 26.58%)</title><rect x="13.8" y="325" width="313.5" height="15.0" fill="rgb(209,163,34)" rx="2" ry="2" />
<text  x="16.76" y="335.5" >java.security.Signature.getInstance:404</text>
</g>
<g >
<title>java.security.Provider.getService:1303 (3,162 samples, 1.92%)</title><rect x="374.6" y="165" width="22.7" height="15.0" fill="rgb(238,57,49)" rx="2" ry="2" />
<text  x="377.60" y="175.5" >j..</text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:233 (2,096 samples, 1.27%)</title><rect x="581.6" y="197" width="15.0" height="15.0" fill="rgb(214,78,25)" rx="2" ry="2" />
<text  x="584.59" y="207.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.ReflectionFactory.copyConstructor:388 (4,706 samples, 2.86%)</title><rect x="64.5" y="101" width="33.7" height="15.0" fill="rgb(211,153,18)" rx="2" ry="2" />
<text  x="67.45" y="111.5" >jd..</text>
</g>
<g >
<title>java.security.MessageDigest.digest:385 (1,570 samples, 0.95%)</title><rect x="600.4" y="117" width="11.2" height="15.0" fill="rgb(232,15,12)" rx="2" ry="2" />
<text  x="603.37" y="127.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:257 (32,838 samples, 19.96%)</title><rect x="942.2" y="277" width="235.6" height="15.0" fill="rgb(231,53,27)" rx="2" ry="2" />
<text  x="945.24" y="287.5" >sun.security.util.ECUtil.encode..</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1192 (2,092 samples, 1.27%)</title><rect x="634.2" y="133" width="15.0" height="15.0" fill="rgb(238,172,4)" rx="2" ry="2" />
<text  x="637.16" y="143.5" ></text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.get:936 (526 samples, 0.32%)</title><rect x="60.7" y="133" width="3.8" height="15.0" fill="rgb(208,45,20)" rx="2" ry="2" />
<text  x="63.68" y="143.5" ></text>
</g>
<g >
<title>java.security.Provider.getService:1299 (10,456 samples, 6.36%)</title><rect x="241.1" y="277" width="75.0" height="15.0" fill="rgb(235,93,53)" rx="2" ry="2" />
<text  x="244.11" y="287.5" >java.sec..</text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:224 (2,620 samples, 1.59%)</title><rect x="514.0" y="197" width="18.8" height="15.0" fill="rgb(217,138,36)" rx="2" ry="2" />
<text  x="516.98" y="207.5" ></text>
</g>
<g >
<title>sun.security.provider.DigestBase.engineDigest:187 (526 samples, 0.32%)</title><rect x="346.2" y="229" width="3.8" height="15.0" fill="rgb(223,65,41)" rx="2" ry="2" />
<text  x="349.23" y="239.5" ></text>
</g>
<g >
<title>sun.security.provider.AbstractDrbg.engineNextBytes:334 (7,328 samples, 4.45%)</title><rect x="600.4" y="197" width="52.5" height="15.0" fill="rgb(234,4,18)" rx="2" ry="2" />
<text  x="603.37" y="207.5" >sun.s..</text>
</g>
<g >
<title>sun.security.provider.SHA2.&lt;init&gt;:83 (2,098 samples, 1.28%)</title><rect x="124.5" y="53" width="15.0" height="15.0" fill="rgb(233,1,22)" rx="2" ry="2" />
<text  x="127.46" y="63.5" ></text>
</g>
<g >
<title>java.security.MessageDigest.digest:431 (1,570 samples, 0.95%)</title><rect x="600.4" y="133" width="11.2" height="15.0" fill="rgb(252,8,18)" rx="2" ry="2" />
<text  x="603.37" y="143.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1 (162,276 samples, 98.65%)</title><rect x="13.8" y="405" width="1164.0" height="15.0" fill="rgb(220,88,43)" rx="2" ry="2" />
<text  x="16.76" y="415.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1</text>
</g>
<g >
<title>sun.security.provider.AbstractDrbg.engineNextBytes:334 (17,290 samples, 10.51%)</title><rect x="472.6" y="229" width="124.0" height="15.0" fill="rgb(242,51,54)" rx="2" ry="2" />
<text  x="475.60" y="239.5" >sun.security.pr..</text>
</g>
<g >
<title>java.lang.reflect.Constructor.newInstance:490 (17,292 samples, 10.51%)</title><rect x="98.2" y="117" width="124.1" height="15.0" fill="rgb(237,223,21)" rx="2" ry="2" />
<text  x="101.22" y="127.5" >java.lang.refle..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos:2119 (260 samples, 0.16%)</title><rect x="1184.6" y="437" width="1.9" height="15.0" fill="rgb(229,153,49)" rx="2" ry="2" />
<text  x="1187.59" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1128 (162,276 samples, 98.65%)</title><rect x="13.8" y="549" width="1164.0" height="15.0" fill="rgb(237,44,4)" rx="2" ry="2" />
<text  x="16.76" y="559.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1128</text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (1,046 samples, 0.64%)</title><rect x="619.1" y="149" width="7.6" height="15.0" fill="rgb(238,86,25)" rx="2" ry="2" />
<text  x="622.15" y="159.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.grow:120 (13,096 samples, 7.96%)</title><rect x="1038.8" y="181" width="93.9" height="15.0" fill="rgb(233,207,41)" rx="2" ry="2" />
<text  x="1041.77" y="191.5" >java.io.Byt..</text>
</g>
<g >
<title>sun.security.provider.DRBG.engineNextBytes:233 (7,328 samples, 4.45%)</title><rect x="600.4" y="213" width="52.5" height="15.0" fill="rgb(214,147,26)" rx="2" ry="2" />
<text  x="603.37" y="223.5" >sun.s..</text>
</g>
<g >
<title>sun.security.provider.SHA2.&lt;init&gt;:86 (9,432 samples, 5.73%)</title><rect x="154.6" y="53" width="67.7" height="15.0" fill="rgb(230,193,5)" rx="2" ry="2" />
<text  x="157.60" y="63.5" >sun.sec..</text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance:45 (17,292 samples, 10.51%)</title><rect x="98.2" y="101" width="124.1" height="15.0" fill="rgb(228,107,15)" rx="2" ry="2" />
<text  x="101.22" y="111.5" >jdk.internal.re..</text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.engineSign:463 (526 samples, 0.32%)</title><rect x="346.2" y="293" width="3.8" height="15.0" fill="rgb(217,84,29)" rx="2" ry="2" />
<text  x="349.23" y="303.5" ></text>
</g>
<g >
<title>java.security.MessageDigest$Delegate.engineDigest:639 (2,620 samples, 1.59%)</title><rect x="514.0" y="165" width="18.8" height="15.0" fill="rgb(218,149,36)" rx="2" ry="2" />
<text  x="516.98" y="175.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:219 (5,768 samples, 3.51%)</title><rect x="472.6" y="197" width="41.4" height="15.0" fill="rgb(242,87,28)" rx="2" ry="2" />
<text  x="475.60" y="207.5" >sun..</text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:628 (162,276 samples, 98.65%)</title><rect x="13.8" y="565" width="1164.0" height="15.0" fill="rgb(230,85,49)" rx="2" ry="2" />
<text  x="16.76" y="575.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:628</text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeECParameterSpec:141 (4,495 samples, 2.73%)</title><rect x="372.6" y="261" width="32.3" height="15.0" fill="rgb(214,72,37)" rx="2" ry="2" />
<text  x="375.64" y="271.5" >su..</text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:153 (4,706 samples, 2.86%)</title><rect x="64.5" y="133" width="33.7" height="15.0" fill="rgb(251,179,14)" rx="2" ry="2" />
<text  x="67.45" y="143.5" >ja..</text>
</g>
<g >
<title>java.security.Provider.getService:1303 (1,566 samples, 0.95%)</title><rect x="316.1" y="277" width="11.2" height="15.0" fill="rgb(224,159,16)" rx="2" ry="2" />
<text  x="319.12" y="287.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (2,630 samples, 1.60%)</title><rect x="353.8" y="261" width="18.8" height="15.0" fill="rgb(225,64,43)" rx="2" ry="2" />
<text  x="356.78" y="271.5" ></text>
</g>
<g >
<title>java.security.MessageDigest$Delegate.engineDigest:639 (1,570 samples, 0.95%)</title><rect x="600.4" y="101" width="11.2" height="15.0" fill="rgb(231,129,19)" rx="2" ry="2" />
<text  x="603.37" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1192 (1,046 samples, 0.64%)</title><rect x="574.1" y="165" width="7.5" height="15.0" fill="rgb(246,169,50)" rx="2" ry="2" />
<text  x="577.09" y="175.5" ></text>
</g>
<g >
<title>java.lang.String.toUpperCase:2584 (8,886 samples, 5.40%)</title><rect x="252.4" y="245" width="63.7" height="15.0" fill="rgb(243,48,26)" rx="2" ry="2" />
<text  x="255.38" y="255.5" >java.la..</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:238 (534 samples, 0.32%)</title><rect x="401.1" y="181" width="3.8" height="15.0" fill="rgb(224,7,42)" rx="2" ry="2" />
<text  x="404.05" y="191.5" ></text>
</g>
<g >
<title>java.security.Signature.sign:711 (115,927 samples, 70.47%)</title><rect x="346.2" y="325" width="831.6" height="15.0" fill="rgb(205,217,19)" rx="2" ry="2" />
<text  x="349.23" y="335.5" >java.security.Signature.sign:711</text>
</g>
<g >
<title>sun.security.provider.AbstractDrbg.engineNextBytes:394 (17,290 samples, 10.51%)</title><rect x="472.6" y="213" width="124.0" height="15.0" fill="rgb(221,116,5)" rx="2" ry="2" />
<text  x="475.60" y="223.5" >sun.security.pr..</text>
</g>
<g >
<title>java.security.Provider$ServiceKey.&lt;init&gt;:1103 (8,886 samples, 5.40%)</title><rect x="252.4" y="261" width="63.7" height="15.0" fill="rgb(243,187,31)" rx="2" ry="2" />
<text  x="255.38" y="271.5" >java.se..</text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeECParameterSpec:150 (1,050 samples, 0.64%)</title><rect x="404.9" y="261" width="7.5" height="15.0" fill="rgb(248,33,20)" rx="2" ry="2" />
<text  x="407.89" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.&lt;init&gt;:232 (8,378 samples, 5.09%)</title><rect x="855.8" y="245" width="60.1" height="15.0" fill="rgb(253,69,8)" rx="2" ry="2" />
<text  x="858.84" y="255.5" >sun.se..</text>
</g>
<g >
<title>sun.security.provider.SHA2.&lt;init&gt;:85 (2,104 samples, 1.28%)</title><rect x="139.5" y="53" width="15.1" height="15.0" fill="rgb(219,53,1)" rx="2" ry="2" />
<text  x="142.51" y="63.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.getECParameters:133 (4,495 samples, 2.73%)</title><rect x="372.6" y="245" width="32.3" height="15.0" fill="rgb(219,203,14)" rx="2" ry="2" />
<text  x="375.64" y="255.5" >su..</text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder$$Lambda$88.2132721099.run:-1 (778 samples, 0.47%)</title><rect x="1177.8" y="565" width="5.6" height="15.0" fill="rgb(246,149,24)" rx="2" ry="2" />
<text  x="1180.80" y="575.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestNative:437 (8,390 samples, 5.10%)</title><rect x="412.4" y="277" width="60.2" height="15.0" fill="rgb(207,39,37)" rx="2" ry="2" />
<text  x="415.42" y="287.5" >sun.se..</text>
</g>
<g >
<title>java.security.Provider$ServiceKey.hashCode:1107 (1,566 samples, 0.95%)</title><rect x="316.1" y="245" width="11.2" height="15.0" fill="rgb(248,16,15)" rx="2" ry="2" />
<text  x="319.12" y="255.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineSign:1402 (115,927 samples, 70.47%)</title><rect x="346.2" y="309" width="831.6" height="15.0" fill="rgb(209,118,41)" rx="2" ry="2" />
<text  x="349.23" y="319.5" >java.security.Signature$Delegate.engineSign:1402</text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.ensureCapacity:95 (13,096 samples, 7.96%)</title><rect x="1038.8" y="197" width="93.9" height="15.0" fill="rgb(244,152,1)" rx="2" ry="2" />
<text  x="1041.77" y="207.5" >java.io.Byt..</text>
</g>
<g >
<title>sun.security.util.DerOutputStream.&lt;init&gt;:66 (2,980 samples, 1.81%)</title><rect x="942.3" y="245" width="21.3" height="15.0" fill="rgb(216,3,23)" rx="2" ry="2" />
<text  x="945.26" y="255.5" >s..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.enq:639 (260 samples, 0.16%)</title><rect x="1184.6" y="405" width="1.9" height="15.0" fill="rgb(231,107,17)" rx="2" ry="2" />
<text  x="1187.59" y="415.5" ></text>
</g>
<g >
<title>java.io.OutputStream.write:122 (13,096 samples, 7.96%)</title><rect x="1038.8" y="229" width="93.9" height="15.0" fill="rgb(222,208,2)" rx="2" ry="2" />
<text  x="1041.77" y="239.5" >java.io.Out..</text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (6,284 samples, 3.82%)</title><rect x="698.0" y="229" width="45.1" height="15.0" fill="rgb(240,167,24)" rx="2" ry="2" />
<text  x="700.98" y="239.5" >java..</text>
</g>
<g >
<title>sun.security.provider.HashDrbg.hashGen:259 (1,570 samples, 0.95%)</title><rect x="600.4" y="149" width="11.2" height="15.0" fill="rgb(222,20,37)" rx="2" ry="2" />
<text  x="603.37" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (526 samples, 0.32%)</title><rect x="803.2" y="245" width="3.8" height="15.0" fill="rgb(220,222,13)" rx="2" ry="2" />
<text  x="806.20" y="255.5" ></text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:515 (162,276 samples, 98.65%)</title><rect x="13.8" y="517" width="1164.0" height="15.0" fill="rgb(228,85,9)" rx="2" ry="2" />
<text  x="16.76" y="527.5" >java.util.concurrent.Executors$RunnableAdapter.call:515</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (162,276 samples, 98.65%)</title><rect x="13.8" y="501" width="1164.0" height="15.0" fill="rgb(247,137,26)" rx="2" ry="2" />
<text  x="16.76" y="511.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>sun.security.util.NamedCurve.getEncoded:73 (1,050 samples, 0.64%)</title><rect x="404.9" y="213" width="7.5" height="15.0" fill="rgb(249,162,46)" rx="2" ry="2" />
<text  x="407.89" y="223.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:245 (1,578 samples, 0.96%)</title><rect x="679.2" y="277" width="11.3" height="15.0" fill="rgb(206,208,8)" rx="2" ry="2" />
<text  x="682.17" y="287.5" ></text>
</g>
<g >
<title>org.sample.DigitalSignature.sign:23 (46,349 samples, 28.18%)</title><rect x="13.8" y="341" width="332.4" height="15.0" fill="rgb(227,214,28)" rx="2" ry="2" />
<text  x="16.76" y="351.5" >org.sample.DigitalSignature.sign:23</text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.engineSign:469 (45,363 samples, 27.58%)</title><rect x="353.8" y="293" width="325.4" height="15.0" fill="rgb(223,45,29)" rx="2" ry="2" />
<text  x="356.78" y="303.5" >sun.security.ec.ECDSASignature.engineSign:469</text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1176 (6,282 samples, 3.82%)</title><rect x="536.5" y="181" width="45.1" height="15.0" fill="rgb(216,14,4)" rx="2" ry="2" />
<text  x="539.53" y="191.5" >java..</text>
</g>
<g >
<title>sun.security.provider.DigestBase.&lt;init&gt;:86 (2,098 samples, 1.28%)</title><rect x="124.5" y="37" width="15.0" height="15.0" fill="rgb(249,126,13)" rx="2" ry="2" />
<text  x="127.46" y="47.5" ></text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:154 (17,294 samples, 10.51%)</title><rect x="98.2" y="133" width="124.1" height="15.0" fill="rgb(231,1,17)" rx="2" ry="2" />
<text  x="101.21" y="143.5" >java.security.P..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedMain.main:86 (429 samples, 0.26%)</title><rect x="1183.4" y="581" width="3.1" height="15.0" fill="rgb(235,51,41)" rx="2" ry="2" />
<text  x="1186.38" y="591.5" ></text>
</g>
<g >
<title>java.security.Provider$ServiceKey.hashCode:1107 (3,162 samples, 1.92%)</title><rect x="374.6" y="133" width="22.7" height="15.0" fill="rgb(249,47,29)" rx="2" ry="2" />
<text  x="377.60" y="143.5" >j..</text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (1,578 samples, 0.96%)</title><rect x="791.9" y="245" width="11.3" height="15.0" fill="rgb(252,208,44)" rx="2" ry="2" />
<text  x="794.88" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:255 (18,858 samples, 11.46%)</title><rect x="807.0" y="277" width="135.2" height="15.0" fill="rgb(215,227,42)" rx="2" ry="2" />
<text  x="809.97" y="287.5" >sun.security.util..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:344 (260 samples, 0.16%)</title><rect x="1184.6" y="485" width="1.9" height="15.0" fill="rgb(236,97,23)" rx="2" ry="2" />
<text  x="1187.59" y="495.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.poll:458 (260 samples, 0.16%)</title><rect x="1184.6" y="453" width="1.9" height="15.0" fill="rgb(241,117,29)" rx="2" ry="2" />
<text  x="1187.59" y="463.5" ></text>
</g>
<g >
<title>sun.security.provider.DRBG.engineNextBytes:233 (17,290 samples, 10.51%)</title><rect x="472.6" y="245" width="124.0" height="15.0" fill="rgb(213,171,24)" rx="2" ry="2" />
<text  x="475.60" y="255.5" >sun.security.pr..</text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43 (162,276 samples, 98.65%)</title><rect x="13.8" y="437" width="1164.0" height="15.0" fill="rgb(247,106,42)" rx="2" ry="2" />
<text  x="16.76" y="447.5" >jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43</text>
</g>
<g >
<title>sun.security.provider.DigestBase.engineDigest:187 (1,048 samples, 0.64%)</title><rect x="611.6" y="117" width="7.5" height="15.0" fill="rgb(228,21,9)" rx="2" ry="2" />
<text  x="614.63" y="127.5" ></text>
</g>
<g >
<title>java.security.Security.getImpl:700 (4,495 samples, 2.73%)</title><rect x="372.6" y="213" width="32.3" height="15.0" fill="rgb(214,100,35)" rx="2" ry="2" />
<text  x="375.64" y="223.5" >ja..</text>
</g>
<g >
<title>java.security.MessageDigest$Delegate.engineDigest:639 (526 samples, 0.32%)</title><rect x="346.2" y="245" width="3.8" height="15.0" fill="rgb(232,127,42)" rx="2" ry="2" />
<text  x="349.23" y="255.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:164 (22,528 samples, 13.69%)</title><rect x="64.5" y="181" width="161.5" height="15.0" fill="rgb(249,13,23)" rx="2" ry="2" />
<text  x="67.45" y="191.5" >sun.security.jca.Get..</text>
</g>
<g >
<title>java.security.Provider.getService:1299 (273 samples, 0.17%)</title><rect x="372.6" y="165" width="2.0" height="15.0" fill="rgb(225,41,31)" rx="2" ry="2" />
<text  x="375.64" y="175.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:472 (4,188 samples, 2.55%)</title><rect x="252.4" y="229" width="30.0" height="15.0" fill="rgb(206,115,37)" rx="2" ry="2" />
<text  x="255.38" y="239.5" >ja..</text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:483 (4,698 samples, 2.86%)</title><rect x="282.4" y="229" width="33.7" height="15.0" fill="rgb(205,85,19)" rx="2" ry="2" />
<text  x="285.42" y="239.5" >ja..</text>
</g>
<g >
<title>sun.security.provider.HashDrbg.hashGen:278 (1,054 samples, 0.64%)</title><rect x="502.7" y="181" width="7.5" height="15.0" fill="rgb(248,157,39)" rx="2" ry="2" />
<text  x="505.66" y="191.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.&lt;init&gt;:64 (2,980 samples, 1.81%)</title><rect x="942.3" y="229" width="21.3" height="15.0" fill="rgb(223,214,50)" rx="2" ry="2" />
<text  x="945.26" y="239.5" >j..</text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:233 (526 samples, 0.32%)</title><rect x="649.2" y="165" width="3.7" height="15.0" fill="rgb(216,201,47)" rx="2" ry="2" />
<text  x="652.16" y="175.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.&lt;init&gt;:79 (2,090 samples, 1.27%)</title><rect x="776.9" y="245" width="15.0" height="15.0" fill="rgb(216,166,16)" rx="2" ry="2" />
<text  x="779.89" y="255.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.instrument.JDKEvents$$Lambda$67.674285175.run:-1 (256 samples, 0.16%)</title><rect x="1181.5" y="469" width="1.9" height="15.0" fill="rgb(224,191,36)" rx="2" ry="2" />
<text  x="1184.54" y="479.5" ></text>
</g>
<g >
<title>java.security.MessageDigest.digest:385 (4,190 samples, 2.55%)</title><rect x="472.6" y="149" width="30.1" height="15.0" fill="rgb(216,64,42)" rx="2" ry="2" />
<text  x="475.60" y="159.5" >ja..</text>
</g>
<g >
<title>java.lang.invoke.Invokers$Holder.linkToTargetMethod:-1 (526 samples, 0.32%)</title><rect x="350.0" y="245" width="3.8" height="15.0" fill="rgb(250,95,53)" rx="2" ry="2" />
<text  x="353.00" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:252 (1,578 samples, 0.96%)</title><rect x="791.9" y="277" width="11.3" height="15.0" fill="rgb(207,69,13)" rx="2" ry="2" />
<text  x="794.88" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.engineSign:475 (69,512 samples, 42.26%)</title><rect x="679.2" y="293" width="498.6" height="15.0" fill="rgb(216,152,45)" rx="2" ry="2" />
<text  x="682.17" y="303.5" >sun.security.ec.ECDSASignature.engineSign:475</text>
</g>
<g >
<title>java.security.Provider.getService:1299 (1,570 samples, 0.95%)</title><rect x="49.4" y="149" width="11.3" height="15.0" fill="rgb(223,39,0)" rx="2" ry="2" />
<text  x="52.42" y="159.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.GeneratedConstructorAccessor1.newInstance:-1 (17,292 samples, 10.51%)</title><rect x="98.2" y="85" width="124.1" height="15.0" fill="rgb(220,116,49)" rx="2" ry="2" />
<text  x="101.22" y="95.5" >jdk.internal.re..</text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:231 (4,184 samples, 2.54%)</title><rect x="619.1" y="165" width="30.1" height="15.0" fill="rgb(253,37,18)" rx="2" ry="2" />
<text  x="622.15" y="175.5" >su..</text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62 (162,276 samples, 98.65%)</title><rect x="13.8" y="421" width="1164.0" height="15.0" fill="rgb(211,201,5)" rx="2" ry="2" />
<text  x="16.76" y="431.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62</text>
</g>
<g >
<title>sun.security.util.DerValue.&lt;init&gt;:245 (12,046 samples, 7.32%)</title><rect x="855.8" y="261" width="86.4" height="15.0" fill="rgb(248,86,21)" rx="2" ry="2" />
<text  x="858.84" y="271.5" >sun.securi..</text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:247 (7,328 samples, 4.45%)</title><rect x="690.5" y="277" width="52.6" height="15.0" fill="rgb(220,120,4)" rx="2" ry="2" />
<text  x="693.49" y="287.5" >sun.s..</text>
</g>
<g >
<title>org.sample.BenchmarkSigning.secp256k1_128B:54 (162,276 samples, 98.65%)</title><rect x="13.8" y="357" width="1164.0" height="15.0" fill="rgb(245,129,39)" rx="2" ry="2" />
<text  x="16.76" y="367.5" >org.sample.BenchmarkSigning.secp256k1_128B:54</text>
</g>
<g >
<title>java.lang.reflect.Constructor.copy:150 (4,706 samples, 2.86%)</title><rect x="64.5" y="69" width="33.7" height="15.0" fill="rgb(221,191,30)" rx="2" ry="2" />
<text  x="67.45" y="79.5" >ja..</text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:224 (1,048 samples, 0.64%)</title><rect x="611.6" y="165" width="7.5" height="15.0" fill="rgb(213,140,47)" rx="2" ry="2" />
<text  x="614.63" y="175.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:251 (2,090 samples, 1.27%)</title><rect x="776.9" y="277" width="15.0" height="15.0" fill="rgb(238,8,1)" rx="2" ry="2" />
<text  x="779.89" y="287.5" ></text>
</g>
<g >
<title>sun.security.provider.AbstractDrbg.engineNextBytes:394 (7,328 samples, 4.45%)</title><rect x="600.4" y="181" width="52.5" height="15.0" fill="rgb(240,187,9)" rx="2" ry="2" />
<text  x="603.37" y="191.5" >sun.s..</text>
</g>
<g >
<title>sun.security.ec.SunEC$ProviderService.newInstance:131 (526 samples, 0.32%)</title><rect x="397.3" y="165" width="3.8" height="15.0" fill="rgb(215,147,38)" rx="2" ry="2" />
<text  x="400.28" y="175.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (162,276 samples, 98.65%)</title><rect x="13.8" y="485" width="1164.0" height="15.0" fill="rgb(232,56,40)" rx="2" ry="2" />
<text  x="16.76" y="495.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestNative:433 (5,545 samples, 3.37%)</title><rect x="372.6" y="277" width="39.8" height="15.0" fill="rgb(226,39,34)" rx="2" ry="2" />
<text  x="375.64" y="287.5" >sun..</text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (162,276 samples, 98.65%)</title><rect x="13.8" y="533" width="1164.0" height="15.0" fill="rgb(218,155,10)" rx="2" ry="2" />
<text  x="16.76" y="543.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>org.sample.DigitalSignature.sign:27 (115,927 samples, 70.47%)</title><rect x="346.2" y="341" width="831.6" height="15.0" fill="rgb(217,213,47)" rx="2" ry="2" />
<text  x="349.23" y="351.5" >org.sample.DigitalSignature.sign:27</text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:219 (1,570 samples, 0.95%)</title><rect x="600.4" y="165" width="11.2" height="15.0" fill="rgb(223,138,11)" rx="2" ry="2" />
<text  x="603.37" y="175.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:212 (522 samples, 0.32%)</title><rect x="1177.8" y="501" width="3.7" height="15.0" fill="rgb(242,62,40)" rx="2" ry="2" />
<text  x="1180.80" y="511.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations$$Lambda$38.1502096837.get$Lambda:-1 (526 samples, 0.32%)</title><rect x="350.0" y="213" width="3.8" height="15.0" fill="rgb(239,218,40)" rx="2" ry="2" />
<text  x="353.00" y="223.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle$Holder.invokeStatic:-1 (526 samples, 0.32%)</title><rect x="350.0" y="229" width="3.8" height="15.0" fill="rgb(218,158,4)" rx="2" ry="2" />
<text  x="353.00" y="239.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestImpl:416 (526 samples, 0.32%)</title><rect x="350.0" y="277" width="3.8" height="15.0" fill="rgb(245,167,36)" rx="2" ry="2" />
<text  x="353.00" y="287.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (13,096 samples, 7.96%)</title><rect x="1038.8" y="165" width="93.9" height="15.0" fill="rgb(208,152,50)" rx="2" ry="2" />
<text  x="1041.77" y="175.5" >java.util.A..</text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:566 (162,276 samples, 98.65%)</title><rect x="13.8" y="453" width="1164.0" height="15.0" fill="rgb(242,49,46)" rx="2" ry="2" />
<text  x="16.76" y="463.5" >java.lang.reflect.Method.invoke:566</text>
</g>
<g >
<title>java.security.MessageDigest.digest:385 (1,048 samples, 0.64%)</title><rect x="611.6" y="149" width="7.5" height="15.0" fill="rgb(243,5,13)" rx="2" ry="2" />
<text  x="614.63" y="159.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.toByteArray:859 (23,570 samples, 14.33%)</title><rect x="963.6" y="261" width="169.1" height="15.0" fill="rgb(247,71,33)" rx="2" ry="2" />
<text  x="966.64" y="271.5" >sun.security.util.Der..</text>
</g>
<g >
<title>java.security.Signature.getInstance:405 (2,632 samples, 1.60%)</title><rect x="327.3" y="325" width="18.9" height="15.0" fill="rgb(212,210,9)" rx="2" ry="2" />
<text  x="330.35" y="335.5" ></text>
</g>
<g >
<title>sun.security.ec.SunEC$ProviderService.newInstance:108 (31,695 samples, 19.27%)</title><rect x="13.8" y="277" width="227.3" height="15.0" fill="rgb(239,164,39)" rx="2" ry="2" />
<text  x="16.76" y="287.5" >sun.security.ec.SunEC$Provider..</text>
</g>
<g >
<title>java.security.SecureRandom.nextBytes:751 (17,290 samples, 10.51%)</title><rect x="472.6" y="261" width="124.0" height="15.0" fill="rgb(254,28,13)" rx="2" ry="2" />
<text  x="475.60" y="271.5" >java.security.S..</text>
</g>
<g >
<title>jdk.jfr.internal.instrument.JDKEvents.emitExceptionStatistics:133 (256 samples, 0.16%)</title><rect x="1181.5" y="453" width="1.9" height="15.0" fill="rgb(243,134,28)" rx="2" ry="2" />
<text  x="1184.54" y="463.5" ></text>
</g>
<g >
<title>java.security.SecureRandom.next:808 (7,328 samples, 4.45%)</title><rect x="600.4" y="245" width="52.5" height="15.0" fill="rgb(227,165,53)" rx="2" ry="2" />
<text  x="603.37" y="255.5" >java...</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (6,284 samples, 3.82%)</title><rect x="698.0" y="261" width="45.1" height="15.0" fill="rgb(216,94,39)" rx="2" ry="2" />
<text  x="700.98" y="271.5" >java..</text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (6,812 samples, 4.14%)</title><rect x="807.0" y="245" width="48.8" height="15.0" fill="rgb(252,97,27)" rx="2" ry="2" />
<text  x="809.97" y="255.5" >java..</text>
</g>
<g >
<title>java.security.Provider$ServiceKey.hashCode:1107 (526 samples, 0.32%)</title><rect x="60.7" y="117" width="3.8" height="15.0" fill="rgb(224,160,20)" rx="2" ry="2" />
<text  x="63.68" y="127.5" ></text>
</g>
<g >
<title>java.security.MessageDigest.getInstance:183 (2,100 samples, 1.28%)</title><rect x="226.0" y="213" width="15.1" height="15.0" fill="rgb(221,21,15)" rx="2" ry="2" />
<text  x="229.05" y="223.5" ></text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (4,716 samples, 2.87%)</title><rect x="743.1" y="229" width="33.8" height="15.0" fill="rgb(249,189,16)" rx="2" ry="2" />
<text  x="746.06" y="239.5" >ja..</text>
</g>
<g >
<title>sun.security.provider.DigestBase.engineDigest:187 (2,620 samples, 1.59%)</title><rect x="514.0" y="149" width="18.8" height="15.0" fill="rgb(231,125,42)" rx="2" ry="2" />
<text  x="516.98" y="159.5" ></text>
</g>
<g >
<title>java.security.AlgorithmParameters.getInstance:158 (4,495 samples, 2.73%)</title><rect x="372.6" y="229" width="32.3" height="15.0" fill="rgb(228,131,48)" rx="2" ry="2" />
<text  x="375.64" y="239.5" >ja..</text>
</g>
<g >
<title>java.lang.reflect.ReflectAccess.copyConstructor:155 (4,706 samples, 2.86%)</title><rect x="64.5" y="85" width="33.7" height="15.0" fill="rgb(241,194,35)" rx="2" ry="2" />
<text  x="67.45" y="95.5" >ja..</text>
</g>
<g >
<title>java.util.concurrent.ExecutorCompletionService.poll:209 (260 samples, 0.16%)</title><rect x="1184.6" y="469" width="1.9" height="15.0" fill="rgb(250,1,42)" rx="2" ry="2" />
<text  x="1187.59" y="479.5" ></text>
</g>
<g >
<title>java.security.SecureRandom.next:805 (522 samples, 0.32%)</title><rect x="596.6" y="245" width="3.8" height="15.0" fill="rgb(231,11,30)" rx="2" ry="2" />
<text  x="599.63" y="255.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigest:-1 (3,658 samples, 2.22%)</title><rect x="652.9" y="261" width="26.3" height="15.0" fill="rgb(225,61,38)" rx="2" ry="2" />
<text  x="655.93" y="271.5" >s..</text>
</g>
<g >
<title>sun.security.jca.ProviderList.getService:380 (3,435 samples, 2.09%)</title><rect x="372.6" y="181" width="24.7" height="15.0" fill="rgb(215,56,5)" rx="2" ry="2" />
<text  x="375.64" y="191.5" >s..</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:157 (3,435 samples, 2.09%)</title><rect x="372.6" y="197" width="24.7" height="15.0" fill="rgb(219,195,24)" rx="2" ry="2" />
<text  x="375.64" y="207.5" >s..</text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (524 samples, 0.32%)</title><rect x="532.8" y="181" width="3.7" height="15.0" fill="rgb(249,207,54)" rx="2" ry="2" />
<text  x="535.77" y="191.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:236 (31,695 samples, 19.27%)</title><rect x="13.8" y="293" width="227.3" height="15.0" fill="rgb(218,61,32)" rx="2" ry="2" />
<text  x="16.76" y="303.5" >sun.security.jca.GetInstance.g..</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:236 (526 samples, 0.32%)</title><rect x="397.3" y="181" width="3.8" height="15.0" fill="rgb(243,100,40)" rx="2" ry="2" />
<text  x="400.28" y="191.5" ></text>
</g>
<g >
<title>sun.security.util.DerOutputStream.&lt;init&gt;:61 (2,090 samples, 1.27%)</title><rect x="776.9" y="261" width="15.0" height="15.0" fill="rgb(223,18,21)" rx="2" ry="2" />
<text  x="779.89" y="271.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine$RequestHook.execute:66 (256 samples, 0.16%)</title><rect x="1181.5" y="485" width="1.9" height="15.0" fill="rgb(215,97,42)" rx="2" ry="2" />
<text  x="1184.54" y="495.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:238 (528 samples, 0.32%)</title><rect x="222.3" y="165" width="3.7" height="15.0" fill="rgb(232,206,54)" rx="2" ry="2" />
<text  x="225.26" y="175.5" ></text>
</g>
<g >
<title>java.security.MessageDigest.digest:385 (526 samples, 0.32%)</title><rect x="346.2" y="261" width="3.8" height="15.0" fill="rgb(243,1,4)" rx="2" ry="2" />
<text  x="349.23" y="271.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:157 (2,096 samples, 1.27%)</title><rect x="49.4" y="181" width="15.1" height="15.0" fill="rgb(221,57,29)" rx="2" ry="2" />
<text  x="52.42" y="191.5" ></text>
</g>
<g >
<title>all (164,501 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(223,118,0)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>java.security.Provider$Service.newInstance:1915 (22,000 samples, 13.37%)</title><rect x="64.5" y="149" width="157.8" height="15.0" fill="rgb(223,111,28)" rx="2" ry="2" />
<text  x="67.45" y="159.5" >java.security.Provid..</text>
</g>
<g >
<title>sun.security.util.DerValue.&lt;init&gt;:234 (3,668 samples, 2.23%)</title><rect x="915.9" y="245" width="26.3" height="15.0" fill="rgb(251,18,46)" rx="2" ry="2" />
<text  x="918.93" y="255.5" >s..</text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.getDigestValue:338 (526 samples, 0.32%)</title><rect x="346.2" y="277" width="3.8" height="15.0" fill="rgb(206,155,11)" rx="2" ry="2" />
<text  x="349.23" y="287.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:311 (169 samples, 0.10%)</title><rect x="1183.4" y="485" width="1.2" height="15.0" fill="rgb(252,172,19)" rx="2" ry="2" />
<text  x="1186.38" y="495.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.transferAfterCancelledWait:1742 (260 samples, 0.16%)</title><rect x="1184.6" y="421" width="1.9" height="15.0" fill="rgb(225,113,26)" rx="2" ry="2" />
<text  x="1187.59" y="431.5" ></text>
</g>
<g >
<title>java.security.AlgorithmParameters.getEncoded:381 (1,050 samples, 0.64%)</title><rect x="404.9" y="245" width="7.5" height="15.0" fill="rgb(239,223,36)" rx="2" ry="2" />
<text  x="407.89" y="255.5" ></text>
</g>
<g >
<title>sun.security.provider.SHA2$SHA256.&lt;init&gt;:288 (13,634 samples, 8.29%)</title><rect x="124.5" y="69" width="97.8" height="15.0" fill="rgb(232,200,18)" rx="2" ry="2" />
<text  x="127.46" y="79.5" >sun.securit..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:233 (429 samples, 0.26%)</title><rect x="1183.4" y="517" width="3.1" height="15.0" fill="rgb(214,201,53)" rx="2" ry="2" />
<text  x="1186.38" y="527.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestNative:429 (2,630 samples, 1.60%)</title><rect x="353.8" y="277" width="18.8" height="15.0" fill="rgb(253,89,7)" rx="2" ry="2" />
<text  x="356.78" y="287.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:231 (6,806 samples, 4.14%)</title><rect x="532.8" y="197" width="48.8" height="15.0" fill="rgb(236,194,32)" rx="2" ry="2" />
<text  x="535.77" y="207.5" >sun...</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:236 (22,000 samples, 13.37%)</title><rect x="64.5" y="165" width="157.8" height="15.0" fill="rgb(241,50,30)" rx="2" ry="2" />
<text  x="67.45" y="175.5" >sun.security.jca.Get..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.initializeSyncQueue:2324 (260 samples, 0.16%)</title><rect x="1184.6" y="389" width="1.9" height="15.0" fill="rgb(211,79,49)" rx="2" ry="2" />
<text  x="1187.59" y="399.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:249 (4,716 samples, 2.87%)</title><rect x="743.1" y="277" width="33.8" height="15.0" fill="rgb(229,221,5)" rx="2" ry="2" />
<text  x="746.06" y="287.5" >su..</text>
</g>
<g >
<title>java.security.MessageDigest$Delegate.engineDigest:639 (1,048 samples, 0.64%)</title><rect x="611.6" y="133" width="7.5" height="15.0" fill="rgb(216,20,47)" rx="2" ry="2" />
<text  x="614.63" y="143.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.encode:433 (13,096 samples, 7.96%)</title><rect x="1038.8" y="245" width="93.9" height="15.0" fill="rgb(207,209,13)" rx="2" ry="2" />
<text  x="1041.77" y="255.5" >sun.securit..</text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.toByteArray:211 (6,286 samples, 3.82%)</title><rect x="1132.7" y="245" width="45.1" height="15.0" fill="rgb(208,34,40)" rx="2" ry="2" />
<text  x="1135.71" y="255.5" >java..</text>
</g>
</g>
</svg>
