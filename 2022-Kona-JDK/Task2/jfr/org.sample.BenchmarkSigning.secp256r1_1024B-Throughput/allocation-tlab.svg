<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="726.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >allocation-tlab secp256r1_1024B-Throughput</text>
<text id="details" x="10.00" y="709" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="709" > </text>
<g id="frames">
<g >
<title>sun.security.util.math.IntegerFieldModuloP.getElement:95 (12,045 samples, 0.57%)</title><rect x="1053.6" y="293" width="6.7" height="15.0" fill="rgb(207,43,8)" rx="2" ry="2" />
<text  x="1056.61" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.multiply:573 (9,711 samples, 0.46%)</title><rect x="1033.7" y="261" width="5.4" height="15.0" fill="rgb(217,51,7)" rx="2" ry="2" />
<text  x="1036.71" y="271.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1100 (26,200 samples, 1.24%)</title><rect x="95.4" y="117" width="14.6" height="15.0" fill="rgb(216,29,5)" rx="2" ry="2" />
<text  x="98.39" y="127.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.seedToScalar:188 (17,296 samples, 0.82%)</title><rect x="532.6" y="309" width="9.7" height="15.0" fill="rgb(231,83,30)" rx="2" ry="2" />
<text  x="535.64" y="319.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRight:3375 (58,836 samples, 2.77%)</title><rect x="466.7" y="133" width="32.7" height="15.0" fill="rgb(208,32,18)" rx="2" ry="2" />
<text  x="469.69" y="143.5" >ja..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:64 (5,242 samples, 0.25%)</title><rect x="667.4" y="261" width="3.0" height="15.0" fill="rgb(239,193,44)" rx="2" ry="2" />
<text  x="670.43" y="271.5" ></text>
</g>
<g >
<title>sun.security.provider.SHA2$SHA256.&lt;init&gt;:288 (28,324 samples, 1.34%)</title><rect x="23.7" y="149" width="15.7" height="15.0" fill="rgb(254,34,29)" rx="2" ry="2" />
<text  x="26.69" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (16,248 samples, 0.77%)</title><rect x="70.3" y="149" width="9.1" height="15.0" fill="rgb(227,106,5)" rx="2" ry="2" />
<text  x="73.32" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1203 (15,742 samples, 0.74%)</title><rect x="278.1" y="69" width="8.7" height="15.0" fill="rgb(246,120,44)" rx="2" ry="2" />
<text  x="281.08" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (1,048 samples, 0.05%)</title><rect x="404.6" y="53" width="0.6" height="15.0" fill="rgb(215,79,49)" rx="2" ry="2" />
<text  x="407.62" y="63.5" ></text>
</g>
<g >
<title>java.security.Security.getImpl:700 (50,848 samples, 2.40%)</title><rect x="12.0" y="277" width="28.3" height="15.0" fill="rgb(213,227,50)" rx="2" ry="2" />
<text  x="15.04" y="287.5" >j..</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.doSingle:138 (294 samples, 0.01%)</title><rect x="1189.6" y="613" width="0.1" height="15.0" fill="rgb(217,165,45)" rx="2" ry="2" />
<text  x="1192.56" y="623.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.&lt;init&gt;:68 (498,961 samples, 23.52%)</title><rect x="223.0" y="277" width="277.6" height="15.0" fill="rgb(205,18,52)" rx="2" ry="2" />
<text  x="226.03" y="287.5" >sun.security.ec.ECDSAOperations.&lt;init..</text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.&lt;init&gt;:106 (53,990 samples, 2.55%)</title><rect x="12.0" y="325" width="30.1" height="15.0" fill="rgb(252,146,30)" rx="2" ry="2" />
<text  x="15.04" y="335.5" >su..</text>
</g>
<g >
<title>java.math.BigInteger.remainder:2343 (166,635 samples, 7.86%)</title><rect x="56.9" y="181" width="92.7" height="15.0" fill="rgb(229,93,13)" rx="2" ry="2" />
<text  x="59.92" y="191.5" >java.math.B..</text>
</g>
<g >
<title>sun.security.util.DerOutputStream.putInteger:165 (3,138 samples, 0.15%)</title><rect x="1154.7" y="341" width="1.8" height="15.0" fill="rgb(223,105,39)" rx="2" ry="2" />
<text  x="1157.73" y="351.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (6,684 samples, 0.32%)</title><rect x="658.5" y="229" width="3.7" height="15.0" fill="rgb(236,202,18)" rx="2" ry="2" />
<text  x="661.47" y="239.5" ></text>
</g>
<g >
<title>java.math.BigInteger.mod:2699 (166,635 samples, 7.86%)</title><rect x="56.9" y="197" width="92.7" height="15.0" fill="rgb(251,108,16)" rx="2" ry="2" />
<text  x="59.92" y="207.5" >java.math.B..</text>
</g>
<g >
<title>jdk.internal.reflect.ReflectionFactory.copyConstructor:388 (7,862 samples, 0.37%)</title><rect x="13.8" y="181" width="4.4" height="15.0" fill="rgb(245,96,16)" rx="2" ry="2" />
<text  x="16.79" y="191.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (12,499 samples, 0.59%)</title><rect x="581.0" y="261" width="7.0" height="15.0" fill="rgb(211,95,22)" rx="2" ry="2" />
<text  x="584.03" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestImpl:416 (812,759 samples, 38.31%)</title><rect x="48.5" y="357" width="452.1" height="15.0" fill="rgb(233,22,54)" rx="2" ry="2" />
<text  x="51.48" y="367.5" >sun.security.ec.ECDSASignature.signDigestImpl:416</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.asByteArray:598 (14,641 samples, 0.69%)</title><rect x="1045.5" y="293" width="8.1" height="15.0" fill="rgb(210,97,20)" rx="2" ry="2" />
<text  x="1048.46" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:143 (14,146 samples, 0.67%)</title><rect x="542.6" y="261" width="7.8" height="15.0" fill="rgb(230,164,35)" rx="2" ry="2" />
<text  x="545.56" y="271.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.hashGen:278 (5,766 samples, 0.27%)</title><rect x="510.2" y="245" width="3.2" height="15.0" fill="rgb(211,131,38)" rx="2" ry="2" />
<text  x="513.20" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (12,040 samples, 0.57%)</title><rect x="568.8" y="261" width="6.7" height="15.0" fill="rgb(213,52,17)" rx="2" ry="2" />
<text  x="571.79" y="271.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1207 (32,506 samples, 1.53%)</title><rect x="110.0" y="133" width="18.0" height="15.0" fill="rgb(211,31,11)" rx="2" ry="2" />
<text  x="112.96" y="143.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:253 (3,678 samples, 0.17%)</title><rect x="1156.5" y="357" width="2.0" height="15.0" fill="rgb(227,13,36)" rx="2" ry="2" />
<text  x="1159.48" y="367.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (6,684 samples, 0.32%)</title><rect x="658.5" y="213" width="3.7" height="15.0" fill="rgb(233,152,19)" rx="2" ry="2" />
<text  x="661.47" y="223.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="565" width="1178.5" height="15.0" fill="rgb(221,207,20)" rx="2" ry="2" />
<text  x="13.29" y="575.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:64 (10,480 samples, 0.49%)</title><rect x="676.1" y="261" width="5.9" height="15.0" fill="rgb(239,86,46)" rx="2" ry="2" />
<text  x="679.15" y="271.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedRunner.run:72 (294 samples, 0.01%)</title><rect x="1189.6" y="645" width="0.1" height="15.0" fill="rgb(254,88,45)" rx="2" ry="2" />
<text  x="1192.56" y="655.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:260 (16,782 samples, 0.79%)</title><rect x="617.4" y="293" width="9.3" height="15.0" fill="rgb(213,143,33)" rx="2" ry="2" />
<text  x="620.40" y="303.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (1,048 samples, 0.05%)</title><rect x="277.5" y="53" width="0.6" height="15.0" fill="rgb(219,140,12)" rx="2" ry="2" />
<text  x="280.50" y="63.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.limbsToByteArray:453 (14,134 samples, 0.67%)</title><rect x="1127.6" y="277" width="7.9" height="15.0" fill="rgb(252,87,6)" rx="2" ry="2" />
<text  x="1130.64" y="287.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:224 (4,198 samples, 0.20%)</title><rect x="513.4" y="261" width="2.3" height="15.0" fill="rgb(206,137,47)" rx="2" ry="2" />
<text  x="516.41" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:171 (3,666 samples, 0.17%)</title><rect x="1073.4" y="309" width="2.0" height="15.0" fill="rgb(245,83,43)" rx="2" ry="2" />
<text  x="1076.40" y="319.5" ></text>
</g>
<g >
<title>sun.security.provider.DRBG.engineNextBytes:233 (26,206 samples, 1.24%)</title><rect x="506.7" y="309" width="14.6" height="15.0" fill="rgb(210,129,34)" rx="2" ry="2" />
<text  x="509.70" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.encode:426 (11,528 samples, 0.54%)</title><rect x="1173.7" y="325" width="6.4" height="15.0" fill="rgb(210,55,35)" rx="2" ry="2" />
<text  x="1176.67" y="335.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:740 (248,856 samples, 11.73%)</title><rect x="225.1" y="213" width="138.4" height="15.0" fill="rgb(248,95,10)" rx="2" ry="2" />
<text  x="228.07" y="223.5" >sun.security.util..</text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (4,200 samples, 0.20%)</title><rect x="1186.5" y="309" width="2.3" height="15.0" fill="rgb(212,100,36)" rx="2" ry="2" />
<text  x="1189.50" y="319.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.&lt;init&gt;:118 (53,990 samples, 2.55%)</title><rect x="12.0" y="309" width="30.1" height="15.0" fill="rgb(242,153,27)" rx="2" ry="2" />
<text  x="15.04" y="319.5" >su..</text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.ensureCapacity:95 (11,536 samples, 0.54%)</title><rect x="1180.1" y="277" width="6.4" height="15.0" fill="rgb(230,213,45)" rx="2" ry="2" />
<text  x="1183.09" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.IntegerModuloP.multiplicativeInverse:159 (51,908 samples, 2.45%)</title><rect x="1004.8" y="277" width="28.9" height="15.0" fill="rgb(238,178,36)" rx="2" ry="2" />
<text  x="1007.84" y="287.5" >su..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (5,784 samples, 0.27%)</title><rect x="197.4" y="261" width="3.2" height="15.0" fill="rgb(229,165,28)" rx="2" ry="2" />
<text  x="200.38" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (9,948 samples, 0.47%)</title><rect x="617.4" y="261" width="5.5" height="15.0" fill="rgb(242,119,53)" rx="2" ry="2" />
<text  x="620.40" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (11,020 samples, 0.52%)</title><rect x="560.6" y="261" width="6.1" height="15.0" fill="rgb(227,24,46)" rx="2" ry="2" />
<text  x="563.62" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:168 (12,045 samples, 0.57%)</title><rect x="1053.6" y="309" width="6.7" height="15.0" fill="rgb(245,222,54)" rx="2" ry="2" />
<text  x="1056.61" y="319.5" ></text>
</g>
<g >
<title>sun.security.provider.AbstractDrbg.engineNextBytes:394 (24,630 samples, 1.16%)</title><rect x="507.6" y="277" width="13.7" height="15.0" fill="rgb(240,142,3)" rx="2" ry="2" />
<text  x="510.58" y="287.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:281 (180 samples, 0.01%)</title><rect x="1189.6" y="581" width="0.1" height="15.0" fill="rgb(208,131,37)" rx="2" ry="2" />
<text  x="1192.56" y="591.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (16,260 samples, 0.77%)</title><rect x="1013.6" y="197" width="9.0" height="15.0" fill="rgb(212,150,49)" rx="2" ry="2" />
<text  x="1016.60" y="207.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:64 (12,066 samples, 0.57%)</title><rect x="200.6" y="293" width="6.7" height="15.0" fill="rgb(241,193,18)" rx="2" ry="2" />
<text  x="203.59" y="303.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1163 (70,210 samples, 3.31%)</title><rect x="274.9" y="85" width="39.0" height="15.0" fill="rgb(238,147,48)" rx="2" ry="2" />
<text  x="277.88" y="95.5" >jav..</text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint$Mutable.setValue:132 (5,776 samples, 0.27%)</title><rect x="682.0" y="277" width="3.2" height="15.0" fill="rgb(222,134,18)" rx="2" ry="2" />
<text  x="684.98" y="287.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3410 (6,290 samples, 0.30%)</title><rect x="334.6" y="117" width="3.5" height="15.0" fill="rgb(205,98,17)" rx="2" ry="2" />
<text  x="337.62" y="127.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:628 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="645" width="1178.5" height="15.0" fill="rgb(220,51,4)" rx="2" ry="2" />
<text  x="13.29" y="655.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:628</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (17,298 samples, 0.82%)</title><rect x="1099.9" y="261" width="9.7" height="15.0" fill="rgb(245,220,27)" rx="2" ry="2" />
<text  x="1102.94" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (18,784 samples, 0.89%)</title><rect x="648.0" y="261" width="10.5" height="15.0" fill="rgb(233,13,30)" rx="2" ry="2" />
<text  x="651.02" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get1:64 (12,556 samples, 0.59%)</title><rect x="207.3" y="293" width="7.0" height="15.0" fill="rgb(252,19,53)" rx="2" ry="2" />
<text  x="210.31" y="303.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2355 (103,231 samples, 4.87%)</title><rect x="92.2" y="165" width="57.4" height="15.0" fill="rgb(251,167,6)" rx="2" ry="2" />
<text  x="95.19" y="175.5" >java.m..</text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="485" width="1178.5" height="15.0" fill="rgb(246,105,23)" rx="2" ry="2" />
<text  x="13.29" y="495.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke0:-1</text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:167 (14,641 samples, 0.69%)</title><rect x="1045.5" y="309" width="8.1" height="15.0" fill="rgb(223,126,10)" rx="2" ry="2" />
<text  x="1048.46" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.asByteArray:598 (17,296 samples, 0.82%)</title><rect x="532.6" y="293" width="9.7" height="15.0" fill="rgb(206,6,44)" rx="2" ry="2" />
<text  x="535.64" y="303.5" ></text>
</g>
<g >
<title>org.sample.DigitalSignature.sign:30 (2,055,295 samples, 96.89%)</title><rect x="45.6" y="421" width="1143.2" height="15.0" fill="rgb(251,80,12)" rx="2" ry="2" />
<text  x="48.57" y="431.5" >org.sample.DigitalSignature.sign:30</text>
</g>
<g >
<title>sun.security.ec.ECOperations.&lt;init&gt;:129 (24,622 samples, 1.16%)</title><rect x="200.6" y="309" width="13.7" height="15.0" fill="rgb(240,97,2)" rx="2" ry="2" />
<text  x="203.59" y="319.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1192 (3,142 samples, 0.15%)</title><rect x="517.5" y="229" width="1.7" height="15.0" fill="rgb(232,211,23)" rx="2" ry="2" />
<text  x="520.50" y="239.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:256 (12,040 samples, 0.57%)</title><rect x="568.8" y="293" width="6.7" height="15.0" fill="rgb(247,159,14)" rx="2" ry="2" />
<text  x="571.79" y="303.5" ></text>
</g>
<g >
<title>java.math.BigInteger.subtract:1530 (4,200 samples, 0.20%)</title><rect x="1004.8" y="245" width="2.4" height="15.0" fill="rgb(234,136,15)" rx="2" ry="2" />
<text  x="1007.84" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:251 (11,540 samples, 0.54%)</title><rect x="1148.3" y="357" width="6.4" height="15.0" fill="rgb(211,123,15)" rx="2" ry="2" />
<text  x="1151.31" y="367.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValuePositive:305 (172,407 samples, 8.13%)</title><rect x="370.8" y="149" width="95.9" height="15.0" fill="rgb(215,65,38)" rx="2" ry="2" />
<text  x="373.79" y="159.5" >sun.securit..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:143 (5,242 samples, 0.25%)</title><rect x="667.4" y="245" width="3.0" height="15.0" fill="rgb(217,111,22)" rx="2" ry="2" />
<text  x="670.43" y="255.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="549" width="1178.5" height="15.0" fill="rgb(206,38,14)" rx="2" ry="2" />
<text  x="13.29" y="559.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:153 (7,862 samples, 0.37%)</title><rect x="13.8" y="213" width="4.4" height="15.0" fill="rgb(254,62,14)" rx="2" ry="2" />
<text  x="16.79" y="223.5" ></text>
</g>
<g >
<title>java.security.SecureRandom.nextBytes:751 (26,206 samples, 1.24%)</title><rect x="506.7" y="325" width="14.6" height="15.0" fill="rgb(215,117,2)" rx="2" ry="2" />
<text  x="509.70" y="335.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:122 (532 samples, 0.03%)</title><rect x="542.3" y="325" width="0.3" height="15.0" fill="rgb(229,135,50)" rx="2" ry="2" />
<text  x="545.26" y="335.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getSmallValue:163 (2,092 samples, 0.10%)</title><rect x="191.5" y="293" width="1.2" height="15.0" fill="rgb(227,42,37)" rx="2" ry="2" />
<text  x="194.55" y="303.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint$Mutable.&lt;init&gt;:102 (25,468 samples, 1.20%)</title><rect x="648.0" y="277" width="14.2" height="15.0" fill="rgb(220,120,32)" rx="2" ry="2" />
<text  x="651.02" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:184 (3,154 samples, 0.15%)</title><rect x="1090.3" y="309" width="1.8" height="15.0" fill="rgb(228,28,53)" rx="2" ry="2" />
<text  x="1093.32" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (12,564 samples, 0.59%)</title><rect x="543.4" y="229" width="7.0" height="15.0" fill="rgb(243,34,31)" rx="2" ry="2" />
<text  x="546.44" y="239.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:64 (3,156 samples, 0.15%)</title><rect x="602.0" y="261" width="1.7" height="15.0" fill="rgb(250,54,38)" rx="2" ry="2" />
<text  x="604.97" y="271.5" ></text>
</g>
<g >
<title>java.security.MessageDigest.getInstance:178 (50,848 samples, 2.40%)</title><rect x="12.0" y="293" width="28.3" height="15.0" fill="rgb(233,137,18)" rx="2" ry="2" />
<text  x="15.04" y="303.5" >j..</text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine$RequestHook$$Lambda$100.872076893.get$Lambda:-1 (530 samples, 0.02%)</title><rect x="1189.3" y="517" width="0.3" height="15.0" fill="rgb(243,199,48)" rx="2" ry="2" />
<text  x="1192.27" y="527.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine$RequestHook.execute:70 (530 samples, 0.02%)</title><rect x="1189.3" y="565" width="0.3" height="15.0" fill="rgb(220,88,34)" rx="2" ry="2" />
<text  x="1192.27" y="575.5" ></text>
</g>
<g >
<title>java.lang.String.toUpperCase:2584 (2,094 samples, 0.10%)</title><rect x="42.7" y="325" width="1.1" height="15.0" fill="rgb(254,181,21)" rx="2" ry="2" />
<text  x="45.66" y="335.5" ></text>
</g>
<g >
<title>java.security.Provider$ServiceKey.hashCode:1107 (1,568 samples, 0.07%)</title><rect x="12.9" y="197" width="0.9" height="15.0" fill="rgb(232,158,30)" rx="2" ry="2" />
<text  x="15.91" y="207.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:251 (14,146 samples, 0.67%)</title><rect x="542.6" y="293" width="7.8" height="15.0" fill="rgb(205,39,1)" rx="2" ry="2" />
<text  x="545.56" y="303.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.&lt;init&gt;:79 (1,048 samples, 0.05%)</title><rect x="1173.1" y="293" width="0.6" height="15.0" fill="rgb(225,41,12)" rx="2" ry="2" />
<text  x="1176.09" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (3,678 samples, 0.17%)</title><rect x="566.7" y="277" width="2.1" height="15.0" fill="rgb(228,208,43)" rx="2" ry="2" />
<text  x="569.75" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:64 (15,736 samples, 0.74%)</title><rect x="1075.4" y="277" width="8.8" height="15.0" fill="rgb(212,157,5)" rx="2" ry="2" />
<text  x="1078.44" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (12,541 samples, 0.59%)</title><rect x="610.4" y="213" width="7.0" height="15.0" fill="rgb(212,157,48)" rx="2" ry="2" />
<text  x="613.42" y="223.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:278 (35,614 samples, 1.68%)</title><rect x="985.0" y="293" width="19.8" height="15.0" fill="rgb(239,13,17)" rx="2" ry="2" />
<text  x="988.03" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.finalReduce:362 (12,568 samples, 0.59%)</title><rect x="1066.4" y="261" width="7.0" height="15.0" fill="rgb(217,95,43)" rx="2" ry="2" />
<text  x="1069.41" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:491 (6,276 samples, 0.30%)</title><rect x="50.2" y="261" width="3.5" height="15.0" fill="rgb(211,139,47)" rx="2" ry="2" />
<text  x="53.23" y="271.5" ></text>
</g>
<g >
<title>java.math.BigInteger.subtract:1519 (3,678 samples, 0.17%)</title><rect x="1097.9" y="277" width="2.0" height="15.0" fill="rgb(211,133,36)" rx="2" ry="2" />
<text  x="1100.89" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:265 (25,165 samples, 1.19%)</title><rect x="630.2" y="293" width="14.0" height="15.0" fill="rgb(252,189,16)" rx="2" ry="2" />
<text  x="633.23" y="303.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint.asAffine:77 (13,789 samples, 0.65%)</title><rect x="1033.7" y="293" width="7.7" height="15.0" fill="rgb(213,184,19)" rx="2" ry="2" />
<text  x="1036.71" y="303.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1207 (50,274 samples, 2.37%)</title><rect x="424.1" y="69" width="28.0" height="15.0" fill="rgb(244,52,22)" rx="2" ry="2" />
<text  x="427.14" y="79.5" >j..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:64 (12,541 samples, 0.59%)</title><rect x="610.4" y="261" width="7.0" height="15.0" fill="rgb(218,212,24)" rx="2" ry="2" />
<text  x="613.42" y="271.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:231 (6,288 samples, 0.30%)</title><rect x="515.7" y="261" width="3.5" height="15.0" fill="rgb(225,227,7)" rx="2" ry="2" />
<text  x="518.75" y="271.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.grow:120 (11,536 samples, 0.54%)</title><rect x="1180.1" y="261" width="6.4" height="15.0" fill="rgb(210,12,16)" rx="2" ry="2" />
<text  x="1183.09" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.toByteArray:859 (23,064 samples, 1.09%)</title><rect x="1173.7" y="341" width="12.8" height="15.0" fill="rgb(229,223,16)" rx="2" ry="2" />
<text  x="1176.67" y="351.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.asByteArray:598 (22,506 samples, 1.06%)</title><rect x="1127.6" y="293" width="12.6" height="15.0" fill="rgb(231,206,26)" rx="2" ry="2" />
<text  x="1130.64" y="303.5" ></text>
</g>
<g >
<title>java.security.Signature.getInstance:404 (62,894 samples, 2.96%)</title><rect x="10.3" y="405" width="35.0" height="15.0" fill="rgb(212,135,15)" rx="2" ry="2" />
<text  x="13.29" y="415.5" >ja..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (6,834 samples, 0.32%)</title><rect x="622.9" y="245" width="3.8" height="15.0" fill="rgb(239,25,40)" rx="2" ry="2" />
<text  x="625.93" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValue:298 (240,444 samples, 11.33%)</title><rect x="53.7" y="229" width="133.8" height="15.0" fill="rgb(244,40,16)" rx="2" ry="2" />
<text  x="56.72" y="239.5" >sun.security.uti..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:254 (1,046 samples, 0.05%)</title><rect x="1096.4" y="261" width="0.6" height="15.0" fill="rgb(253,184,0)" rx="2" ry="2" />
<text  x="1099.44" y="271.5" ></text>
</g>
<g >
<title>java.util.Optional.map:265 (502,107 samples, 23.67%)</title><rect x="221.3" y="325" width="279.3" height="15.0" fill="rgb(230,120,43)" rx="2" ry="2" />
<text  x="224.28" y="335.5" >java.util.Optional.map:265</text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:253 (18,312 samples, 0.86%)</title><rect x="550.4" y="293" width="10.2" height="15.0" fill="rgb(222,133,32)" rx="2" ry="2" />
<text  x="553.43" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.finalReduce:362 (8,372 samples, 0.39%)</title><rect x="1135.5" y="261" width="4.7" height="15.0" fill="rgb(216,157,14)" rx="2" ry="2" />
<text  x="1138.50" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint$Mutable.&lt;init&gt;:103 (15,216 samples, 0.72%)</title><rect x="595.3" y="277" width="8.4" height="15.0" fill="rgb(206,159,42)" rx="2" ry="2" />
<text  x="598.26" y="287.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1191 (5,756 samples, 0.27%)</title><rect x="274.9" y="69" width="3.2" height="15.0" fill="rgb(246,0,4)" rx="2" ry="2" />
<text  x="277.88" y="79.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint.mutable:60 (35,614 samples, 1.68%)</title><rect x="985.0" y="277" width="19.8" height="15.0" fill="rgb(215,197,44)" rx="2" ry="2" />
<text  x="988.03" y="287.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2352 (23,058 samples, 1.09%)</title><rect x="79.4" y="165" width="12.8" height="15.0" fill="rgb(236,28,16)" rx="2" ry="2" />
<text  x="82.36" y="175.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (3,678 samples, 0.17%)</title><rect x="566.7" y="261" width="2.1" height="15.0" fill="rgb(209,1,47)" rx="2" ry="2" />
<text  x="569.75" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (7,852 samples, 0.37%)</title><rect x="1008.6" y="245" width="4.4" height="15.0" fill="rgb(222,7,23)" rx="2" ry="2" />
<text  x="1011.64" y="255.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance:45 (36,702 samples, 1.73%)</title><rect x="19.0" y="181" width="20.4" height="15.0" fill="rgb(224,22,17)" rx="2" ry="2" />
<text  x="22.03" y="191.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1:386 (1,299 samples, 0.06%)</title><rect x="1188.8" y="629" width="0.8" height="15.0" fill="rgb(224,142,49)" rx="2" ry="2" />
<text  x="1191.84" y="639.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:257 (8,402 samples, 0.40%)</title><rect x="575.5" y="293" width="4.7" height="15.0" fill="rgb(220,227,27)" rx="2" ry="2" />
<text  x="578.49" y="303.5" ></text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1176 (5,236 samples, 0.25%)</title><rect x="230.6" y="133" width="2.9" height="15.0" fill="rgb(250,20,27)" rx="2" ry="2" />
<text  x="233.60" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1100 (15,742 samples, 0.74%)</title><rect x="278.1" y="53" width="8.7" height="15.0" fill="rgb(237,43,27)" rx="2" ry="2" />
<text  x="281.08" y="63.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:123 (1,074,316 samples, 50.64%)</title><rect x="542.6" y="325" width="597.6" height="15.0" fill="rgb(216,213,34)" rx="2" ry="2" />
<text  x="545.56" y="335.5" >sun.security.ec.ECDSAOperations.signDigest:123</text>
</g>
<g >
<title>java.nio.ByteBuffer.wrap:394 (524 samples, 0.02%)</title><rect x="1059.1" y="229" width="0.3" height="15.0" fill="rgb(224,73,35)" rx="2" ry="2" />
<text  x="1062.15" y="239.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:185 (8,896 samples, 0.42%)</title><rect x="1092.1" y="309" width="4.9" height="15.0" fill="rgb(215,191,33)" rx="2" ry="2" />
<text  x="1095.07" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:143 (12,541 samples, 0.59%)</title><rect x="610.4" y="245" width="7.0" height="15.0" fill="rgb(253,43,38)" rx="2" ry="2" />
<text  x="613.42" y="255.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.engineSign:464 (1,962,543 samples, 92.52%)</title><rect x="48.5" y="373" width="1091.7" height="15.0" fill="rgb(239,127,44)" rx="2" ry="2" />
<text  x="51.48" y="383.5" >sun.security.ec.ECDSASignature.engineSign:464</text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:233 (294 samples, 0.01%)</title><rect x="1189.6" y="597" width="0.1" height="15.0" fill="rgb(216,137,13)" rx="2" ry="2" />
<text  x="1192.56" y="607.5" ></text>
</g>
<g >
<title>java.math.BigInteger.mod:2699 (181,758 samples, 8.57%)</title><rect x="233.5" y="133" width="101.1" height="15.0" fill="rgb(217,49,35)" rx="2" ry="2" />
<text  x="236.51" y="143.5" >java.math.Bi..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1207 (48,712 samples, 2.30%)</title><rect x="286.8" y="69" width="27.1" height="15.0" fill="rgb(243,86,35)" rx="2" ry="2" />
<text  x="289.84" y="79.5" >j..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:252 (9,946 samples, 0.47%)</title><rect x="524.5" y="277" width="5.5" height="15.0" fill="rgb(252,181,8)" rx="2" ry="2" />
<text  x="527.49" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get1:148 (12,556 samples, 0.59%)</title><rect x="207.3" y="277" width="7.0" height="15.0" fill="rgb(239,78,18)" rx="2" ry="2" />
<text  x="210.31" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.IntegerModuloP.pow:192 (8,398 samples, 0.40%)</title><rect x="1114.8" y="277" width="4.7" height="15.0" fill="rgb(211,229,30)" rx="2" ry="2" />
<text  x="1117.80" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:181 (11,004 samples, 0.52%)</title><rect x="1084.2" y="309" width="6.1" height="15.0" fill="rgb(240,155,50)" rx="2" ry="2" />
<text  x="1087.20" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.fixed:602 (3,146 samples, 0.15%)</title><rect x="1119.5" y="261" width="1.7" height="15.0" fill="rgb(223,160,29)" rx="2" ry="2" />
<text  x="1122.48" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get1:64 (6,834 samples, 0.32%)</title><rect x="622.9" y="277" width="3.8" height="15.0" fill="rgb(213,70,36)" rx="2" ry="2" />
<text  x="625.93" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:492 (240,444 samples, 11.33%)</title><rect x="53.7" y="261" width="133.8" height="15.0" fill="rgb(223,75,14)" rx="2" ry="2" />
<text  x="56.72" y="271.5" >sun.security.uti..</text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2351 (40,346 samples, 1.90%)</title><rect x="56.9" y="165" width="22.5" height="15.0" fill="rgb(239,39,4)" rx="2" ry="2" />
<text  x="59.92" y="175.5" >j..</text>
</g>
<g >
<title>java.math.BigInteger.subtract:1516 (4,200 samples, 0.20%)</title><rect x="1004.8" y="261" width="2.4" height="15.0" fill="rgb(223,117,24)" rx="2" ry="2" />
<text  x="1007.84" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:262 (6,282 samples, 0.30%)</title><rect x="626.7" y="293" width="3.5" height="15.0" fill="rgb(210,195,29)" rx="2" ry="2" />
<text  x="629.73" y="303.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:164 (65,697 samples, 3.10%)</title><rect x="1004.8" y="309" width="36.6" height="15.0" fill="rgb(206,180,15)" rx="2" ry="2" />
<text  x="1007.84" y="319.5" >sun..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:492 (238,914 samples, 11.26%)</title><rect x="230.6" y="197" width="132.9" height="15.0" fill="rgb(252,14,50)" rx="2" ry="2" />
<text  x="233.60" y="207.5" >sun.security.uti..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (8,398 samples, 0.40%)</title><rect x="1114.8" y="245" width="4.7" height="15.0" fill="rgb(224,204,44)" rx="2" ry="2" />
<text  x="1117.80" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (35,090 samples, 1.65%)</title><rect x="985.3" y="261" width="19.5" height="15.0" fill="rgb(237,174,26)" rx="2" ry="2" />
<text  x="988.32" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint.asAffine:76 (51,908 samples, 2.45%)</title><rect x="1004.8" y="293" width="28.9" height="15.0" fill="rgb(238,90,2)" rx="2" ry="2" />
<text  x="1007.84" y="303.5" >su..</text>
</g>
<g >
<title>sun.security.ec.ECOperations.seedToScalar:185 (17,280 samples, 0.81%)</title><rect x="521.3" y="309" width="9.6" height="15.0" fill="rgb(253,158,0)" rx="2" ry="2" />
<text  x="524.28" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:250 (9,956 samples, 0.47%)</title><rect x="1053.6" y="261" width="5.5" height="15.0" fill="rgb(211,23,4)" rx="2" ry="2" />
<text  x="1056.61" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint.fixed:55 (502,355 samples, 23.68%)</title><rect x="705.6" y="277" width="279.4" height="15.0" fill="rgb(210,67,22)" rx="2" ry="2" />
<text  x="708.59" y="287.5" >sun.security.ec.point.ProjectivePoint..</text>
</g>
<g >
<title>jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="501" width="1178.5" height="15.0" fill="rgb(215,51,38)" rx="2" ry="2" />
<text  x="13.29" y="511.5" >jdk.internal.reflect.NativeMethodAccessorImpl.invoke:62</text>
</g>
<g >
<title>sun.security.provider.DigestBase.&lt;init&gt;:86 (1,584 samples, 0.07%)</title><rect x="23.7" y="117" width="0.9" height="15.0" fill="rgb(253,219,34)" rx="2" ry="2" />
<text  x="26.69" y="127.5" ></text>
</g>
<g >
<title>sun.security.util.DerOutputStream.&lt;init&gt;:66 (1,048 samples, 0.05%)</title><rect x="1173.1" y="325" width="0.6" height="15.0" fill="rgb(225,87,47)" rx="2" ry="2" />
<text  x="1176.09" y="335.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get1:64 (17,320 samples, 0.82%)</title><rect x="1013.0" y="245" width="9.6" height="15.0" fill="rgb(211,45,41)" rx="2" ry="2" />
<text  x="1016.01" y="255.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.forParameters:91 (502,107 samples, 23.67%)</title><rect x="221.3" y="341" width="279.3" height="15.0" fill="rgb(213,114,20)" rx="2" ry="2" />
<text  x="224.28" y="351.5" >sun.security.ec.ECDSAOperations.forPa..</text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3413 (15,920 samples, 0.75%)</title><rect x="469.3" y="117" width="8.9" height="15.0" fill="rgb(221,167,24)" rx="2" ry="2" />
<text  x="472.31" y="127.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:250 (10,492 samples, 0.49%)</title><rect x="1075.4" y="261" width="5.9" height="15.0" fill="rgb(245,174,42)" rx="2" ry="2" />
<text  x="1078.44" y="271.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="613" width="1178.5" height="15.0" fill="rgb(215,12,42)" rx="2" ry="2" />
<text  x="13.29" y="623.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint$Mutable.&lt;init&gt;:103 (14,678 samples, 0.69%)</title><rect x="662.2" y="277" width="8.2" height="15.0" fill="rgb(223,77,40)" rx="2" ry="2" />
<text  x="665.19" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get1:148 (9,424 samples, 0.44%)</title><rect x="1109.6" y="245" width="5.2" height="15.0" fill="rgb(224,66,50)" rx="2" ry="2" />
<text  x="1112.56" y="255.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.forParameters:90 (310,652 samples, 14.64%)</title><rect x="48.5" y="341" width="172.8" height="15.0" fill="rgb(208,75,34)" rx="2" ry="2" />
<text  x="51.48" y="351.5" >sun.security.ec.ECDSAO..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (5,784 samples, 0.27%)</title><rect x="197.4" y="245" width="3.2" height="15.0" fill="rgb(241,142,40)" rx="2" ry="2" />
<text  x="200.38" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (5,776 samples, 0.27%)</title><rect x="682.0" y="213" width="3.2" height="15.0" fill="rgb(228,213,20)" rx="2" ry="2" />
<text  x="684.98" y="223.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (11,020 samples, 0.52%)</title><rect x="560.6" y="277" width="6.1" height="15.0" fill="rgb(216,37,25)" rx="2" ry="2" />
<text  x="563.62" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.limbsToByteArray:453 (10,972 samples, 0.52%)</title><rect x="1060.3" y="277" width="6.1" height="15.0" fill="rgb(241,152,40)" rx="2" ry="2" />
<text  x="1063.31" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.&lt;init&gt;:124 (1,572 samples, 0.07%)</title><rect x="190.7" y="309" width="0.8" height="15.0" fill="rgb(246,151,51)" rx="2" ry="2" />
<text  x="193.67" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:64 (12,045 samples, 0.57%)</title><rect x="1053.6" y="277" width="6.7" height="15.0" fill="rgb(238,80,23)" rx="2" ry="2" />
<text  x="1056.61" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:163 (831,055 samples, 39.18%)</title><rect x="542.6" y="309" width="462.2" height="15.0" fill="rgb(223,38,52)" rx="2" ry="2" />
<text  x="545.56" y="319.5" >sun.security.ec.ECDSAOperations.signDigest:163</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1203 (34,044 samples, 1.60%)</title><rect x="405.2" y="69" width="18.9" height="15.0" fill="rgb(209,134,23)" rx="2" ry="2" />
<text  x="408.20" y="79.5" ></text>
</g>
<g >
<title>sun.security.util.math.IntegerModuloP.pow:191 (25,172 samples, 1.19%)</title><rect x="1008.6" y="261" width="14.0" height="15.0" fill="rgb(250,138,32)" rx="2" ry="2" />
<text  x="1011.64" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (8,398 samples, 0.40%)</title><rect x="1114.8" y="261" width="4.7" height="15.0" fill="rgb(242,94,0)" rx="2" ry="2" />
<text  x="1117.80" y="271.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (1,578 samples, 0.07%)</title><rect x="1147.4" y="341" width="0.9" height="15.0" fill="rgb(227,138,4)" rx="2" ry="2" />
<text  x="1150.44" y="351.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.multiply:575 (4,078 samples, 0.19%)</title><rect x="1039.1" y="261" width="2.3" height="15.0" fill="rgb(243,102,11)" rx="2" ry="2" />
<text  x="1042.12" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.encode:236 (524 samples, 0.02%)</title><rect x="1059.1" y="245" width="0.3" height="15.0" fill="rgb(220,157,19)" rx="2" ry="2" />
<text  x="1062.15" y="255.5" ></text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.get:936 (1,568 samples, 0.07%)</title><rect x="12.9" y="213" width="0.9" height="15.0" fill="rgb(235,116,51)" rx="2" ry="2" />
<text  x="15.91" y="223.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.limbsToByteArray:454 (12,568 samples, 0.59%)</title><rect x="1066.4" y="277" width="7.0" height="15.0" fill="rgb(249,149,49)" rx="2" ry="2" />
<text  x="1069.41" y="287.5" ></text>
</g>
<g >
<title>org.sample.BenchmarkSigning.secp256r1_1024B:69 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="437" width="1178.5" height="15.0" fill="rgb(224,98,36)" rx="2" ry="2" />
<text  x="13.29" y="447.5" >org.sample.BenchmarkSigning.secp256r1_1024B:69</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.fixed:611 (3,146 samples, 0.15%)</title><rect x="1119.5" y="245" width="1.7" height="15.0" fill="rgb(237,188,0)" rx="2" ry="2" />
<text  x="1122.48" y="255.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.toByteArray:211 (5,242 samples, 0.25%)</title><rect x="1160.3" y="341" width="2.9" height="15.0" fill="rgb(240,171,47)" rx="2" ry="2" />
<text  x="1163.27" y="351.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1163 (87,986 samples, 4.15%)</title><rect x="403.2" y="85" width="48.9" height="15.0" fill="rgb(227,15,38)" rx="2" ry="2" />
<text  x="406.16" y="95.5" >java..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:64 (244,349 samples, 11.52%)</title><rect x="363.5" y="245" width="135.9" height="15.0" fill="rgb(246,47,28)" rx="2" ry="2" />
<text  x="366.50" y="255.5" >sun.security.util..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.setValue:507 (240,444 samples, 11.33%)</title><rect x="53.7" y="245" width="133.8" height="15.0" fill="rgb(223,227,34)" rx="2" ry="2" />
<text  x="56.72" y="255.5" >sun.security.uti..</text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (1,050 samples, 0.05%)</title><rect x="515.7" y="245" width="0.6" height="15.0" fill="rgb(231,26,42)" rx="2" ry="2" />
<text  x="518.75" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:250 (2,624 samples, 0.12%)</title><rect x="1090.3" y="261" width="1.5" height="15.0" fill="rgb(219,176,0)" rx="2" ry="2" />
<text  x="1093.32" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (9,436 samples, 0.44%)</title><rect x="662.2" y="261" width="5.2" height="15.0" fill="rgb(235,213,52)" rx="2" ry="2" />
<text  x="665.19" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.encode:238 (9,424 samples, 0.44%)</title><rect x="524.8" y="261" width="5.2" height="15.0" fill="rgb(242,146,51)" rx="2" ry="2" />
<text  x="527.78" y="271.5" ></text>
</g>
<g >
<title>java.security.MessageDigest.digest:385 (4,198 samples, 0.20%)</title><rect x="513.4" y="245" width="2.3" height="15.0" fill="rgb(207,48,12)" rx="2" ry="2" />
<text  x="516.41" y="255.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1100 (34,044 samples, 1.60%)</title><rect x="405.2" y="53" width="18.9" height="15.0" fill="rgb(205,14,22)" rx="2" ry="2" />
<text  x="408.20" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3413 (22,493 samples, 1.06%)</title><rect x="156.0" y="181" width="12.5" height="15.0" fill="rgb(219,71,34)" rx="2" ry="2" />
<text  x="159.02" y="191.5" ></text>
</g>
<g >
<title>java.math.BigInteger.subtract:1519 (2,628 samples, 0.12%)</title><rect x="1007.2" y="261" width="1.4" height="15.0" fill="rgb(243,226,2)" rx="2" ry="2" />
<text  x="1010.18" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (3,156 samples, 0.15%)</title><rect x="602.0" y="213" width="1.7" height="15.0" fill="rgb(244,187,16)" rx="2" ry="2" />
<text  x="604.97" y="223.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:4102 (1,048 samples, 0.05%)</title><rect x="404.6" y="37" width="0.6" height="15.0" fill="rgb(218,90,4)" rx="2" ry="2" />
<text  x="407.62" y="47.5" ></text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:515 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="597" width="1178.5" height="15.0" fill="rgb(229,89,5)" rx="2" ry="2" />
<text  x="13.29" y="607.5" >java.util.concurrent.Executors$RunnableAdapter.call:515</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValuePositive:306 (58,836 samples, 2.77%)</title><rect x="466.7" y="149" width="32.7" height="15.0" fill="rgb(238,11,28)" rx="2" ry="2" />
<text  x="469.69" y="159.5" >su..</text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1128 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="629" width="1178.5" height="15.0" fill="rgb(235,36,52)" rx="2" ry="2" />
<text  x="13.29" y="639.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1128</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.limbsToByteArray:453 (7,835 samples, 0.37%)</title><rect x="1045.5" y="277" width="4.3" height="15.0" fill="rgb(235,223,28)" rx="2" ry="2" />
<text  x="1048.46" y="287.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.write:156 (11,536 samples, 0.54%)</title><rect x="1180.1" y="293" width="6.4" height="15.0" fill="rgb(228,142,31)" rx="2" ry="2" />
<text  x="1183.09" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:153 (249,862 samples, 11.78%)</title><rect x="48.5" y="293" width="139.0" height="15.0" fill="rgb(213,223,50)" rx="2" ry="2" />
<text  x="51.48" y="303.5" >sun.security.util..</text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:247 (5,234 samples, 0.25%)</title><rect x="1141.3" y="357" width="2.9" height="15.0" fill="rgb(222,108,21)" rx="2" ry="2" />
<text  x="1144.32" y="367.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (11,524 samples, 0.54%)</title><rect x="1121.2" y="293" width="6.4" height="15.0" fill="rgb(218,141,34)" rx="2" ry="2" />
<text  x="1124.23" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:249 (7,340 samples, 0.35%)</title><rect x="1144.2" y="357" width="4.1" height="15.0" fill="rgb(208,18,44)" rx="2" ry="2" />
<text  x="1147.23" y="367.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (3,138 samples, 0.15%)</title><rect x="1154.7" y="325" width="1.8" height="15.0" fill="rgb(208,79,37)" rx="2" ry="2" />
<text  x="1157.73" y="335.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:112 (25,143 samples, 1.19%)</title><rect x="438.1" y="53" width="14.0" height="15.0" fill="rgb(207,169,34)" rx="2" ry="2" />
<text  x="441.12" y="63.5" ></text>
</g>
<g >
<title>java.lang.reflect.ReflectAccess.copyConstructor:155 (7,862 samples, 0.37%)</title><rect x="13.8" y="165" width="4.4" height="15.0" fill="rgb(220,9,31)" rx="2" ry="2" />
<text  x="16.79" y="175.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.toAffinePoint:84 (2,088 samples, 0.10%)</title><rect x="499.4" y="261" width="1.2" height="15.0" fill="rgb(243,10,45)" rx="2" ry="2" />
<text  x="502.42" y="271.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3413 (13,628 samples, 0.64%)</title><rect x="338.1" y="117" width="7.6" height="15.0" fill="rgb(248,12,43)" rx="2" ry="2" />
<text  x="341.12" y="127.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.fixed:602 (29,332 samples, 1.38%)</title><rect x="689.3" y="261" width="16.3" height="15.0" fill="rgb(243,85,23)" rx="2" ry="2" />
<text  x="692.28" y="271.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRight:3375 (68,055 samples, 3.21%)</title><rect x="149.6" y="197" width="37.9" height="15.0" fill="rgb(235,108,40)" rx="2" ry="2" />
<text  x="152.61" y="207.5" >jav..</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:238 (1,576 samples, 0.07%)</title><rect x="39.4" y="245" width="0.9" height="15.0" fill="rgb(226,204,38)" rx="2" ry="2" />
<text  x="42.45" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.setValue:507 (238,914 samples, 11.26%)</title><rect x="230.6" y="181" width="132.9" height="15.0" fill="rgb(248,221,12)" rx="2" ry="2" />
<text  x="233.60" y="191.5" >sun.security.uti..</text>
</g>
<g >
<title>java.security.MessageDigest.digest:385 (4,714 samples, 0.22%)</title><rect x="507.6" y="213" width="2.6" height="15.0" fill="rgb(232,185,53)" rx="2" ry="2" />
<text  x="510.58" y="223.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:250 (7,850 samples, 0.37%)</title><rect x="1092.1" y="261" width="4.3" height="15.0" fill="rgb(205,216,52)" rx="2" ry="2" />
<text  x="1095.07" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:143 (11,546 samples, 0.54%)</title><rect x="194.2" y="277" width="6.4" height="15.0" fill="rgb(240,90,38)" rx="2" ry="2" />
<text  x="197.17" y="287.5" ></text>
</g>
<g >
<title>sun.security.provider.DigestBase.engineDigest:187 (4,198 samples, 0.20%)</title><rect x="513.4" y="213" width="2.3" height="15.0" fill="rgb(229,224,6)" rx="2" ry="2" />
<text  x="516.41" y="223.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValuePositive:303 (5,236 samples, 0.25%)</title><rect x="230.6" y="149" width="2.9" height="15.0" fill="rgb(214,57,31)" rx="2" ry="2" />
<text  x="233.60" y="159.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.fixed:602 (482,437 samples, 22.74%)</title><rect x="716.7" y="261" width="268.3" height="15.0" fill="rgb(209,193,25)" rx="2" ry="2" />
<text  x="719.67" y="271.5" >sun.security.util.math.intpoly.Inte..</text>
</g>
<g >
<title>sun.security.provider.AbstractDrbg.engineNextBytes:334 (26,206 samples, 1.24%)</title><rect x="506.7" y="293" width="14.6" height="15.0" fill="rgb(237,219,25)" rx="2" ry="2" />
<text  x="509.70" y="303.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:186 (37,184 samples, 1.75%)</title><rect x="313.9" y="85" width="20.7" height="15.0" fill="rgb(240,152,51)" rx="2" ry="2" />
<text  x="316.93" y="95.5" ></text>
</g>
<g >
<title>java.util.concurrent.CopyOnWriteArrayList.iterator:1024 (739 samples, 0.03%)</title><rect x="1188.8" y="565" width="0.5" height="15.0" fill="rgb(219,194,53)" rx="2" ry="2" />
<text  x="1191.84" y="575.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="517" width="1178.5" height="15.0" fill="rgb(218,11,38)" rx="2" ry="2" />
<text  x="13.29" y="527.5" >jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke:43</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:740 (239,639 samples, 11.30%)</title><rect x="366.1" y="213" width="133.3" height="15.0" fill="rgb(205,56,33)" rx="2" ry="2" />
<text  x="369.12" y="223.5" >sun.security.uti..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get1:148 (17,320 samples, 0.82%)</title><rect x="1013.0" y="229" width="9.6" height="15.0" fill="rgb(229,225,13)" rx="2" ry="2" />
<text  x="1016.01" y="239.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestImpl:390 (26,206 samples, 1.24%)</title><rect x="506.7" y="341" width="14.6" height="15.0" fill="rgb(250,224,48)" rx="2" ry="2" />
<text  x="509.70" y="351.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2352 (20,448 samples, 0.96%)</title><rect x="391.8" y="101" width="11.4" height="15.0" fill="rgb(238,124,38)" rx="2" ry="2" />
<text  x="394.79" y="111.5" ></text>
</g>
<g >
<title>sun.security.util.math.IntegerFieldModuloP.getElement:95 (8,896 samples, 0.42%)</title><rect x="1092.1" y="293" width="4.9" height="15.0" fill="rgb(214,119,36)" rx="2" ry="2" />
<text  x="1095.07" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValuePositive:306 (51,920 samples, 2.45%)</title><rect x="334.6" y="149" width="28.9" height="15.0" fill="rgb(210,169,8)" rx="2" ry="2" />
<text  x="337.62" y="159.5" >su..</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (1,578 samples, 0.07%)</title><rect x="1147.4" y="325" width="0.9" height="15.0" fill="rgb(214,0,36)" rx="2" ry="2" />
<text  x="1150.44" y="335.5" ></text>
</g>
<g >
<title>java.math.BigInteger.subtract:1530 (1,574 samples, 0.07%)</title><rect x="1097.0" y="261" width="0.9" height="15.0" fill="rgb(229,55,42)" rx="2" ry="2" />
<text  x="1100.02" y="271.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toByteArray:4119 (3,678 samples, 0.17%)</title><rect x="1156.5" y="325" width="2.0" height="15.0" fill="rgb(210,144,3)" rx="2" ry="2" />
<text  x="1159.48" y="335.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.encode:180 (9,424 samples, 0.44%)</title><rect x="524.8" y="245" width="5.2" height="15.0" fill="rgb(240,65,11)" rx="2" ry="2" />
<text  x="527.78" y="255.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3434 (38,206 samples, 1.80%)</title><rect x="478.2" y="117" width="21.2" height="15.0" fill="rgb(222,191,40)" rx="2" ry="2" />
<text  x="481.17" y="127.5" >j..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:64 (11,546 samples, 0.54%)</title><rect x="194.2" y="293" width="6.4" height="15.0" fill="rgb(235,89,41)" rx="2" ry="2" />
<text  x="197.17" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.limbsToByteArray:453 (6,830 samples, 0.32%)</title><rect x="532.6" y="277" width="3.8" height="15.0" fill="rgb(242,69,30)" rx="2" ry="2" />
<text  x="535.64" y="287.5" ></text>
</g>
<g >
<title>java.security.MessageDigest$Delegate.engineDigest:639 (4,714 samples, 0.22%)</title><rect x="507.6" y="197" width="2.6" height="15.0" fill="rgb(215,187,40)" rx="2" ry="2" />
<text  x="510.58" y="207.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2355 (114,208 samples, 5.38%)</title><rect x="403.2" y="101" width="63.5" height="15.0" fill="rgb(214,53,18)" rx="2" ry="2" />
<text  x="406.16" y="111.5" >java.m..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (9,948 samples, 0.47%)</title><rect x="617.4" y="277" width="5.5" height="15.0" fill="rgb(213,37,52)" rx="2" ry="2" />
<text  x="620.40" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.&lt;init&gt;:128 (14,170 samples, 0.67%)</title><rect x="192.7" y="309" width="7.9" height="15.0" fill="rgb(205,112,2)" rx="2" ry="2" />
<text  x="195.71" y="319.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:236 (46,132 samples, 2.17%)</title><rect x="13.8" y="245" width="25.6" height="15.0" fill="rgb(247,181,22)" rx="2" ry="2" />
<text  x="16.79" y="255.5" >s..</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:236 (57,134 samples, 2.69%)</title><rect x="10.3" y="373" width="31.8" height="15.0" fill="rgb(246,187,48)" rx="2" ry="2" />
<text  x="13.29" y="383.5" >su..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (12,060 samples, 0.57%)</title><rect x="595.3" y="261" width="6.7" height="15.0" fill="rgb(222,79,41)" rx="2" ry="2" />
<text  x="598.26" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (9,436 samples, 0.44%)</title><rect x="662.2" y="245" width="5.2" height="15.0" fill="rgb(223,127,20)" rx="2" ry="2" />
<text  x="665.19" y="255.5" ></text>
</g>
<g >
<title>java.math.BigInteger.subtract:1516 (7,326 samples, 0.35%)</title><rect x="214.3" y="309" width="4.1" height="15.0" fill="rgb(208,45,22)" rx="2" ry="2" />
<text  x="217.29" y="319.5" ></text>
</g>
<g >
<title>sun.security.provider.SHA2.&lt;init&gt;:86 (21,504 samples, 1.01%)</title><rect x="27.5" y="133" width="11.9" height="15.0" fill="rgb(225,48,47)" rx="2" ry="2" />
<text  x="30.49" y="143.5" ></text>
</g>
<g >
<title>sun.security.util.math.IntegerModuloP.pow:201 (13,610 samples, 0.64%)</title><rect x="1026.1" y="261" width="7.6" height="15.0" fill="rgb(239,102,29)" rx="2" ry="2" />
<text  x="1029.14" y="271.5" ></text>
</g>
<g >
<title>java.lang.Object.clone:-1 (1,048 samples, 0.05%)</title><rect x="1169.6" y="309" width="0.6" height="15.0" fill="rgb(235,185,12)" rx="2" ry="2" />
<text  x="1172.60" y="319.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (5,242 samples, 0.25%)</title><rect x="1160.3" y="325" width="2.9" height="15.0" fill="rgb(231,139,45)" rx="2" ry="2" />
<text  x="1163.27" y="335.5" ></text>
</g>
<g >
<title>java.security.Signature$Delegate.engineSign:1402 (2,055,295 samples, 96.89%)</title><rect x="45.6" y="389" width="1143.2" height="15.0" fill="rgb(237,139,39)" rx="2" ry="2" />
<text  x="48.57" y="399.5" >java.security.Signature$Delegate.engineSign:1402</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (12,499 samples, 0.59%)</title><rect x="581.0" y="245" width="7.0" height="15.0" fill="rgb(237,98,41)" rx="2" ry="2" />
<text  x="584.03" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:64 (6,684 samples, 0.32%)</title><rect x="658.5" y="261" width="3.7" height="15.0" fill="rgb(252,162,13)" rx="2" ry="2" />
<text  x="661.47" y="271.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:4102 (1,048 samples, 0.05%)</title><rect x="277.5" y="37" width="0.6" height="15.0" fill="rgb(233,149,37)" rx="2" ry="2" />
<text  x="280.50" y="47.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.finalReduce:362 (6,806 samples, 0.32%)</title><rect x="1049.8" y="261" width="3.8" height="15.0" fill="rgb(231,119,40)" rx="2" ry="2" />
<text  x="1052.82" y="271.5" ></text>
</g>
<g >
<title>sun.security.provider.DigestBase.engineDigest:187 (5,232 samples, 0.25%)</title><rect x="45.6" y="309" width="2.9" height="15.0" fill="rgb(205,122,29)" rx="2" ry="2" />
<text  x="48.57" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get1:64 (9,424 samples, 0.44%)</title><rect x="1109.6" y="261" width="5.2" height="15.0" fill="rgb(235,5,49)" rx="2" ry="2" />
<text  x="1112.56" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.toByteArray:857 (3,664 samples, 0.17%)</title><rect x="1171.6" y="341" width="2.1" height="15.0" fill="rgb(215,121,32)" rx="2" ry="2" />
<text  x="1174.64" y="351.5" ></text>
</g>
<g >
<title>java.security.Provider.getService:1303 (1,568 samples, 0.07%)</title><rect x="12.9" y="229" width="0.9" height="15.0" fill="rgb(212,148,23)" rx="2" ry="2" />
<text  x="15.91" y="239.5" ></text>
</g>
<g >
<title>sun.security.ec.SunEC$ProviderService.newInstance:108 (57,134 samples, 2.69%)</title><rect x="10.3" y="357" width="31.8" height="15.0" fill="rgb(236,70,20)" rx="2" ry="2" />
<text  x="13.29" y="367.5" >su..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1191 (3,668 samples, 0.17%)</title><rect x="403.2" y="69" width="2.0" height="15.0" fill="rgb(233,31,18)" rx="2" ry="2" />
<text  x="406.16" y="79.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestImpl:420 (1,149,784 samples, 54.20%)</title><rect x="500.6" y="357" width="639.6" height="15.0" fill="rgb(247,125,5)" rx="2" ry="2" />
<text  x="503.58" y="367.5" >sun.security.ec.ECDSASignature.signDigestImpl:420</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (18,312 samples, 0.86%)</title><rect x="550.4" y="261" width="10.2" height="15.0" fill="rgb(237,127,34)" rx="2" ry="2" />
<text  x="553.43" y="271.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2355 (107,394 samples, 5.06%)</title><rect x="274.9" y="101" width="59.7" height="15.0" fill="rgb(254,21,52)" rx="2" ry="2" />
<text  x="277.88" y="111.5" >java.m..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get1:148 (5,776 samples, 0.27%)</title><rect x="682.0" y="245" width="3.2" height="15.0" fill="rgb(209,14,51)" rx="2" ry="2" />
<text  x="684.98" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:64 (17,280 samples, 0.81%)</title><rect x="521.3" y="293" width="9.6" height="15.0" fill="rgb(240,195,52)" rx="2" ry="2" />
<text  x="524.28" y="303.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:166 (7,334 samples, 0.35%)</title><rect x="1041.4" y="309" width="4.1" height="15.0" fill="rgb(216,26,10)" rx="2" ry="2" />
<text  x="1044.38" y="319.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint$Mutable.&lt;init&gt;:104 (20,905 samples, 0.99%)</title><rect x="670.4" y="277" width="11.6" height="15.0" fill="rgb(239,34,39)" rx="2" ry="2" />
<text  x="673.35" y="287.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:157 (3,140 samples, 0.15%)</title><rect x="12.0" y="261" width="1.8" height="15.0" fill="rgb(220,222,26)" rx="2" ry="2" />
<text  x="15.04" y="271.5" ></text>
</g>
<g >
<title>java.security.Provider.getService:1303 (2,618 samples, 0.12%)</title><rect x="43.8" y="357" width="1.5" height="15.0" fill="rgb(241,148,29)" rx="2" ry="2" />
<text  x="46.82" y="367.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (12,040 samples, 0.57%)</title><rect x="568.8" y="277" width="6.7" height="15.0" fill="rgb(226,166,18)" rx="2" ry="2" />
<text  x="571.79" y="287.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1192 (3,152 samples, 0.15%)</title><rect x="369.0" y="117" width="1.8" height="15.0" fill="rgb(217,66,45)" rx="2" ry="2" />
<text  x="372.04" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3410 (4,710 samples, 0.22%)</title><rect x="466.7" y="117" width="2.6" height="15.0" fill="rgb(218,172,12)" rx="2" ry="2" />
<text  x="469.69" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3434 (32,002 samples, 1.51%)</title><rect x="345.7" y="117" width="17.8" height="15.0" fill="rgb(245,8,37)" rx="2" ry="2" />
<text  x="348.70" y="127.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (8,892 samples, 0.42%)</title><rect x="1109.9" y="229" width="4.9" height="15.0" fill="rgb(227,118,0)" rx="2" ry="2" />
<text  x="1112.86" y="239.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (17,298 samples, 0.82%)</title><rect x="1099.9" y="245" width="9.7" height="15.0" fill="rgb(218,89,37)" rx="2" ry="2" />
<text  x="1102.94" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (12,036 samples, 0.57%)</title><rect x="603.7" y="261" width="6.7" height="15.0" fill="rgb(215,9,3)" rx="2" ry="2" />
<text  x="606.73" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValuePositive:305 (181,758 samples, 8.57%)</title><rect x="233.5" y="149" width="101.1" height="15.0" fill="rgb(206,36,32)" rx="2" ry="2" />
<text  x="236.51" y="159.5" >sun.security..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (12,036 samples, 0.57%)</title><rect x="603.7" y="245" width="6.7" height="15.0" fill="rgb(209,116,8)" rx="2" ry="2" />
<text  x="606.73" y="255.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1192 (1,568 samples, 0.07%)</title><rect x="232.6" y="117" width="0.9" height="15.0" fill="rgb(238,70,19)" rx="2" ry="2" />
<text  x="235.64" y="127.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:245 (2,092 samples, 0.10%)</title><rect x="1140.2" y="357" width="1.1" height="15.0" fill="rgb(227,141,37)" rx="2" ry="2" />
<text  x="1143.16" y="367.5" ></text>
</g>
<g >
<title>sun.security.provider.SHA2.&lt;init&gt;:85 (5,236 samples, 0.25%)</title><rect x="24.6" y="133" width="2.9" height="15.0" fill="rgb(251,81,35)" rx="2" ry="2" />
<text  x="27.57" y="143.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.encode:236 (522 samples, 0.02%)</title><rect x="524.5" y="261" width="0.3" height="15.0" fill="rgb(254,51,44)" rx="2" ry="2" />
<text  x="527.49" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:153 (252,524 samples, 11.90%)</title><rect x="223.0" y="229" width="140.5" height="15.0" fill="rgb(243,131,22)" rx="2" ry="2" />
<text  x="226.03" y="239.5" >sun.security.util..</text>
</g>
<g >
<title>sun.security.ec.ECOperations.seedToScalar:187 (3,146 samples, 0.15%)</title><rect x="530.9" y="309" width="1.7" height="15.0" fill="rgb(233,95,40)" rx="2" ry="2" />
<text  x="533.89" y="319.5" ></text>
</g>
<g >
<title>java.lang.reflect.Constructor.copy:150 (7,862 samples, 0.37%)</title><rect x="13.8" y="149" width="4.4" height="15.0" fill="rgb(212,146,32)" rx="2" ry="2" />
<text  x="16.79" y="159.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (11,536 samples, 0.54%)</title><rect x="1180.1" y="245" width="6.4" height="15.0" fill="rgb(253,70,45)" rx="2" ry="2" />
<text  x="1183.09" y="255.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.engineSign:463 (5,232 samples, 0.25%)</title><rect x="45.6" y="373" width="2.9" height="15.0" fill="rgb(236,184,12)" rx="2" ry="2" />
<text  x="48.57" y="383.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:179 (15,736 samples, 0.74%)</title><rect x="1075.4" y="309" width="8.8" height="15.0" fill="rgb(242,98,1)" rx="2" ry="2" />
<text  x="1078.44" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (8,916 samples, 0.42%)</title><rect x="202.3" y="261" width="5.0" height="15.0" fill="rgb(224,49,6)" rx="2" ry="2" />
<text  x="205.35" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.IntegerModuloP.pow:191 (26,722 samples, 1.26%)</title><rect x="1099.9" y="277" width="14.9" height="15.0" fill="rgb(219,101,1)" rx="2" ry="2" />
<text  x="1102.94" y="287.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2351 (37,751 samples, 1.78%)</title><rect x="370.8" y="101" width="21.0" height="15.0" fill="rgb(252,150,38)" rx="2" ry="2" />
<text  x="373.79" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.mod:2699 (172,407 samples, 8.13%)</title><rect x="370.8" y="133" width="95.9" height="15.0" fill="rgb(220,142,20)" rx="2" ry="2" />
<text  x="373.79" y="143.5" >java.math.B..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:254 (1,572 samples, 0.07%)</title><rect x="530.0" y="277" width="0.9" height="15.0" fill="rgb(239,1,51)" rx="2" ry="2" />
<text  x="533.02" y="287.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainder:2343 (181,758 samples, 8.57%)</title><rect x="233.5" y="117" width="101.1" height="15.0" fill="rgb(254,50,44)" rx="2" ry="2" />
<text  x="236.51" y="127.5" >java.math.Bi..</text>
</g>
<g >
<title>java.security.DrbgParameters.nextBytes:541 (1,576 samples, 0.07%)</title><rect x="506.7" y="277" width="0.9" height="15.0" fill="rgb(231,5,19)" rx="2" ry="2" />
<text  x="509.70" y="287.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.doPeriodic:183 (1,299 samples, 0.06%)</title><rect x="1188.8" y="597" width="0.8" height="15.0" fill="rgb(223,127,40)" rx="2" ry="2" />
<text  x="1191.84" y="607.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainder:2343 (172,407 samples, 8.13%)</title><rect x="370.8" y="117" width="95.9" height="15.0" fill="rgb(246,219,46)" rx="2" ry="2" />
<text  x="373.79" y="127.5" >java.math.B..</text>
</g>
<g >
<title>java.lang.Thread.run:834 (2,120,012 samples, 99.94%)</title><rect x="10.3" y="661" width="1179.3" height="15.0" fill="rgb(215,162,50)" rx="2" ry="2" />
<text  x="13.29" y="671.5" >java.lang.Thread.run:834</text>
</g>
<g >
<title>sun.security.util.DerOutputStream.putInteger:165 (3,678 samples, 0.17%)</title><rect x="1156.5" y="341" width="2.0" height="15.0" fill="rgb(222,101,52)" rx="2" ry="2" />
<text  x="1159.48" y="351.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:439 (1,299 samples, 0.06%)</title><rect x="1188.8" y="613" width="0.8" height="15.0" fill="rgb(207,155,12)" rx="2" ry="2" />
<text  x="1191.84" y="623.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (5,242 samples, 0.25%)</title><rect x="667.4" y="229" width="3.0" height="15.0" fill="rgb(239,91,28)" rx="2" ry="2" />
<text  x="670.43" y="239.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getSmallValue:163 (1,572 samples, 0.07%)</title><rect x="190.7" y="293" width="0.8" height="15.0" fill="rgb(250,94,24)" rx="2" ry="2" />
<text  x="193.67" y="303.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:483 (1,572 samples, 0.07%)</title><rect x="42.9" y="309" width="0.9" height="15.0" fill="rgb(226,131,10)" rx="2" ry="2" />
<text  x="45.95" y="319.5" ></text>
</g>
<g >
<title>java.math.BigInteger.subtract:1530 (7,326 samples, 0.35%)</title><rect x="214.3" y="293" width="4.1" height="15.0" fill="rgb(236,80,9)" rx="2" ry="2" />
<text  x="217.29" y="303.5" ></text>
</g>
<g >
<title>java.security.Provider.getService:1299 (3,142 samples, 0.15%)</title><rect x="42.1" y="357" width="1.7" height="15.0" fill="rgb(242,195,20)" rx="2" ry="2" />
<text  x="45.07" y="367.5" ></text>
</g>
<g >
<title>java.security.Signature.getInstance:405 (524 samples, 0.02%)</title><rect x="45.3" y="405" width="0.3" height="15.0" fill="rgb(228,138,26)" rx="2" ry="2" />
<text  x="48.28" y="415.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:153 (244,349 samples, 11.52%)</title><rect x="363.5" y="229" width="135.9" height="15.0" fill="rgb(248,2,49)" rx="2" ry="2" />
<text  x="366.50" y="239.5" >sun.security.util..</text>
</g>
<g >
<title>sun.security.util.math.IntegerModuloP.pow:201 (3,146 samples, 0.15%)</title><rect x="1119.5" y="277" width="1.7" height="15.0" fill="rgb(221,148,15)" rx="2" ry="2" />
<text  x="1122.48" y="287.5" ></text>
</g>
<g >
<title>java.security.Provider.newInstanceUtil:154 (38,270 samples, 1.80%)</title><rect x="18.2" y="213" width="21.2" height="15.0" fill="rgb(234,135,5)" rx="2" ry="2" />
<text  x="21.16" y="223.5" >j..</text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1176 (4,202 samples, 0.20%)</title><rect x="368.5" y="133" width="2.3" height="15.0" fill="rgb(236,26,20)" rx="2" ry="2" />
<text  x="371.45" y="143.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:64 (249,862 samples, 11.78%)</title><rect x="48.5" y="309" width="139.0" height="15.0" fill="rgb(207,161,2)" rx="2" ry="2" />
<text  x="51.48" y="319.5" >sun.security.util..</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (19,397 samples, 0.91%)</title><rect x="381.0" y="85" width="10.8" height="15.0" fill="rgb(234,56,41)" rx="2" ry="2" />
<text  x="384.00" y="95.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:255 (20,428 samples, 0.96%)</title><rect x="1160.3" y="357" width="11.3" height="15.0" fill="rgb(236,148,46)" rx="2" ry="2" />
<text  x="1163.27" y="367.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:254 (5,244 samples, 0.25%)</title><rect x="1081.3" y="261" width="2.9" height="15.0" fill="rgb(247,229,3)" rx="2" ry="2" />
<text  x="1084.28" y="271.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked:75 (294 samples, 0.01%)</title><rect x="1189.6" y="629" width="0.1" height="15.0" fill="rgb(226,69,0)" rx="2" ry="2" />
<text  x="1192.56" y="639.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (13,082 samples, 0.62%)</title><rect x="588.0" y="213" width="7.3" height="15.0" fill="rgb(227,187,32)" rx="2" ry="2" />
<text  x="590.99" y="223.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.&lt;init&gt;:64 (1,048 samples, 0.05%)</title><rect x="1173.1" y="309" width="0.6" height="15.0" fill="rgb(235,164,40)" rx="2" ry="2" />
<text  x="1176.09" y="319.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:254 (11,020 samples, 0.52%)</title><rect x="560.6" y="293" width="6.1" height="15.0" fill="rgb(222,14,48)" rx="2" ry="2" />
<text  x="563.62" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get1:64 (5,776 samples, 0.27%)</title><rect x="682.0" y="261" width="3.2" height="15.0" fill="rgb(223,78,45)" rx="2" ry="2" />
<text  x="684.98" y="271.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle$Holder.invokeStatic:-1 (530 samples, 0.02%)</title><rect x="1189.3" y="533" width="0.3" height="15.0" fill="rgb(247,205,0)" rx="2" ry="2" />
<text  x="1192.27" y="543.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.GeneratedConstructorAccessor1.newInstance:-1 (36,702 samples, 1.73%)</title><rect x="19.0" y="165" width="20.4" height="15.0" fill="rgb(235,71,19)" rx="2" ry="2" />
<text  x="22.03" y="175.5" ></text>
</g>
<g >
<title>java.lang.invoke.Invokers$Holder.linkToTargetMethod:-1 (530 samples, 0.02%)</title><rect x="1189.3" y="549" width="0.3" height="15.0" fill="rgb(248,211,34)" rx="2" ry="2" />
<text  x="1192.27" y="559.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (10,480 samples, 0.49%)</title><rect x="676.1" y="213" width="5.9" height="15.0" fill="rgb(248,5,5)" rx="2" ry="2" />
<text  x="679.15" y="223.5" ></text>
</g>
<g >
<title>java.security.MessageDigest.digest:385 (5,232 samples, 0.25%)</title><rect x="45.6" y="341" width="2.9" height="15.0" fill="rgb(216,14,41)" rx="2" ry="2" />
<text  x="48.57" y="351.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestImpl:383 (5,244 samples, 0.25%)</title><rect x="503.8" y="341" width="2.9" height="15.0" fill="rgb(220,118,35)" rx="2" ry="2" />
<text  x="506.79" y="351.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder$$Lambda$89.1973932916.run:-1 (1,299 samples, 0.06%)</title><rect x="1188.8" y="645" width="0.8" height="15.0" fill="rgb(208,159,18)" rx="2" ry="2" />
<text  x="1191.84" y="655.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (10,425 samples, 0.49%)</title><rect x="670.4" y="261" width="5.7" height="15.0" fill="rgb(238,173,23)" rx="2" ry="2" />
<text  x="673.35" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.toAffinePoint:83 (244,349 samples, 11.52%)</title><rect x="363.5" y="261" width="135.9" height="15.0" fill="rgb(221,222,28)" rx="2" ry="2" />
<text  x="366.50" y="271.5" >sun.security.ec.E..</text>
</g>
<g >
<title>java.math.BigInteger.shiftRight:3375 (51,920 samples, 2.45%)</title><rect x="334.6" y="133" width="28.9" height="15.0" fill="rgb(244,160,8)" rx="2" ry="2" />
<text  x="337.62" y="143.5" >ja..</text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:254 (3,142 samples, 0.15%)</title><rect x="1158.5" y="357" width="1.8" height="15.0" fill="rgb(245,28,24)" rx="2" ry="2" />
<text  x="1161.52" y="367.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:270 (36,672 samples, 1.73%)</title><rect x="685.2" y="293" width="20.4" height="15.0" fill="rgb(248,81,19)" rx="2" ry="2" />
<text  x="688.19" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (8,402 samples, 0.40%)</title><rect x="575.5" y="277" width="4.7" height="15.0" fill="rgb(243,9,32)" rx="2" ry="2" />
<text  x="578.49" y="287.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:206 (62,894 samples, 2.96%)</title><rect x="10.3" y="389" width="35.0" height="15.0" fill="rgb(214,131,43)" rx="2" ry="2" />
<text  x="13.29" y="399.5" >su..</text>
</g>
<g >
<title>java.math.BigInteger.subtract:1516 (1,574 samples, 0.07%)</title><rect x="1097.0" y="277" width="0.9" height="15.0" fill="rgb(222,85,49)" rx="2" ry="2" />
<text  x="1100.02" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (8,892 samples, 0.42%)</title><rect x="1109.9" y="213" width="4.9" height="15.0" fill="rgb(240,31,44)" rx="2" ry="2" />
<text  x="1112.86" y="223.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:64 (3,154 samples, 0.15%)</title><rect x="1090.3" y="277" width="1.8" height="15.0" fill="rgb(232,148,26)" rx="2" ry="2" />
<text  x="1093.32" y="287.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:233 (3,664 samples, 0.17%)</title><rect x="519.2" y="261" width="2.1" height="15.0" fill="rgb(235,150,49)" rx="2" ry="2" />
<text  x="522.24" y="271.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:120 (37,722 samples, 1.78%)</title><rect x="521.3" y="325" width="21.0" height="15.0" fill="rgb(215,34,42)" rx="2" ry="2" />
<text  x="524.28" y="335.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (8,916 samples, 0.42%)</title><rect x="202.3" y="245" width="5.0" height="15.0" fill="rgb(240,212,51)" rx="2" ry="2" />
<text  x="205.35" y="255.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:212 (739 samples, 0.03%)</title><rect x="1188.8" y="581" width="0.5" height="15.0" fill="rgb(217,213,51)" rx="2" ry="2" />
<text  x="1191.84" y="591.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3745 (5,766 samples, 0.27%)</title><rect x="510.2" y="229" width="3.2" height="15.0" fill="rgb(224,23,48)" rx="2" ry="2" />
<text  x="513.20" y="239.5" ></text>
</g>
<g >
<title>java.math.BigInteger.subtract:1518 (5,240 samples, 0.25%)</title><rect x="218.4" y="309" width="2.9" height="15.0" fill="rgb(228,163,38)" rx="2" ry="2" />
<text  x="221.36" y="319.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:186 (38,771 samples, 1.83%)</title><rect x="128.0" y="149" width="21.6" height="15.0" fill="rgb(245,223,46)" rx="2" ry="2" />
<text  x="131.04" y="159.5" >j..</text>
</g>
<g >
<title>java.security.Provider.getService:1299 (1,572 samples, 0.07%)</title><rect x="12.0" y="229" width="0.9" height="15.0" fill="rgb(240,123,38)" rx="2" ry="2" />
<text  x="15.04" y="239.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValue:298 (235,445 samples, 11.10%)</title><rect x="368.5" y="165" width="130.9" height="15.0" fill="rgb(227,107,51)" rx="2" ry="2" />
<text  x="371.45" y="175.5" >sun.security.uti..</text>
</g>
<g >
<title>sun.security.ec.ECOperations.forParameters:106 (48,222 samples, 2.27%)</title><rect x="187.5" y="325" width="26.8" height="15.0" fill="rgb(208,9,16)" rx="2" ry="2" />
<text  x="190.47" y="335.5" >s..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (11,524 samples, 0.54%)</title><rect x="1121.2" y="277" width="6.4" height="15.0" fill="rgb(248,150,9)" rx="2" ry="2" />
<text  x="1124.23" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (35,090 samples, 1.65%)</title><rect x="985.3" y="245" width="19.5" height="15.0" fill="rgb(214,57,22)" rx="2" ry="2" />
<text  x="988.32" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.fixed:602 (23,595 samples, 1.11%)</title><rect x="631.1" y="261" width="13.1" height="15.0" fill="rgb(219,122,3)" rx="2" ry="2" />
<text  x="634.10" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.IntegerFieldModuloP.getElement:95 (3,154 samples, 0.15%)</title><rect x="1090.3" y="293" width="1.8" height="15.0" fill="rgb(234,7,16)" rx="2" ry="2" />
<text  x="1093.32" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (3,156 samples, 0.15%)</title><rect x="602.0" y="229" width="1.7" height="15.0" fill="rgb(236,70,31)" rx="2" ry="2" />
<text  x="604.97" y="239.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:143 (6,684 samples, 0.32%)</title><rect x="658.5" y="245" width="3.7" height="15.0" fill="rgb(208,26,31)" rx="2" ry="2" />
<text  x="661.47" y="255.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1191 (5,754 samples, 0.27%)</title><rect x="92.2" y="133" width="3.2" height="15.0" fill="rgb(210,225,48)" rx="2" ry="2" />
<text  x="95.19" y="143.5" ></text>
</g>
<g >
<title>java.lang.Class.getConstructor:2150 (7,862 samples, 0.37%)</title><rect x="13.8" y="197" width="4.4" height="15.0" fill="rgb(253,177,4)" rx="2" ry="2" />
<text  x="16.79" y="207.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.multiply:485 (13,789 samples, 0.65%)</title><rect x="1033.7" y="277" width="7.7" height="15.0" fill="rgb(248,18,25)" rx="2" ry="2" />
<text  x="1036.71" y="287.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedMain.main:86 (294 samples, 0.01%)</title><rect x="1189.6" y="661" width="0.1" height="15.0" fill="rgb(216,10,22)" rx="2" ry="2" />
<text  x="1192.56" y="671.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations$$Lambda$39.1493307109.apply:-1 (502,107 samples, 23.67%)</title><rect x="221.3" y="309" width="279.3" height="15.0" fill="rgb(233,130,24)" rx="2" ry="2" />
<text  x="224.28" y="319.5" >sun.security.ec.ECDSAOperations$$Lamb..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:143 (13,082 samples, 0.62%)</title><rect x="588.0" y="245" width="7.3" height="15.0" fill="rgb(247,32,39)" rx="2" ry="2" />
<text  x="590.99" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.fixed:611 (482,437 samples, 22.74%)</title><rect x="716.7" y="245" width="268.3" height="15.0" fill="rgb(246,166,31)" rx="2" ry="2" />
<text  x="719.67" y="255.5" >sun.security.util.math.intpoly.Inte..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (6,834 samples, 0.32%)</title><rect x="622.9" y="229" width="3.8" height="15.0" fill="rgb(207,21,41)" rx="2" ry="2" />
<text  x="625.93" y="239.5" ></text>
</g>
<g >
<title>sun.security.jca.ProviderList.getService:380 (3,140 samples, 0.15%)</title><rect x="12.0" y="245" width="1.8" height="15.0" fill="rgb(236,67,49)" rx="2" ry="2" />
<text  x="15.04" y="255.5" ></text>
</g>
<g >
<title>java.security.Signature.sign:711 (2,055,295 samples, 96.89%)</title><rect x="45.6" y="405" width="1143.2" height="15.0" fill="rgb(215,180,37)" rx="2" ry="2" />
<text  x="48.57" y="415.5" >java.security.Signature.sign:711</text>
</g>
<g >
<title>java.security.Signature.getInstance:297 (524 samples, 0.02%)</title><rect x="45.3" y="389" width="0.3" height="15.0" fill="rgb(209,179,8)" rx="2" ry="2" />
<text  x="48.28" y="399.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.finalReduce:362 (10,466 samples, 0.49%)</title><rect x="536.4" y="261" width="5.9" height="15.0" fill="rgb(229,40,31)" rx="2" ry="2" />
<text  x="539.44" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:143 (3,156 samples, 0.15%)</title><rect x="602.0" y="245" width="1.7" height="15.0" fill="rgb(212,120,53)" rx="2" ry="2" />
<text  x="604.97" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.fixed:602 (13,610 samples, 0.64%)</title><rect x="1026.1" y="245" width="7.6" height="15.0" fill="rgb(206,153,53)" rx="2" ry="2" />
<text  x="1029.14" y="255.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.&lt;init&gt;:79 (9,974 samples, 0.47%)</title><rect x="1149.2" y="325" width="5.5" height="15.0" fill="rgb(252,186,8)" rx="2" ry="2" />
<text  x="1152.18" y="335.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.engineSign:475 (87,520 samples, 4.13%)</title><rect x="1140.2" y="373" width="48.6" height="15.0" fill="rgb(248,29,29)" rx="2" ry="2" />
<text  x="1143.16" y="383.5" >sun...</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValuePositive:303 (4,202 samples, 0.20%)</title><rect x="368.5" y="149" width="2.3" height="15.0" fill="rgb(208,13,19)" rx="2" ry="2" />
<text  x="371.45" y="159.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:187 (11,524 samples, 0.54%)</title><rect x="1121.2" y="309" width="6.4" height="15.0" fill="rgb(207,92,22)" rx="2" ry="2" />
<text  x="1124.23" y="319.5" ></text>
</g>
<g >
<title>java.security.MessageDigest$Delegate.engineDigest:639 (4,198 samples, 0.20%)</title><rect x="513.4" y="229" width="2.3" height="15.0" fill="rgb(216,133,43)" rx="2" ry="2" />
<text  x="516.41" y="239.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.toByteArray:861 (4,200 samples, 0.20%)</title><rect x="1186.5" y="341" width="2.3" height="15.0" fill="rgb(214,4,37)" rx="2" ry="2" />
<text  x="1189.50" y="351.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:267 (67,869 samples, 3.20%)</title><rect x="644.2" y="293" width="37.8" height="15.0" fill="rgb(237,177,9)" rx="2" ry="2" />
<text  x="647.23" y="303.5" >sun..</text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.get:936 (2,618 samples, 0.12%)</title><rect x="43.8" y="341" width="1.5" height="15.0" fill="rgb(221,135,26)" rx="2" ry="2" />
<text  x="46.82" y="351.5" ></text>
</g>
<g >
<title>sun.security.util.math.IntegerModuloP.pow:192 (6,298 samples, 0.30%)</title><rect x="1022.6" y="261" width="3.5" height="15.0" fill="rgb(251,170,41)" rx="2" ry="2" />
<text  x="1025.64" y="271.5" ></text>
</g>
<g >
<title>sun.security.jca.GetInstance.getInstance:164 (47,708 samples, 2.25%)</title><rect x="13.8" y="261" width="26.5" height="15.0" fill="rgb(240,66,17)" rx="2" ry="2" />
<text  x="16.79" y="271.5" >s..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.limbsToByteArray:454 (10,466 samples, 0.49%)</title><rect x="536.4" y="277" width="5.9" height="15.0" fill="rgb(241,46,34)" rx="2" ry="2" />
<text  x="539.44" y="287.5" ></text>
</g>
<g >
<title>java.io.OutputStream.write:122 (11,536 samples, 0.54%)</title><rect x="1180.1" y="309" width="6.4" height="15.0" fill="rgb(210,62,4)" rx="2" ry="2" />
<text  x="1183.09" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValuePositive:306 (68,055 samples, 3.21%)</title><rect x="149.6" y="213" width="37.9" height="15.0" fill="rgb(233,8,35)" rx="2" ry="2" />
<text  x="152.61" y="223.5" >sun..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:64 (13,082 samples, 0.62%)</title><rect x="588.0" y="261" width="7.3" height="15.0" fill="rgb(218,208,13)" rx="2" ry="2" />
<text  x="590.99" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (16,260 samples, 0.77%)</title><rect x="1013.6" y="213" width="9.0" height="15.0" fill="rgb(208,115,18)" rx="2" ry="2" />
<text  x="1016.60" y="223.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:399 (3,140 samples, 0.15%)</title><rect x="1142.5" y="325" width="1.7" height="15.0" fill="rgb(237,182,45)" rx="2" ry="2" />
<text  x="1145.48" y="335.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:170 (23,540 samples, 1.11%)</title><rect x="1060.3" y="309" width="13.1" height="15.0" fill="rgb(222,71,44)" rx="2" ry="2" />
<text  x="1063.31" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:491 (9,942 samples, 0.47%)</title><rect x="225.1" y="197" width="5.5" height="15.0" fill="rgb(236,103,52)" rx="2" ry="2" />
<text  x="228.07" y="207.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (10,480 samples, 0.49%)</title><rect x="676.1" y="229" width="5.9" height="15.0" fill="rgb(228,133,6)" rx="2" ry="2" />
<text  x="679.15" y="239.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (5,242 samples, 0.25%)</title><rect x="667.4" y="213" width="3.0" height="15.0" fill="rgb(251,106,14)" rx="2" ry="2" />
<text  x="670.43" y="223.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:4102 (5,240 samples, 0.25%)</title><rect x="218.4" y="277" width="2.9" height="15.0" fill="rgb(219,167,27)" rx="2" ry="2" />
<text  x="221.36" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.fixed:611 (29,332 samples, 1.38%)</title><rect x="689.3" y="245" width="16.3" height="15.0" fill="rgb(247,194,9)" rx="2" ry="2" />
<text  x="692.28" y="255.5" ></text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1176 (5,238 samples, 0.25%)</title><rect x="516.3" y="245" width="2.9" height="15.0" fill="rgb(238,124,29)" rx="2" ry="2" />
<text  x="519.33" y="255.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.forParameters:92 (12,568 samples, 0.59%)</title><rect x="214.3" y="325" width="7.0" height="15.0" fill="rgb(221,18,21)" rx="2" ry="2" />
<text  x="217.29" y="335.5" ></text>
</g>
<g >
<title>java.security.MessageDigest.digest:431 (4,714 samples, 0.22%)</title><rect x="507.6" y="229" width="2.6" height="15.0" fill="rgb(248,160,38)" rx="2" ry="2" />
<text  x="510.58" y="239.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (6,298 samples, 0.30%)</title><rect x="1022.6" y="245" width="3.5" height="15.0" fill="rgb(220,107,29)" rx="2" ry="2" />
<text  x="1025.64" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.DerOutputStream.&lt;init&gt;:61 (9,974 samples, 0.47%)</title><rect x="1149.2" y="341" width="5.5" height="15.0" fill="rgb(227,72,43)" rx="2" ry="2" />
<text  x="1152.18" y="351.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.toAffinePoint:82 (252,524 samples, 11.90%)</title><rect x="223.0" y="261" width="140.5" height="15.0" fill="rgb(245,150,54)" rx="2" ry="2" />
<text  x="226.03" y="271.5" >sun.security.ec.E..</text>
</g>
<g >
<title>sun.security.provider.DigestBase.engineDigest:187 (4,714 samples, 0.22%)</title><rect x="507.6" y="181" width="2.6" height="15.0" fill="rgb(205,173,40)" rx="2" ry="2" />
<text  x="510.58" y="191.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:255 (3,678 samples, 0.17%)</title><rect x="566.7" y="293" width="2.1" height="15.0" fill="rgb(224,2,0)" rx="2" ry="2" />
<text  x="569.75" y="303.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:264 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="581" width="1178.5" height="15.0" fill="rgb(235,189,34)" rx="2" ry="2" />
<text  x="13.29" y="591.5" >java.util.concurrent.FutureTask.run:264</text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3410 (11,530 samples, 0.54%)</title><rect x="149.6" y="181" width="6.4" height="15.0" fill="rgb(253,111,43)" rx="2" ry="2" />
<text  x="152.61" y="191.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:491 (4,194 samples, 0.20%)</title><rect x="366.1" y="197" width="2.4" height="15.0" fill="rgb(207,187,33)" rx="2" ry="2" />
<text  x="369.12" y="207.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get1:148 (6,834 samples, 0.32%)</title><rect x="622.9" y="261" width="3.8" height="15.0" fill="rgb(250,65,52)" rx="2" ry="2" />
<text  x="625.93" y="271.5" ></text>
</g>
<g >
<title>java.security.Provider$ServiceKey.&lt;init&gt;:1103 (2,094 samples, 0.10%)</title><rect x="42.7" y="341" width="1.1" height="15.0" fill="rgb(244,124,39)" rx="2" ry="2" />
<text  x="45.66" y="351.5" ></text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1176 (5,754 samples, 0.27%)</title><rect x="53.7" y="197" width="3.2" height="15.0" fill="rgb(237,62,39)" rx="2" ry="2" />
<text  x="56.72" y="207.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (29,866 samples, 1.41%)</title><rect x="248.1" y="85" width="16.6" height="15.0" fill="rgb(254,132,33)" rx="2" ry="2" />
<text  x="251.07" y="95.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkSigning_secp256r1_1024B_jmhTest.secp256r1_1024B_thrpt_jmhStub:119 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="453" width="1178.5" height="15.0" fill="rgb(254,29,11)" rx="2" ry="2" />
<text  x="13.29" y="463.5" >org.sample.jmh_generated.BenchmarkSigning_secp256r1_1024B_jmhTest.secp256r1_1024B_thrpt_jmhStub:119</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.asByteArray:598 (23,540 samples, 1.11%)</title><rect x="1060.3" y="293" width="13.1" height="15.0" fill="rgb(229,3,49)" rx="2" ry="2" />
<text  x="1063.31" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (18,784 samples, 0.89%)</title><rect x="648.0" y="245" width="10.5" height="15.0" fill="rgb(226,96,41)" rx="2" ry="2" />
<text  x="651.02" y="255.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.generateAlgorithm:219 (10,480 samples, 0.49%)</title><rect x="507.6" y="261" width="5.8" height="15.0" fill="rgb(235,217,49)" rx="2" ry="2" />
<text  x="510.58" y="271.5" ></text>
</g>
<g >
<title>java.lang.reflect.Constructor.newInstance:490 (36,702 samples, 1.73%)</title><rect x="19.0" y="197" width="20.4" height="15.0" fill="rgb(217,168,18)" rx="2" ry="2" />
<text  x="22.03" y="207.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (8,402 samples, 0.40%)</title><rect x="575.5" y="261" width="4.7" height="15.0" fill="rgb(221,42,13)" rx="2" ry="2" />
<text  x="578.49" y="271.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkSigning_secp256r1_1024B_jmhTest.secp256r1_1024B_Throughput:83 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="469" width="1178.5" height="15.0" fill="rgb(224,119,19)" rx="2" ry="2" />
<text  x="13.29" y="479.5" >org.sample.jmh_generated.BenchmarkSigning_secp256r1_1024B_jmhTest.secp256r1_1024B_Throughput:83</text>
</g>
<g >
<title>java.math.BigInteger.shiftRightImpl:3434 (34,032 samples, 1.60%)</title><rect x="168.5" y="181" width="19.0" height="15.0" fill="rgb(228,90,7)" rx="2" ry="2" />
<text  x="171.54" y="191.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:250 (5,762 samples, 0.27%)</title><rect x="521.3" y="277" width="3.2" height="15.0" fill="rgb(253,138,1)" rx="2" ry="2" />
<text  x="524.28" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint$Mutable.&lt;init&gt;:104 (24,577 samples, 1.16%)</title><rect x="603.7" y="277" width="13.7" height="15.0" fill="rgb(236,43,16)" rx="2" ry="2" />
<text  x="606.73" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (7,852 samples, 0.37%)</title><rect x="1008.6" y="229" width="4.4" height="15.0" fill="rgb(210,227,26)" rx="2" ry="2" />
<text  x="1011.64" y="239.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2352 (18,321 samples, 0.86%)</title><rect x="264.7" y="101" width="10.2" height="15.0" fill="rgb(228,216,35)" rx="2" ry="2" />
<text  x="267.69" y="111.5" ></text>
</g>
<g >
<title>org.sample.DigitalSignature.sign:26 (63,418 samples, 2.99%)</title><rect x="10.3" y="421" width="35.3" height="15.0" fill="rgb(206,136,43)" rx="2" ry="2" />
<text  x="13.29" y="431.5" >or..</text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:190 (22,506 samples, 1.06%)</title><rect x="1127.6" y="309" width="12.6" height="15.0" fill="rgb(231,140,7)" rx="2" ry="2" />
<text  x="1130.64" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:740 (246,720 samples, 11.63%)</title><rect x="50.2" y="277" width="137.3" height="15.0" fill="rgb(228,215,28)" rx="2" ry="2" />
<text  x="53.23" y="287.5" >sun.security.util..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (12,060 samples, 0.57%)</title><rect x="595.3" y="245" width="6.7" height="15.0" fill="rgb(209,181,3)" rx="2" ry="2" />
<text  x="598.26" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (9,938 samples, 0.47%)</title><rect x="208.8" y="261" width="5.5" height="15.0" fill="rgb(254,147,36)" rx="2" ry="2" />
<text  x="211.76" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.&lt;init&gt;:232 (12,570 samples, 0.59%)</title><rect x="1163.2" y="325" width="7.0" height="15.0" fill="rgb(237,132,31)" rx="2" ry="2" />
<text  x="1166.19" y="335.5" ></text>
</g>
<g >
<title>java.security.Provider$ServiceKey.hashCode:1107 (2,618 samples, 0.12%)</title><rect x="43.8" y="325" width="1.5" height="15.0" fill="rgb(232,103,8)" rx="2" ry="2" />
<text  x="46.82" y="335.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValuePositive:303 (5,754 samples, 0.27%)</title><rect x="53.7" y="213" width="3.2" height="15.0" fill="rgb(240,17,6)" rx="2" ry="2" />
<text  x="56.72" y="223.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (5,776 samples, 0.27%)</title><rect x="682.0" y="229" width="3.2" height="15.0" fill="rgb(251,194,41)" rx="2" ry="2" />
<text  x="684.98" y="239.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (3,134 samples, 0.15%)</title><rect x="93.6" y="117" width="1.8" height="15.0" fill="rgb(232,104,27)" rx="2" ry="2" />
<text  x="96.64" y="127.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.encode:433 (11,536 samples, 0.54%)</title><rect x="1180.1" y="325" width="6.4" height="15.0" fill="rgb(246,71,19)" rx="2" ry="2" />
<text  x="1183.09" y="335.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:143 (10,480 samples, 0.49%)</title><rect x="676.1" y="245" width="5.9" height="15.0" fill="rgb(242,80,46)" rx="2" ry="2" />
<text  x="679.15" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.fixed:611 (23,595 samples, 1.11%)</title><rect x="631.1" y="245" width="13.1" height="15.0" fill="rgb(211,222,0)" rx="2" ry="2" />
<text  x="634.10" y="255.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:4102 (3,134 samples, 0.15%)</title><rect x="93.6" y="101" width="1.8" height="15.0" fill="rgb(223,124,24)" rx="2" ry="2" />
<text  x="96.64" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1203 (26,200 samples, 1.24%)</title><rect x="95.4" y="133" width="14.6" height="15.0" fill="rgb(218,199,50)" rx="2" ry="2" />
<text  x="98.39" y="143.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (10,425 samples, 0.49%)</title><rect x="670.4" y="245" width="5.7" height="15.0" fill="rgb(221,2,9)" rx="2" ry="2" />
<text  x="673.35" y="255.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:112 (25,132 samples, 1.18%)</title><rect x="300.0" y="53" width="13.9" height="15.0" fill="rgb(214,111,45)" rx="2" ry="2" />
<text  x="302.95" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.trustedStripLeadingZeroInts:4382 (5,240 samples, 0.25%)</title><rect x="218.4" y="293" width="2.9" height="15.0" fill="rgb(253,117,21)" rx="2" ry="2" />
<text  x="221.36" y="303.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.lambda$forParameters$0:92 (502,107 samples, 23.67%)</title><rect x="221.3" y="293" width="279.3" height="15.0" fill="rgb(221,131,49)" rx="2" ry="2" />
<text  x="224.28" y="303.5" >sun.security.ec.ECDSAOperations.lambd..</text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (1,578 samples, 0.07%)</title><rect x="1147.4" y="309" width="0.9" height="15.0" fill="rgb(248,115,5)" rx="2" ry="2" />
<text  x="1150.44" y="319.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature$SHA256.&lt;init&gt;:242 (53,990 samples, 2.55%)</title><rect x="12.0" y="341" width="30.1" height="15.0" fill="rgb(253,182,31)" rx="2" ry="2" />
<text  x="15.04" y="351.5" >su..</text>
</g>
<g >
<title>org.openjdk.jmh.util.InputStreamDrainer.run:77 (494 samples, 0.02%)</title><rect x="1189.7" y="661" width="0.3" height="15.0" fill="rgb(227,65,20)" rx="2" ry="2" />
<text  x="1192.73" y="671.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (12,564 samples, 0.59%)</title><rect x="543.4" y="245" width="7.0" height="15.0" fill="rgb(243,229,22)" rx="2" ry="2" />
<text  x="546.44" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:64 (252,524 samples, 11.90%)</title><rect x="223.0" y="245" width="140.5" height="15.0" fill="rgb(247,53,5)" rx="2" ry="2" />
<text  x="226.03" y="255.5" >sun.security.util..</text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:432 (3,140 samples, 0.15%)</title><rect x="1142.5" y="341" width="1.7" height="15.0" fill="rgb(219,95,20)" rx="2" ry="2" />
<text  x="1145.48" y="351.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSAOperations.signDigest:186 (43,518 samples, 2.05%)</title><rect x="1097.0" y="309" width="24.2" height="15.0" fill="rgb(239,122,50)" rx="2" ry="2" />
<text  x="1100.02" y="319.5" >s..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1163 (64,460 samples, 3.04%)</title><rect x="92.2" y="149" width="35.8" height="15.0" fill="rgb(211,197,10)" rx="2" ry="2" />
<text  x="95.19" y="159.5" >jav..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValuePositive:305 (166,635 samples, 7.86%)</title><rect x="56.9" y="213" width="92.7" height="15.0" fill="rgb(216,173,20)" rx="2" ry="2" />
<text  x="59.92" y="223.5" >sun.securit..</text>
</g>
<g >
<title>java.security.MessageDigest.getInstance:183 (3,142 samples, 0.15%)</title><rect x="40.3" y="293" width="1.8" height="15.0" fill="rgb(226,165,49)" rx="2" ry="2" />
<text  x="43.32" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:254 (530 samples, 0.02%)</title><rect x="1091.8" y="261" width="0.3" height="15.0" fill="rgb(220,78,20)" rx="2" ry="2" />
<text  x="1094.78" y="271.5" ></text>
</g>
<g >
<title>sun.security.provider.HashDrbg.hashGen:259 (4,714 samples, 0.22%)</title><rect x="507.6" y="245" width="2.6" height="15.0" fill="rgb(206,97,38)" rx="2" ry="2" />
<text  x="510.58" y="255.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:485 (18,312 samples, 0.86%)</title><rect x="550.4" y="277" width="10.2" height="15.0" fill="rgb(223,134,11)" rx="2" ry="2" />
<text  x="553.43" y="287.5" ></text>
</g>
<g >
<title>all (2,121,324 samples, 100%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(244,9,32)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.setValue:507 (235,445 samples, 11.10%)</title><rect x="368.5" y="181" width="130.9" height="15.0" fill="rgb(221,169,37)" rx="2" ry="2" />
<text  x="371.45" y="191.5" >sun.security.uti..</text>
</g>
<g >
<title>sun.security.jca.GetInstance.getService:85 (5,760 samples, 0.27%)</title><rect x="42.1" y="373" width="3.2" height="15.0" fill="rgb(234,182,1)" rx="2" ry="2" />
<text  x="45.07" y="383.5" ></text>
</g>
<g >
<title>sun.security.util.math.IntegerModuloP.multiplicativeInverse:159 (43,518 samples, 2.05%)</title><rect x="1097.0" y="293" width="24.2" height="15.0" fill="rgb(227,207,4)" rx="2" ry="2" />
<text  x="1100.02" y="303.5" >s..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:492 (235,445 samples, 11.10%)</title><rect x="368.5" y="197" width="130.9" height="15.0" fill="rgb(216,40,37)" rx="2" ry="2" />
<text  x="371.45" y="207.5" >sun.security.uti..</text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:186 (26,222 samples, 1.24%)</title><rect x="452.1" y="85" width="14.6" height="15.0" fill="rgb(234,213,0)" rx="2" ry="2" />
<text  x="455.11" y="95.5" ></text>
</g>
<g >
<title>sun.security.provider.SHA2.&lt;init&gt;:83 (1,584 samples, 0.07%)</title><rect x="23.7" y="133" width="0.9" height="15.0" fill="rgb(215,77,0)" rx="2" ry="2" />
<text  x="26.69" y="143.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.limbsToByteArray:454 (6,806 samples, 0.32%)</title><rect x="1049.8" y="277" width="3.8" height="15.0" fill="rgb(246,65,1)" rx="2" ry="2" />
<text  x="1052.82" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:268 (5,776 samples, 0.27%)</title><rect x="682.0" y="293" width="3.2" height="15.0" fill="rgb(206,197,45)" rx="2" ry="2" />
<text  x="684.98" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (12,541 samples, 0.59%)</title><rect x="610.4" y="229" width="7.0" height="15.0" fill="rgb(225,58,21)" rx="2" ry="2" />
<text  x="613.42" y="239.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:143 (12,066 samples, 0.57%)</title><rect x="200.6" y="277" width="6.7" height="15.0" fill="rgb(249,191,28)" rx="2" ry="2" />
<text  x="203.59" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.&lt;init&gt;:125 (2,092 samples, 0.10%)</title><rect x="191.5" y="309" width="1.2" height="15.0" fill="rgb(243,158,43)" rx="2" ry="2" />
<text  x="194.55" y="319.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:252 (3,138 samples, 0.15%)</title><rect x="1154.7" y="357" width="1.8" height="15.0" fill="rgb(214,112,42)" rx="2" ry="2" />
<text  x="1157.73" y="367.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.&lt;init&gt;:245 (15,186 samples, 0.72%)</title><rect x="1163.2" y="341" width="8.4" height="15.0" fill="rgb(220,217,49)" rx="2" ry="2" />
<text  x="1166.19" y="351.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:230 (558 samples, 0.03%)</title><rect x="1189.3" y="581" width="0.3" height="15.0" fill="rgb(244,115,7)" rx="2" ry="2" />
<text  x="1192.25" y="591.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:472 (522 samples, 0.02%)</title><rect x="42.7" y="309" width="0.2" height="15.0" fill="rgb(215,33,18)" rx="2" ry="2" />
<text  x="45.66" y="319.5" ></text>
</g>
<g >
<title>java.security.Provider$Service.newInstance:1915 (46,132 samples, 2.17%)</title><rect x="13.8" y="229" width="25.6" height="15.0" fill="rgb(231,88,17)" rx="2" ry="2" />
<text  x="16.79" y="239.5" >j..</text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:566 (2,118,713 samples, 99.88%)</title><rect x="10.3" y="533" width="1178.5" height="15.0" fill="rgb(227,42,8)" rx="2" ry="2" />
<text  x="13.29" y="543.5" >java.lang.reflect.Method.invoke:566</text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2351 (56,043 samples, 2.64%)</title><rect x="233.5" y="101" width="31.2" height="15.0" fill="rgb(209,118,34)" rx="2" ry="2" />
<text  x="236.51" y="111.5" >ja..</text>
</g>
<g >
<title>java.math.BigInteger.stripLeadingZeroBytes:4398 (3,140 samples, 0.15%)</title><rect x="1142.5" y="309" width="1.7" height="15.0" fill="rgb(251,175,19)" rx="2" ry="2" />
<text  x="1145.48" y="319.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint$Mutable.&lt;init&gt;:102 (25,581 samples, 1.21%)</title><rect x="581.0" y="277" width="14.3" height="15.0" fill="rgb(210,79,36)" rx="2" ry="2" />
<text  x="584.03" y="287.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:112 (17,824 samples, 0.84%)</title><rect x="118.1" y="117" width="9.9" height="15.0" fill="rgb(227,5,41)" rx="2" ry="2" />
<text  x="121.13" y="127.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.mutable:523 (6,298 samples, 0.30%)</title><rect x="1022.6" y="229" width="3.5" height="15.0" fill="rgb(227,86,29)" rx="2" ry="2" />
<text  x="1025.64" y="239.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint.fixed:55 (25,165 samples, 1.19%)</title><rect x="630.2" y="277" width="14.0" height="15.0" fill="rgb(252,64,52)" rx="2" ry="2" />
<text  x="633.23" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestImpl:382 (5,764 samples, 0.27%)</title><rect x="500.6" y="341" width="3.2" height="15.0" fill="rgb(220,227,4)" rx="2" ry="2" />
<text  x="503.58" y="351.5" ></text>
</g>
<g >
<title>java.nio.ByteBuffer.wrap:394 (522 samples, 0.02%)</title><rect x="524.5" y="245" width="0.3" height="15.0" fill="rgb(230,153,31)" rx="2" ry="2" />
<text  x="527.49" y="255.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1192 (2,090 samples, 0.10%)</title><rect x="55.8" y="181" width="1.1" height="15.0" fill="rgb(223,114,1)" rx="2" ry="2" />
<text  x="58.76" y="191.5" ></text>
</g>
<g >
<title>java.security.MessageDigest$Delegate.engineDigest:639 (5,232 samples, 0.25%)</title><rect x="45.6" y="325" width="2.9" height="15.0" fill="rgb(240,128,45)" rx="2" ry="2" />
<text  x="48.57" y="335.5" ></text>
</g>
<g >
<title>sun.security.ec.ECPrivateKeyImpl.getArrayS:163 (5,244 samples, 0.25%)</title><rect x="503.8" y="325" width="2.9" height="15.0" fill="rgb(239,160,27)" rx="2" ry="2" />
<text  x="506.79" y="335.5" ></text>
</g>
<g >
<title>java.io.ByteArrayOutputStream.toByteArray:211 (4,200 samples, 0.20%)</title><rect x="1186.5" y="325" width="2.3" height="15.0" fill="rgb(238,35,31)" rx="2" ry="2" />
<text  x="1189.50" y="335.5" ></text>
</g>
<g >
<title>sun.security.util.DerValue.&lt;init&gt;:234 (2,616 samples, 0.12%)</title><rect x="1170.2" y="325" width="1.4" height="15.0" fill="rgb(228,210,33)" rx="2" ry="2" />
<text  x="1173.18" y="335.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$MutableElement.fixed:611 (13,610 samples, 0.64%)</title><rect x="1026.1" y="229" width="7.6" height="15.0" fill="rgb(229,227,29)" rx="2" ry="2" />
<text  x="1029.14" y="239.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.forParameters:105 (249,862 samples, 11.78%)</title><rect x="48.5" y="325" width="139.0" height="15.0" fill="rgb(207,192,16)" rx="2" ry="2" />
<text  x="51.48" y="335.5" >sun.security.ec.E..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.limbsToByteArray:454 (8,372 samples, 0.39%)</title><rect x="1135.5" y="277" width="4.7" height="15.0" fill="rgb(220,102,7)" rx="2" ry="2" />
<text  x="1138.50" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:64 (8,896 samples, 0.42%)</title><rect x="1092.1" y="277" width="4.9" height="15.0" fill="rgb(211,106,36)" rx="2" ry="2" />
<text  x="1095.07" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.signDigestImpl:393 (1,112,570 samples, 52.45%)</title><rect x="521.3" y="341" width="618.9" height="15.0" fill="rgb(232,29,32)" rx="2" ry="2" />
<text  x="524.28" y="351.5" >sun.security.ec.ECDSASignature.signDigestImpl:393</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.get0:64 (14,146 samples, 0.67%)</title><rect x="542.6" y="277" width="7.8" height="15.0" fill="rgb(219,92,36)" rx="2" ry="2" />
<text  x="545.56" y="287.5" ></text>
</g>
<g >
<title>sun.security.ec.ECDSASignature.getDigestValue:338 (5,232 samples, 0.25%)</title><rect x="45.6" y="357" width="2.9" height="15.0" fill="rgb(220,100,3)" rx="2" ry="2" />
<text  x="48.57" y="367.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:275 (502,355 samples, 23.68%)</title><rect x="705.6" y="293" width="279.4" height="15.0" fill="rgb(224,221,36)" rx="2" ry="2" />
<text  x="708.59" y="303.5" >sun.security.ec.ECOperations.multiply..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.setLimbsValue:298 (238,914 samples, 11.26%)</title><rect x="230.6" y="165" width="132.9" height="15.0" fill="rgb(233,198,19)" rx="2" ry="2" />
<text  x="233.60" y="175.5" >sun.security.uti..</text>
</g>
<g >
<title>sun.security.util.math.IntegerFieldModuloP.getElement:95 (15,736 samples, 0.74%)</title><rect x="1075.4" y="293" width="8.8" height="15.0" fill="rgb(224,73,15)" rx="2" ry="2" />
<text  x="1078.44" y="303.5" ></text>
</g>
<g >
<title>sun.security.util.ECUtil.encodeSignature:257 (30,928 samples, 1.46%)</title><rect x="1171.6" y="357" width="17.2" height="15.0" fill="rgb(242,84,45)" rx="2" ry="2" />
<text  x="1174.64" y="367.5" ></text>
</g>
<g >
<title>sun.security.ec.ECOperations.multiply:259 (66,942 samples, 3.16%)</title><rect x="580.2" y="293" width="37.2" height="15.0" fill="rgb(237,25,10)" rx="2" ry="2" />
<text  x="583.16" y="303.5" >sun..</text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:252 (524 samples, 0.02%)</title><rect x="1059.1" y="261" width="0.3" height="15.0" fill="rgb(231,122,2)" rx="2" ry="2" />
<text  x="1062.15" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement.&lt;init&gt;:744 (13,082 samples, 0.62%)</title><rect x="588.0" y="229" width="7.3" height="15.0" fill="rgb(240,205,16)" rx="2" ry="2" />
<text  x="590.99" y="239.5" ></text>
</g>
<g >
<title>sun.security.ec.point.ProjectivePoint.fixed:55 (36,672 samples, 1.73%)</title><rect x="685.2" y="277" width="20.4" height="15.0" fill="rgb(245,28,46)" rx="2" ry="2" />
<text  x="688.19" y="287.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial.getElement:254 (1,565 samples, 0.07%)</title><rect x="1059.4" y="261" width="0.9" height="15.0" fill="rgb(254,14,53)" rx="2" ry="2" />
<text  x="1062.44" y="271.5" ></text>
</g>
<g >
<title>sun.security.util.math.intpoly.IntegerPolynomial$Element.&lt;init&gt;:496 (9,938 samples, 0.47%)</title><rect x="208.8" y="245" width="5.5" height="15.0" fill="rgb(218,143,29)" rx="2" ry="2" />
<text  x="211.76" y="255.5" ></text>
</g>
</g>
</svg>
