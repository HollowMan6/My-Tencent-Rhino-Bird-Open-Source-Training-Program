<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >cpu sm2p256v1_compressed-Throughput</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:139 (2 samples, 0.07%)</title><rect x="368.6" y="69" width="0.8" height="15.0" fill="rgb(209,187,2)" rx="2" ry="2" />
<text  x="371.59" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.doSingle:138 (5 samples, 0.18%)</title><rect x="1184.6" y="421" width="2.1" height="15.0" fill="rgb(218,213,34)" rx="2" ry="2" />
<text  x="1187.62" y="431.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:406 (4 samples, 0.14%)</title><rect x="908.8" y="53" width="1.6" height="15.0" fill="rgb(238,96,18)" rx="2" ry="2" />
<text  x="911.75" y="63.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.isToDisk:513 (1 samples, 0.04%)</title><rect x="1176.4" y="405" width="0.4" height="15.0" fill="rgb(207,160,51)" rx="2" ry="2" />
<text  x="1179.35" y="415.5" ></text>
</g>
<g >
<title>java.math.BigInteger.bitLength:3816 (4 samples, 0.14%)</title><rect x="168.4" y="149" width="1.7" height="15.0" fill="rgb(210,213,36)" rx="2" ry="2" />
<text  x="171.41" y="159.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:500 (1 samples, 0.04%)</title><rect x="1176.8" y="421" width="0.4" height="15.0" fill="rgb(232,13,8)" rx="2" ry="2" />
<text  x="1179.76" y="431.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.getProperties:74 (3 samples, 0.11%)</title><rect x="1146.6" y="117" width="1.2" height="15.0" fill="rgb(246,29,28)" rx="2" ry="2" />
<text  x="1149.57" y="127.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$DMH+0x0000000800001800.932583850.invokeSpecial:-1 (2,819 samples, 98.81%)</title><rect x="10.0" y="261" width="1165.9" height="15.0" fill="rgb(241,113,32)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >java.lang.invoke.LambdaForm$DMH+0x0000000800001800.932583850.invokeSpecial:-1</text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedMain.main:86 (5 samples, 0.18%)</title><rect x="1184.6" y="469" width="2.1" height="15.0" fill="rgb(217,27,32)" rx="2" ry="2" />
<text  x="1187.62" y="479.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4092 (1 samples, 0.04%)</title><rect x="170.5" y="165" width="0.4" height="15.0" fill="rgb(209,211,0)" rx="2" ry="2" />
<text  x="173.48" y="175.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (11 samples, 0.39%)</title><rect x="842.2" y="53" width="4.5" height="15.0" fill="rgb(232,101,27)" rx="2" ry="2" />
<text  x="845.16" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (3 samples, 0.11%)</title><rect x="49.3" y="133" width="1.2" height="15.0" fill="rgb(214,95,7)" rx="2" ry="2" />
<text  x="52.29" y="143.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.lambda$startDiskMonitor$1:442 (21 samples, 0.74%)</title><rect x="1175.9" y="437" width="8.7" height="15.0" fill="rgb(254,210,25)" rx="2" ry="2" />
<text  x="1178.94" y="447.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:405 (1 samples, 0.04%)</title><rect x="908.3" y="53" width="0.5" height="15.0" fill="rgb(242,178,15)" rx="2" ry="2" />
<text  x="911.34" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1621 (1 samples, 0.04%)</title><rect x="804.5" y="69" width="0.4" height="15.0" fill="rgb(207,5,4)" rx="2" ry="2" />
<text  x="807.53" y="79.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:247 (3 samples, 0.11%)</title><rect x="1146.6" y="133" width="1.2" height="15.0" fill="rgb(210,116,22)" rx="2" ry="2" />
<text  x="1149.57" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (14 samples, 0.49%)</title><rect x="1065.9" y="101" width="5.8" height="15.0" fill="rgb(221,141,4)" rx="2" ry="2" />
<text  x="1068.92" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1654 (33 samples, 1.16%)</title><rect x="833.1" y="69" width="13.6" height="15.0" fill="rgb(250,100,12)" rx="2" ry="2" />
<text  x="836.06" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (6 samples, 0.21%)</title><rect x="919.1" y="101" width="2.5" height="15.0" fill="rgb(250,87,16)" rx="2" ry="2" />
<text  x="922.09" y="111.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.implRead:382 (4 samples, 0.14%)</title><rect x="1188.3" y="421" width="1.7" height="15.0" fill="rgb(228,194,31)" rx="2" ry="2" />
<text  x="1191.35" y="431.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1158 (1,544 samples, 54.12%)</title><rect x="272.2" y="101" width="638.6" height="15.0" fill="rgb(225,12,3)" rx="2" ry="2" />
<text  x="275.22" y="111.5" >java.math.MutableBigInteger.divide:1158</text>
</g>
<g >
<title>jdk.internal.reflect.DirectMethodHandleAccessor.invoke:104 (2,819 samples, 98.81%)</title><rect x="10.0" y="325" width="1165.9" height="15.0" fill="rgb(226,60,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >jdk.internal.reflect.DirectMethodHandleAccessor.invoke:104</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1501 (1 samples, 0.04%)</title><rect x="544.8" y="69" width="0.4" height="15.0" fill="rgb(241,228,24)" rx="2" ry="2" />
<text  x="547.78" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:121 (3 samples, 0.11%)</title><rect x="214.3" y="117" width="1.3" height="15.0" fill="rgb(212,125,29)" rx="2" ry="2" />
<text  x="217.32" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4151 (1,555 samples, 54.50%)</title><rect x="267.7" y="133" width="643.1" height="15.0" fill="rgb(233,61,10)" rx="2" ry="2" />
<text  x="270.67" y="143.5" >java.math.BigInteger.smallToString:4151</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1502 (1 samples, 0.04%)</title><rect x="545.2" y="69" width="0.4" height="15.0" fill="rgb(233,189,41)" rx="2" ry="2" />
<text  x="548.20" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1537 (4 samples, 0.14%)</title><rect x="575.4" y="69" width="1.6" height="15.0" fill="rgb(206,8,43)" rx="2" ry="2" />
<text  x="578.39" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2492 (3 samples, 0.11%)</title><rect x="50.5" y="149" width="1.3" height="15.0" fill="rgb(228,174,11)" rx="2" ry="2" />
<text  x="53.53" y="159.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (5 samples, 0.18%)</title><rect x="1069.6" y="85" width="2.1" height="15.0" fill="rgb(245,158,45)" rx="2" ry="2" />
<text  x="1072.64" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1674 (72 samples, 2.52%)</title><rect x="846.7" y="69" width="29.8" height="15.0" fill="rgb(224,227,52)" rx="2" ry="2" />
<text  x="849.71" y="79.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1539 (4 samples, 0.14%)</title><rect x="582.4" y="69" width="1.7" height="15.0" fill="rgb(207,65,1)" rx="2" ry="2" />
<text  x="585.42" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1205 (7 samples, 0.25%)</title><rect x="55.9" y="117" width="2.9" height="15.0" fill="rgb(223,152,43)" rx="2" ry="2" />
<text  x="58.91" y="127.5" ></text>
</g>
<g >
<title>sun.security.ec.ECPublicKeyImpl.getW:84 (1 samples, 0.04%)</title><rect x="14.5" y="181" width="0.5" height="15.0" fill="rgb(225,145,19)" rx="2" ry="2" />
<text  x="17.55" y="191.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (43 samples, 1.51%)</title><rect x="883.9" y="53" width="17.8" height="15.0" fill="rgb(243,229,1)" rx="2" ry="2" />
<text  x="886.94" y="63.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:155 (5 samples, 0.18%)</title><rect x="1028.3" y="117" width="2.1" height="15.0" fill="rgb(226,41,26)" rx="2" ry="2" />
<text  x="1031.28" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1187 (2 samples, 0.07%)</title><rect x="53.4" y="117" width="0.9" height="15.0" fill="rgb(209,109,33)" rx="2" ry="2" />
<text  x="56.43" y="127.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked:75 (5 samples, 0.18%)</title><rect x="1184.6" y="437" width="2.1" height="15.0" fill="rgb(208,155,3)" rx="2" ry="2" />
<text  x="1187.62" y="447.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1491 (8 samples, 0.28%)</title><rect x="443.9" y="69" width="3.3" height="15.0" fill="rgb(225,120,45)" rx="2" ry="2" />
<text  x="446.87" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (13 samples, 0.46%)</title><rect x="43.1" y="133" width="5.4" height="15.0" fill="rgb(215,88,34)" rx="2" ry="2" />
<text  x="46.09" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.&lt;init&gt;:100 (1 samples, 0.04%)</title><rect x="170.5" y="133" width="0.4" height="15.0" fill="rgb(243,191,23)" rx="2" ry="2" />
<text  x="173.48" y="143.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine$RequestHook.execute:69 (16 samples, 0.56%)</title><rect x="1178.0" y="373" width="6.6" height="15.0" fill="rgb(247,99,38)" rx="2" ry="2" />
<text  x="1181.01" y="383.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4204 (2,251 samples, 78.90%)</title><rect x="170.9" y="149" width="931.0" height="15.0" fill="rgb(239,126,12)" rx="2" ry="2" />
<text  x="173.89" y="159.5" >java.math.BigInteger.toString:4204</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1113 (4 samples, 0.14%)</title><rect x="74.1" y="101" width="1.7" height="15.0" fill="rgb(216,35,2)" rx="2" ry="2" />
<text  x="77.11" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1564 (1 samples, 0.04%)</title><rect x="720.6" y="69" width="0.4" height="15.0" fill="rgb(243,42,14)" rx="2" ry="2" />
<text  x="723.56" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:149 (1 samples, 0.04%)</title><rect x="962.1" y="117" width="0.4" height="15.0" fill="rgb(237,6,26)" rx="2" ry="2" />
<text  x="965.11" y="127.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$MH+0x0000000800116000.324023827.invokeExact_MT:-1 (2,819 samples, 98.81%)</title><rect x="10.0" y="293" width="1165.9" height="15.0" fill="rgb(237,69,51)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >java.lang.invoke.LambdaForm$MH+0x0000000800116000.324023827.invokeExact_MT:-1</text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (7 samples, 0.25%)</title><rect x="744.1" y="53" width="2.9" height="15.0" fill="rgb(242,174,23)" rx="2" ry="2" />
<text  x="747.14" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1633 (2 samples, 0.07%)</title><rect x="826.0" y="69" width="0.9" height="15.0" fill="rgb(220,136,26)" rx="2" ry="2" />
<text  x="829.03" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (13 samples, 0.46%)</title><rect x="878.6" y="53" width="5.3" height="15.0" fill="rgb(230,183,24)" rx="2" ry="2" />
<text  x="881.56" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1187 (3 samples, 0.11%)</title><rect x="359.5" y="85" width="1.2" height="15.0" fill="rgb(253,88,39)" rx="2" ry="2" />
<text  x="362.49" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1499 (58 samples, 2.03%)</title><rect x="520.8" y="69" width="24.0" height="15.0" fill="rgb(219,44,23)" rx="2" ry="2" />
<text  x="523.80" y="79.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:165 (23 samples, 0.81%)</title><rect x="934.8" y="101" width="9.5" height="15.0" fill="rgb(223,71,1)" rx="2" ry="2" />
<text  x="937.81" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.length:1499 (1 samples, 0.04%)</title><rect x="1111.0" y="165" width="0.4" height="15.0" fill="rgb(230,206,18)" rx="2" ry="2" />
<text  x="1114.00" y="175.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:543 (1 samples, 0.04%)</title><rect x="848.8" y="53" width="0.4" height="15.0" fill="rgb(245,213,28)" rx="2" ry="2" />
<text  x="851.78" y="63.5" ></text>
</g>
<g >
<title>java.util.ArrayList.get:427 (1 samples, 0.04%)</title><rect x="1176.4" y="389" width="0.4" height="15.0" fill="rgb(214,42,19)" rx="2" ry="2" />
<text  x="1179.35" y="399.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4554 (2 samples, 0.07%)</title><rect x="966.7" y="85" width="0.8" height="15.0" fill="rgb(226,117,38)" rx="2" ry="2" />
<text  x="969.66" y="95.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_Throughput:83 (2,819 samples, 98.81%)</title><rect x="10.0" y="245" width="1165.9" height="15.0" fill="rgb(235,193,21)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_Throughput:83</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1486 (3 samples, 0.11%)</title><rect x="441.8" y="69" width="1.2" height="15.0" fill="rgb(208,131,52)" rx="2" ry="2" />
<text  x="444.80" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1466 (6 samples, 0.21%)</title><rect x="452.1" y="53" width="2.5" height="15.0" fill="rgb(232,170,13)" rx="2" ry="2" />
<text  x="455.14" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (4 samples, 0.14%)</title><rect x="389.3" y="53" width="1.6" height="15.0" fill="rgb(224,96,46)" rx="2" ry="2" />
<text  x="392.27" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.unsignedLongCompare:1837 (1 samples, 0.04%)</title><rect x="831.4" y="53" width="0.4" height="15.0" fill="rgb(251,77,51)" rx="2" ry="2" />
<text  x="834.41" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:700 (6 samples, 0.21%)</title><rect x="855.4" y="37" width="2.5" height="15.0" fill="rgb(247,164,2)" rx="2" ry="2" />
<text  x="858.40" y="47.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:582 (3 samples, 0.11%)</title><rect x="1064.7" y="101" width="1.2" height="15.0" fill="rgb(223,105,17)" rx="2" ry="2" />
<text  x="1067.68" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3537 (1 samples, 0.04%)</title><rect x="974.1" y="69" width="0.4" height="15.0" fill="rgb(209,117,5)" rx="2" ry="2" />
<text  x="977.10" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:241 (8 samples, 0.28%)</title><rect x="973.7" y="85" width="3.3" height="15.0" fill="rgb(249,222,3)" rx="2" ry="2" />
<text  x="976.69" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (7 samples, 0.25%)</title><rect x="912.1" y="117" width="2.9" height="15.0" fill="rgb(224,74,29)" rx="2" ry="2" />
<text  x="915.06" y="127.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.util.Utils.tryWith:507 (4 samples, 0.14%)</title><rect x="1185.0" y="309" width="1.7" height="15.0" fill="rgb(252,79,31)" rx="2" ry="2" />
<text  x="1188.04" y="319.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:317 (2,819 samples, 98.81%)</title><rect x="10.0" y="389" width="1165.9" height="15.0" fill="rgb(230,77,19)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >java.util.concurrent.FutureTask.run:317</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1196 (4 samples, 0.14%)</title><rect x="54.3" y="117" width="1.6" height="15.0" fill="rgb(224,188,34)" rx="2" ry="2" />
<text  x="57.26" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1634 (8 samples, 0.28%)</title><rect x="826.9" y="69" width="3.3" height="15.0" fill="rgb(239,190,3)" rx="2" ry="2" />
<text  x="829.86" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:651 (3 samples, 0.11%)</title><rect x="793.8" y="53" width="1.2" height="15.0" fill="rgb(211,16,26)" rx="2" ry="2" />
<text  x="796.77" y="63.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.fill:255 (4 samples, 0.14%)</title><rect x="1188.3" y="389" width="1.7" height="15.0" fill="rgb(232,137,45)" rx="2" ry="2" />
<text  x="1191.35" y="399.5" ></text>
</g>
<g >
<title>java.lang.String.isLatin1:4567 (2 samples, 0.07%)</title><rect x="1127.1" y="149" width="0.9" height="15.0" fill="rgb(212,98,26)" rx="2" ry="2" />
<text  x="1130.13" y="159.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4172 (90 samples, 3.15%)</title><rect x="1025.4" y="133" width="37.2" height="15.0" fill="rgb(232,130,33)" rx="2" ry="2" />
<text  x="1028.39" y="143.5" >jav..</text>
</g>
<g >
<title>all (2,853 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(253,143,2)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1542 (1 samples, 0.04%)</title><rect x="584.1" y="69" width="0.4" height="15.0" fill="rgb(217,16,46)" rx="2" ry="2" />
<text  x="587.08" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:703 (12 samples, 0.42%)</title><rect x="867.8" y="37" width="5.0" height="15.0" fill="rgb(207,72,4)" rx="2" ry="2" />
<text  x="870.81" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:361 (11 samples, 0.39%)</title><rect x="434.4" y="69" width="4.5" height="15.0" fill="rgb(240,78,38)" rx="2" ry="2" />
<text  x="437.35" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1152 (1,552 samples, 54.40%)</title><rect x="268.9" y="117" width="641.9" height="15.0" fill="rgb(210,118,14)" rx="2" ry="2" />
<text  x="271.91" y="127.5" >java.math.MutableBigInteger.divide:1152</text>
</g>
<g >
<title>jdk.internal.util.ArraysSupport.newLength:638 (2 samples, 0.07%)</title><rect x="1070.5" y="53" width="0.8" height="15.0" fill="rgb(254,45,29)" rx="2" ry="2" />
<text  x="1073.47" y="63.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (2 samples, 0.07%)</title><rect x="964.6" y="117" width="0.8" height="15.0" fill="rgb(227,173,38)" rx="2" ry="2" />
<text  x="967.59" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:522 (10 samples, 0.35%)</title><rect x="1129.6" y="149" width="4.2" height="15.0" fill="rgb(205,223,31)" rx="2" ry="2" />
<text  x="1132.61" y="159.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.execute:191 (4 samples, 0.14%)</title><rect x="1185.0" y="325" width="1.7" height="15.0" fill="rgb(254,23,49)" rx="2" ry="2" />
<text  x="1188.04" y="335.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:157 (56 samples, 1.96%)</title><rect x="1031.2" y="117" width="23.1" height="15.0" fill="rgb(239,26,53)" rx="2" ry="2" />
<text  x="1034.18" y="127.5" >j..</text>
</g>
<g >
<title>java.lang.String.coder:4559 (4 samples, 0.14%)</title><rect x="1082.1" y="53" width="1.6" height="15.0" fill="rgb(228,124,35)" rx="2" ry="2" />
<text  x="1085.05" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2490 (13 samples, 0.46%)</title><rect x="43.1" y="149" width="5.4" height="15.0" fill="rgb(234,118,32)" rx="2" ry="2" />
<text  x="46.09" y="159.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (86 samples, 3.01%)</title><rect x="984.0" y="85" width="35.6" height="15.0" fill="rgb(251,192,8)" rx="2" ry="2" />
<text  x="987.03" y="95.5" >jav..</text>
</g>
<g >
<title>org.openjdk.jmh.util.Utils.tryWith:507 (1 samples, 0.04%)</title><rect x="1184.6" y="309" width="0.4" height="15.0" fill="rgb(205,149,36)" rx="2" ry="2" />
<text  x="1187.62" y="319.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKey:42 (356 samples, 12.48%)</title><rect x="15.0" y="197" width="147.2" height="15.0" fill="rgb(252,62,1)" rx="2" ry="2" />
<text  x="17.96" y="207.5" >org.sample.SM2Util..</text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_thrpt_jmhStub:122 (15 samples, 0.53%)</title><rect x="1169.7" y="229" width="6.2" height="15.0" fill="rgb(207,46,11)" rx="2" ry="2" />
<text  x="1172.73" y="239.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:162 (4 samples, 0.14%)</title><rect x="147.7" y="117" width="1.7" height="15.0" fill="rgb(228,120,45)" rx="2" ry="2" />
<text  x="150.73" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:241 (9 samples, 0.32%)</title><rect x="1065.9" y="85" width="3.7" height="15.0" fill="rgb(216,83,13)" rx="2" ry="2" />
<text  x="1068.92" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1212 (4 samples, 0.14%)</title><rect x="146.1" y="117" width="1.6" height="15.0" fill="rgb(240,88,42)" rx="2" ry="2" />
<text  x="149.07" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:588 (2 samples, 0.07%)</title><rect x="1100.2" y="101" width="0.9" height="15.0" fill="rgb(238,148,26)" rx="2" ry="2" />
<text  x="1103.25" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1554 (11 samples, 0.39%)</title><rect x="606.8" y="69" width="4.6" height="15.0" fill="rgb(213,201,12)" rx="2" ry="2" />
<text  x="609.82" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:249 (1 samples, 0.04%)</title><rect x="393.0" y="69" width="0.4" height="15.0" fill="rgb(232,167,28)" rx="2" ry="2" />
<text  x="395.99" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1140 (1 samples, 0.04%)</title><rect x="142.8" y="101" width="0.4" height="15.0" fill="rgb(237,122,36)" rx="2" ry="2" />
<text  x="145.77" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2494 (236 samples, 8.27%)</title><rect x="51.8" y="149" width="97.6" height="15.0" fill="rgb(220,137,20)" rx="2" ry="2" />
<text  x="54.77" y="159.5" >java.math.B..</text>
</g>
<g >
<title>java.lang.String.length:1499 (6 samples, 0.21%)</title><rect x="969.1" y="117" width="2.5" height="15.0" fill="rgb(242,102,39)" rx="2" ry="2" />
<text  x="972.14" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1094 (2 samples, 0.07%)</title><rect x="60.5" y="101" width="0.8" height="15.0" fill="rgb(213,84,47)" rx="2" ry="2" />
<text  x="63.46" y="111.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.read1:310 (4 samples, 0.14%)</title><rect x="1188.3" y="405" width="1.7" height="15.0" fill="rgb(222,164,51)" rx="2" ry="2" />
<text  x="1191.35" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:162 (1 samples, 0.04%)</title><rect x="952.6" y="101" width="0.4" height="15.0" fill="rgb(211,226,6)" rx="2" ry="2" />
<text  x="955.59" y="111.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm$MH+0x0000000800115c00.1391223627.invoke:-1 (2,819 samples, 98.81%)</title><rect x="10.0" y="277" width="1165.9" height="15.0" fill="rgb(214,121,28)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >java.lang.invoke.LambdaForm$MH+0x0000000800115c00.1391223627.invoke:-1</text>
</g>
<g >
<title>java.lang.Long.toString:164 (7 samples, 0.25%)</title><rect x="965.8" y="117" width="2.9" height="15.0" fill="rgb(214,12,14)" rx="2" ry="2" />
<text  x="968.83" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (10 samples, 0.35%)</title><rect x="836.0" y="53" width="4.1" height="15.0" fill="rgb(219,78,17)" rx="2" ry="2" />
<text  x="838.96" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (5 samples, 0.18%)</title><rect x="979.9" y="69" width="2.1" height="15.0" fill="rgb(207,149,16)" rx="2" ry="2" />
<text  x="982.89" y="79.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.readBytes:-1 (4 samples, 0.14%)</title><rect x="1188.3" y="357" width="1.7" height="15.0" fill="rgb(253,176,13)" rx="2" ry="2" />
<text  x="1191.35" y="367.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:528 (15 samples, 0.53%)</title><rect x="1153.2" y="149" width="6.2" height="15.0" fill="rgb(215,30,38)" rx="2" ry="2" />
<text  x="1156.19" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:362 (4 samples, 0.14%)</title><rect x="438.9" y="69" width="1.7" height="15.0" fill="rgb(234,154,26)" rx="2" ry="2" />
<text  x="441.90" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4145 (1 samples, 0.04%)</title><rect x="187.8" y="133" width="0.5" height="15.0" fill="rgb(232,116,31)" rx="2" ry="2" />
<text  x="190.85" y="143.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (5 samples, 0.18%)</title><rect x="966.7" y="101" width="2.0" height="15.0" fill="rgb(242,62,9)" rx="2" ry="2" />
<text  x="969.66" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (24 samples, 0.84%)</title><rect x="775.2" y="53" width="9.9" height="15.0" fill="rgb(253,88,18)" rx="2" ry="2" />
<text  x="778.16" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1117 (17 samples, 0.60%)</title><rect x="75.8" y="101" width="7.0" height="15.0" fill="rgb(211,67,8)" rx="2" ry="2" />
<text  x="78.76" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4155 (6 samples, 0.21%)</title><rect x="958.8" y="133" width="2.5" height="15.0" fill="rgb(240,46,28)" rx="2" ry="2" />
<text  x="961.80" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1735 (5 samples, 0.18%)</title><rect x="982.0" y="69" width="2.0" height="15.0" fill="rgb(242,220,0)" rx="2" ry="2" />
<text  x="984.96" y="79.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (6 samples, 0.21%)</title><rect x="193.2" y="101" width="2.5" height="15.0" fill="rgb(239,198,11)" rx="2" ry="2" />
<text  x="196.22" y="111.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.&lt;init&gt;:119 (1 samples, 0.04%)</title><rect x="170.5" y="149" width="0.4" height="15.0" fill="rgb(234,5,5)" rx="2" ry="2" />
<text  x="173.48" y="159.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitForInterruptibly:-1 (1 samples, 0.04%)</title><rect x="1184.6" y="277" width="0.4" height="15.0" fill="rgb(234,161,31)" rx="2" ry="2" />
<text  x="1187.62" y="287.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1494 (23 samples, 0.81%)</title><rect x="503.0" y="69" width="9.5" height="15.0" fill="rgb(210,212,43)" rx="2" ry="2" />
<text  x="506.01" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:407 (1 samples, 0.04%)</title><rect x="910.4" y="53" width="0.4" height="15.0" fill="rgb(235,58,54)" rx="2" ry="2" />
<text  x="913.41" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.execute:191 (1 samples, 0.04%)</title><rect x="1184.6" y="325" width="0.4" height="15.0" fill="rgb(220,213,45)" rx="2" ry="2" />
<text  x="1187.62" y="335.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1107 (2 samples, 0.07%)</title><rect x="68.3" y="101" width="0.8" height="15.0" fill="rgb(225,175,27)" rx="2" ry="2" />
<text  x="71.32" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (52 samples, 1.82%)</title><rect x="369.4" y="69" width="21.5" height="15.0" fill="rgb(221,96,50)" rx="2" ry="2" />
<text  x="372.42" y="79.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1196 (55 samples, 1.93%)</title><rect x="368.2" y="85" width="22.7" height="15.0" fill="rgb(209,21,4)" rx="2" ry="2" />
<text  x="371.18" y="95.5" >j..</text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4133 (8 samples, 0.28%)</title><rect x="171.3" y="133" width="3.3" height="15.0" fill="rgb(240,157,11)" rx="2" ry="2" />
<text  x="174.30" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (11 samples, 0.39%)</title><rect x="944.3" y="101" width="4.6" height="15.0" fill="rgb(250,206,54)" rx="2" ry="2" />
<text  x="947.32" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4089 (5 samples, 0.18%)</title><rect x="168.0" y="165" width="2.1" height="15.0" fill="rgb(249,97,6)" rx="2" ry="2" />
<text  x="171.00" y="175.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1493 (123 samples, 4.31%)</title><rect x="452.1" y="69" width="50.9" height="15.0" fill="rgb(241,97,52)" rx="2" ry="2" />
<text  x="455.14" y="79.5" >java...</text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKey:46 (2,295 samples, 80.44%)</title><rect x="162.2" y="197" width="949.2" height="15.0" fill="rgb(226,64,7)" rx="2" ry="2" />
<text  x="165.20" y="207.5" >org.sample.SM2Util.getHexPublicKey:46</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1623 (44 samples, 1.54%)</title><rect x="804.9" y="69" width="18.2" height="15.0" fill="rgb(245,223,16)" rx="2" ry="2" />
<text  x="807.94" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (20 samples, 0.70%)</title><rect x="926.5" y="101" width="8.3" height="15.0" fill="rgb(231,137,38)" rx="2" ry="2" />
<text  x="929.54" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:396 (3 samples, 0.11%)</title><rect x="903.8" y="53" width="1.2" height="15.0" fill="rgb(207,151,1)" rx="2" ry="2" />
<text  x="906.79" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:281 (5 samples, 0.18%)</title><rect x="1184.6" y="389" width="2.1" height="15.0" fill="rgb(251,81,20)" rx="2" ry="2" />
<text  x="1187.62" y="399.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1126 (1 samples, 0.04%)</title><rect x="91.1" y="101" width="0.4" height="15.0" fill="rgb(205,71,26)" rx="2" ry="2" />
<text  x="94.07" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1563 (6 samples, 0.21%)</title><rect x="718.1" y="69" width="2.5" height="15.0" fill="rgb(247,35,13)" rx="2" ry="2" />
<text  x="721.08" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:121 (80 samples, 2.80%)</title><rect x="231.3" y="117" width="33.1" height="15.0" fill="rgb(221,165,16)" rx="2" ry="2" />
<text  x="234.28" y="127.5" >ja..</text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_thrpt_jmhStub:119 (2,791 samples, 97.83%)</title><rect x="10.0" y="229" width="1154.4" height="15.0" fill="rgb(229,67,14)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_thrpt_jmhStub:119</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1555 (233 samples, 8.17%)</title><rect x="611.4" y="69" width="96.3" height="15.0" fill="rgb(238,211,47)" rx="2" ry="2" />
<text  x="614.37" y="79.5" >java.math.M..</text>
</g>
<g >
<title>org.openjdk.jmh.util.InputStreamDrainer.run:80 (8 samples, 0.28%)</title><rect x="1186.7" y="469" width="3.3" height="15.0" fill="rgb(229,13,43)" rx="2" ry="2" />
<text  x="1189.69" y="479.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4153 (24 samples, 0.84%)</title><rect x="948.9" y="133" width="9.9" height="15.0" fill="rgb(224,148,29)" rx="2" ry="2" />
<text  x="951.87" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1605 (6 samples, 0.21%)</title><rect x="797.9" y="69" width="2.5" height="15.0" fill="rgb(246,7,16)" rx="2" ry="2" />
<text  x="800.91" y="79.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (8 samples, 0.28%)</title><rect x="398.4" y="53" width="3.3" height="15.0" fill="rgb(251,110,15)" rx="2" ry="2" />
<text  x="401.37" y="63.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKey:48 (128 samples, 4.49%)</title><rect x="1111.4" y="197" width="53.0" height="15.0" fill="rgb(227,12,25)" rx="2" ry="2" />
<text  x="1114.42" y="207.5" >org.s..</text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.afterIteration:146 (4 samples, 0.14%)</title><rect x="1185.0" y="341" width="1.7" height="15.0" fill="rgb(216,105,46)" rx="2" ry="2" />
<text  x="1188.04" y="351.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4173 (2 samples, 0.07%)</title><rect x="1062.6" y="133" width="0.8" height="15.0" fill="rgb(252,137,54)" rx="2" ry="2" />
<text  x="1065.61" y="143.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3895 (4 samples, 0.14%)</title><rect x="933.2" y="85" width="1.6" height="15.0" fill="rgb(246,209,7)" rx="2" ry="2" />
<text  x="936.15" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4167 (117 samples, 4.10%)</title><rect x="971.6" y="133" width="48.4" height="15.0" fill="rgb(249,176,16)" rx="2" ry="2" />
<text  x="974.62" y="143.5" >java..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1536 (3 samples, 0.11%)</title><rect x="574.2" y="69" width="1.2" height="15.0" fill="rgb(250,22,42)" rx="2" ry="2" />
<text  x="577.15" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1579 (24 samples, 0.84%)</title><rect x="734.2" y="69" width="9.9" height="15.0" fill="rgb(206,170,24)" rx="2" ry="2" />
<text  x="737.21" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:499 (2 samples, 0.07%)</title><rect x="1175.9" y="421" width="0.9" height="15.0" fill="rgb(241,152,43)" rx="2" ry="2" />
<text  x="1178.94" y="431.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4554 (7 samples, 0.25%)</title><rect x="1059.7" y="85" width="2.9" height="15.0" fill="rgb(207,108,17)" rx="2" ry="2" />
<text  x="1062.72" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1532 (9 samples, 0.32%)</title><rect x="570.4" y="69" width="3.8" height="15.0" fill="rgb(206,126,35)" rx="2" ry="2" />
<text  x="573.43" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.doPeriodic:189 (18 samples, 0.63%)</title><rect x="1177.2" y="405" width="7.4" height="15.0" fill="rgb(243,80,8)" rx="2" ry="2" />
<text  x="1180.18" y="415.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:511 (2 samples, 0.07%)</title><rect x="1128.8" y="149" width="0.8" height="15.0" fill="rgb(210,6,38)" rx="2" ry="2" />
<text  x="1131.79" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:111 (8 samples, 0.28%)</title><rect x="398.4" y="69" width="3.3" height="15.0" fill="rgb(243,102,31)" rx="2" ry="2" />
<text  x="401.37" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (16 samples, 0.56%)</title><rect x="537.8" y="53" width="6.6" height="15.0" fill="rgb(249,169,0)" rx="2" ry="2" />
<text  x="540.75" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4177 (91 samples, 3.19%)</title><rect x="1063.4" y="133" width="37.7" height="15.0" fill="rgb(242,188,30)" rx="2" ry="2" />
<text  x="1066.44" y="143.5" >jav..</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (9 samples, 0.32%)</title><rect x="1071.7" y="85" width="3.7" height="15.0" fill="rgb(223,96,41)" rx="2" ry="2" />
<text  x="1074.71" y="95.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (2 samples, 0.07%)</title><rect x="1104.8" y="101" width="0.8" height="15.0" fill="rgb(238,59,38)" rx="2" ry="2" />
<text  x="1107.80" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (12 samples, 0.42%)</title><rect x="1078.7" y="69" width="5.0" height="15.0" fill="rgb(216,136,5)" rx="2" ry="2" />
<text  x="1081.74" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3538 (4 samples, 0.14%)</title><rect x="1068.0" y="69" width="1.6" height="15.0" fill="rgb(232,53,13)" rx="2" ry="2" />
<text  x="1070.99" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.toUpperCase:3511 (116 samples, 4.07%)</title><rect x="1116.4" y="181" width="48.0" height="15.0" fill="rgb(226,12,29)" rx="2" ry="2" />
<text  x="1119.38" y="191.5" >java..</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1750 (60 samples, 2.10%)</title><rect x="1075.4" y="85" width="24.8" height="15.0" fill="rgb(211,171,33)" rx="2" ry="2" />
<text  x="1078.43" y="95.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (21 samples, 0.74%)</title><rect x="950.1" y="117" width="8.7" height="15.0" fill="rgb(228,49,18)" rx="2" ry="2" />
<text  x="953.11" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1508 (5 samples, 0.18%)</title><rect x="545.6" y="69" width="2.1" height="15.0" fill="rgb(237,47,3)" rx="2" ry="2" />
<text  x="548.61" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.length:1499 (1 samples, 0.04%)</title><rect x="1063.0" y="117" width="0.4" height="15.0" fill="rgb(253,145,29)" rx="2" ry="2" />
<text  x="1066.02" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1614 (1 samples, 0.04%)</title><rect x="804.1" y="69" width="0.4" height="15.0" fill="rgb(236,104,54)" rx="2" ry="2" />
<text  x="807.11" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (61 samples, 2.14%)</title><rect x="994.4" y="69" width="25.2" height="15.0" fill="rgb(227,216,7)" rx="2" ry="2" />
<text  x="997.37" y="79.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1208 (8 samples, 0.28%)</title><rect x="395.1" y="85" width="3.3" height="15.0" fill="rgb(228,98,2)" rx="2" ry="2" />
<text  x="398.06" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:102 (8 samples, 0.28%)</title><rect x="192.4" y="117" width="3.3" height="15.0" fill="rgb(211,31,0)" rx="2" ry="2" />
<text  x="195.40" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:391 (1 samples, 0.04%)</title><rect x="876.5" y="53" width="0.4" height="15.0" fill="rgb(209,161,7)" rx="2" ry="2" />
<text  x="879.49" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1220 (61 samples, 2.14%)</title><rect x="416.2" y="85" width="25.2" height="15.0" fill="rgb(232,124,0)" rx="2" ry="2" />
<text  x="419.15" y="95.5" >j..</text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (116 samples, 4.07%)</title><rect x="972.0" y="117" width="48.0" height="15.0" fill="rgb(219,142,52)" rx="2" ry="2" />
<text  x="975.03" y="127.5" >java..</text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:550 (11 samples, 0.39%)</title><rect x="849.6" y="53" width="4.6" height="15.0" fill="rgb(211,42,30)" rx="2" ry="2" />
<text  x="852.61" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1526 (3 samples, 0.11%)</title><rect x="560.5" y="69" width="1.2" height="15.0" fill="rgb(218,38,41)" rx="2" ry="2" />
<text  x="563.50" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1595 (111 samples, 3.89%)</title><rect x="752.0" y="69" width="45.9" height="15.0" fill="rgb(247,128,30)" rx="2" ry="2" />
<text  x="755.00" y="79.5" >java..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1105 (17 samples, 0.60%)</title><rect x="61.3" y="101" width="7.0" height="15.0" fill="rgb(242,30,45)" rx="2" ry="2" />
<text  x="64.29" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (14 samples, 0.49%)</title><rect x="484.4" y="53" width="5.8" height="15.0" fill="rgb(249,1,6)" rx="2" ry="2" />
<text  x="487.40" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:705 (3 samples, 0.11%)</title><rect x="872.8" y="37" width="1.2" height="15.0" fill="rgb(229,132,4)" rx="2" ry="2" />
<text  x="875.77" y="47.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder$$Lambda$112+0x000000080017a690.1519956952.run:-1 (21 samples, 0.74%)</title><rect x="1175.9" y="453" width="8.7" height="15.0" fill="rgb(210,98,9)" rx="2" ry="2" />
<text  x="1178.94" y="463.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:525 (8 samples, 0.28%)</title><rect x="1135.0" y="149" width="3.3" height="15.0" fill="rgb(214,19,36)" rx="2" ry="2" />
<text  x="1137.99" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (69 samples, 2.42%)</title><rect x="455.9" y="53" width="28.5" height="15.0" fill="rgb(216,137,4)" rx="2" ry="2" />
<text  x="458.86" y="63.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (3 samples, 0.11%)</title><rect x="905.4" y="53" width="1.3" height="15.0" fill="rgb(226,43,46)" rx="2" ry="2" />
<text  x="908.44" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1140 (2 samples, 0.07%)</title><rect x="951.8" y="101" width="0.8" height="15.0" fill="rgb(227,208,48)" rx="2" ry="2" />
<text  x="954.77" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (10 samples, 0.35%)</title><rect x="385.1" y="53" width="4.2" height="15.0" fill="rgb(222,96,16)" rx="2" ry="2" />
<text  x="388.13" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:397 (4 samples, 0.14%)</title><rect x="876.9" y="53" width="1.7" height="15.0" fill="rgb(250,148,35)" rx="2" ry="2" />
<text  x="879.91" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:249 (4 samples, 0.14%)</title><rect x="57.2" y="101" width="1.6" height="15.0" fill="rgb(213,198,46)" rx="2" ry="2" />
<text  x="60.15" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1612 (6 samples, 0.21%)</title><rect x="800.4" y="69" width="2.5" height="15.0" fill="rgb(244,216,53)" rx="2" ry="2" />
<text  x="803.39" y="79.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.read:269 (4 samples, 0.14%)</title><rect x="1186.7" y="453" width="1.6" height="15.0" fill="rgb(227,16,42)" rx="2" ry="2" />
<text  x="1189.69" y="463.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4170 (13 samples, 0.46%)</title><rect x="1020.0" y="133" width="5.4" height="15.0" fill="rgb(227,43,13)" rx="2" ry="2" />
<text  x="1023.01" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:248 (4 samples, 0.14%)</title><rect x="391.3" y="69" width="1.7" height="15.0" fill="rgb(234,15,41)" rx="2" ry="2" />
<text  x="394.34" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:161 (1 samples, 0.04%)</title><rect x="965.4" y="117" width="0.4" height="15.0" fill="rgb(251,114,23)" rx="2" ry="2" />
<text  x="968.42" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4152 (92 samples, 3.22%)</title><rect x="910.8" y="133" width="38.1" height="15.0" fill="rgb(233,77,38)" rx="2" ry="2" />
<text  x="913.82" y="143.5" >jav..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1527 (2 samples, 0.07%)</title><rect x="561.7" y="69" width="0.9" height="15.0" fill="rgb(225,187,16)" rx="2" ry="2" />
<text  x="564.74" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append:179 (91 samples, 3.19%)</title><rect x="1063.4" y="117" width="37.7" height="15.0" fill="rgb(253,3,33)" rx="2" ry="2" />
<text  x="1066.44" y="127.5" >jav..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1112 (9 samples, 0.32%)</title><rect x="70.4" y="101" width="3.7" height="15.0" fill="rgb(227,153,26)" rx="2" ry="2" />
<text  x="73.39" y="111.5" ></text>
</g>
<g >
<title>java.util.Locale.getDefault:998 (2 samples, 0.07%)</title><rect x="1163.5" y="165" width="0.9" height="15.0" fill="rgb(220,124,16)" rx="2" ry="2" />
<text  x="1166.53" y="175.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1528 (16 samples, 0.56%)</title><rect x="562.6" y="69" width="6.6" height="15.0" fill="rgb(236,122,26)" rx="2" ry="2" />
<text  x="565.57" y="79.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3182 (3 samples, 0.11%)</title><rect x="943.1" y="85" width="1.2" height="15.0" fill="rgb(210,36,39)" rx="2" ry="2" />
<text  x="946.08" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1565 (1 samples, 0.04%)</title><rect x="721.0" y="69" width="0.4" height="15.0" fill="rgb(219,12,28)" rx="2" ry="2" />
<text  x="723.98" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1547 (22 samples, 0.77%)</title><rect x="584.9" y="69" width="9.1" height="15.0" fill="rgb(223,211,0)" rx="2" ry="2" />
<text  x="587.90" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:402 (13 samples, 0.46%)</title><rect x="137.4" y="85" width="5.4" height="15.0" fill="rgb(210,35,44)" rx="2" ry="2" />
<text  x="140.39" y="95.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitFor:569 (1 samples, 0.04%)</title><rect x="1184.6" y="293" width="0.4" height="15.0" fill="rgb(232,188,14)" rx="2" ry="2" />
<text  x="1187.62" y="303.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3538 (6 samples, 0.21%)</title><rect x="974.5" y="69" width="2.5" height="15.0" fill="rgb(236,25,2)" rx="2" ry="2" />
<text  x="977.51" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:553 (6 samples, 0.21%)</title><rect x="874.0" y="53" width="2.5" height="15.0" fill="rgb(243,125,51)" rx="2" ry="2" />
<text  x="877.01" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.startProfilers:249 (1 samples, 0.04%)</title><rect x="1184.6" y="357" width="0.4" height="15.0" fill="rgb(235,100,25)" rx="2" ry="2" />
<text  x="1187.62" y="367.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4148 (61 samples, 2.14%)</title><rect x="188.3" y="133" width="25.2" height="15.0" fill="rgb(242,81,49)" rx="2" ry="2" />
<text  x="191.26" y="143.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1127 (103 samples, 3.61%)</title><rect x="91.5" y="101" width="42.6" height="15.0" fill="rgb(238,37,1)" rx="2" ry="2" />
<text  x="94.48" y="111.5" >java..</text>
</g>
<g >
<title>java.math.BigInteger.bitLengthForInt:2727 (7 samples, 0.25%)</title><rect x="851.3" y="37" width="2.9" height="15.0" fill="rgb(210,64,42)" rx="2" ry="2" />
<text  x="854.26" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1677 (17 samples, 0.60%)</title><rect x="903.8" y="69" width="7.0" height="15.0" fill="rgb(242,84,11)" rx="2" ry="2" />
<text  x="906.79" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1468 (9 samples, 0.32%)</title><rect x="524.9" y="53" width="3.8" height="15.0" fill="rgb(212,32,27)" rx="2" ry="2" />
<text  x="527.93" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4099 (2,251 samples, 78.90%)</title><rect x="170.9" y="165" width="931.0" height="15.0" fill="rgb(221,62,22)" rx="2" ry="2" />
<text  x="173.89" y="175.5" >java.math.BigInteger.toString:4099</text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:552 (47 samples, 1.65%)</title><rect x="854.6" y="53" width="19.4" height="15.0" fill="rgb(234,62,27)" rx="2" ry="2" />
<text  x="857.57" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:421 (4 samples, 0.14%)</title><rect x="1185.0" y="373" width="1.7" height="15.0" fill="rgb(214,21,0)" rx="2" ry="2" />
<text  x="1188.04" y="383.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (7 samples, 0.25%)</title><rect x="833.1" y="53" width="2.9" height="15.0" fill="rgb(218,211,35)" rx="2" ry="2" />
<text  x="836.06" y="63.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:224 (1 samples, 0.04%)</title><rect x="1177.2" y="389" width="0.4" height="15.0" fill="rgb(225,61,53)" rx="2" ry="2" />
<text  x="1180.18" y="399.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1192 (18 samples, 0.63%)</title><rect x="360.7" y="85" width="7.5" height="15.0" fill="rgb(217,18,31)" rx="2" ry="2" />
<text  x="363.73" y="95.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:164 (16 samples, 0.56%)</title><rect x="1056.0" y="117" width="6.6" height="15.0" fill="rgb(228,67,27)" rx="2" ry="2" />
<text  x="1058.99" y="127.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:527 (20 samples, 0.70%)</title><rect x="1144.9" y="149" width="8.3" height="15.0" fill="rgb(233,26,20)" rx="2" ry="2" />
<text  x="1147.92" y="159.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (3 samples, 0.11%)</title><rect x="967.5" y="85" width="1.2" height="15.0" fill="rgb(233,163,22)" rx="2" ry="2" />
<text  x="970.48" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4101 (22 samples, 0.77%)</title><rect x="1101.9" y="165" width="9.1" height="15.0" fill="rgb(215,107,2)" rx="2" ry="2" />
<text  x="1104.90" y="175.5" ></text>
</g>
<g >
<title>java.lang.Thread.run:1589 (2,840 samples, 99.54%)</title><rect x="10.0" y="469" width="1174.6" height="15.0" fill="rgb(254,150,2)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >java.lang.Thread.run:1589</text>
</g>
<g >
<title>java.lang.StringLatin1.newString:763 (15 samples, 0.53%)</title><rect x="1056.4" y="101" width="6.2" height="15.0" fill="rgb(230,225,41)" rx="2" ry="2" />
<text  x="1059.41" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:165 (4 samples, 0.14%)</title><rect x="953.4" y="101" width="1.7" height="15.0" fill="rgb(252,152,10)" rx="2" ry="2" />
<text  x="956.42" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4471 (23 samples, 0.81%)</title><rect x="984.9" y="69" width="9.5" height="15.0" fill="rgb(227,175,26)" rx="2" ry="2" />
<text  x="987.85" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1495 (6 samples, 0.21%)</title><rect x="512.5" y="69" width="2.5" height="15.0" fill="rgb(248,192,43)" rx="2" ry="2" />
<text  x="515.52" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1652 (3 samples, 0.11%)</title><rect x="831.8" y="69" width="1.3" height="15.0" fill="rgb(243,145,50)" rx="2" ry="2" />
<text  x="834.82" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475 (2,819 samples, 98.81%)</title><rect x="10.0" y="357" width="1165.9" height="15.0" fill="rgb(234,88,52)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:475</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:103 (41 samples, 1.44%)</title><rect x="195.7" y="117" width="17.0" height="15.0" fill="rgb(246,151,40)" rx="2" ry="2" />
<text  x="198.71" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4149 (38 samples, 1.33%)</title><rect x="213.5" y="133" width="15.7" height="15.0" fill="rgb(247,39,49)" rx="2" ry="2" />
<text  x="216.49" y="143.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.read:293 (4 samples, 0.14%)</title><rect x="1188.3" y="373" width="1.7" height="15.0" fill="rgb(246,189,32)" rx="2" ry="2" />
<text  x="1191.35" y="383.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:159 (4 samples, 0.14%)</title><rect x="1054.3" y="117" width="1.7" height="15.0" fill="rgb(205,127,28)" rx="2" ry="2" />
<text  x="1057.34" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1209 (5 samples, 0.18%)</title><rect x="144.0" y="117" width="2.1" height="15.0" fill="rgb(247,78,44)" rx="2" ry="2" />
<text  x="147.01" y="127.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitFor:569 (4 samples, 0.14%)</title><rect x="1185.0" y="293" width="1.7" height="15.0" fill="rgb(213,39,6)" rx="2" ry="2" />
<text  x="1188.04" y="303.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:648 (44 samples, 1.54%)</title><rect x="757.0" y="53" width="18.2" height="15.0" fill="rgb(239,10,44)" rx="2" ry="2" />
<text  x="759.96" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3181 (17 samples, 0.60%)</title><rect x="936.0" y="85" width="7.1" height="15.0" fill="rgb(245,92,53)" rx="2" ry="2" />
<text  x="939.05" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (81 samples, 2.84%)</title><rect x="915.4" y="117" width="33.5" height="15.0" fill="rgb(246,37,9)" rx="2" ry="2" />
<text  x="918.37" y="127.5" >ja..</text>
</g>
<g >
<title>java.lang.StringLatin1.canEncode:51 (14 samples, 0.49%)</title><rect x="1153.6" y="133" width="5.8" height="15.0" fill="rgb(231,115,26)" rx="2" ry="2" />
<text  x="1156.60" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1471 (5 samples, 0.18%)</title><rect x="500.1" y="53" width="2.1" height="15.0" fill="rgb(222,76,0)" rx="2" ry="2" />
<text  x="503.12" y="63.5" ></text>
</g>
<g >
<title>java.util.Objects.checkIndex:385 (1 samples, 0.04%)</title><rect x="1176.4" y="373" width="0.4" height="15.0" fill="rgb(251,0,7)" rx="2" ry="2" />
<text  x="1179.35" y="383.5" ></text>
</g>
<g >
<title>java.io.BufferedInputStream.read:361 (4 samples, 0.14%)</title><rect x="1188.3" y="437" width="1.7" height="15.0" fill="rgb(250,49,23)" rx="2" ry="2" />
<text  x="1191.35" y="447.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1514 (1 samples, 0.04%)</title><rect x="559.3" y="69" width="0.4" height="15.0" fill="rgb(246,197,1)" rx="2" ry="2" />
<text  x="562.26" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:546 (1 samples, 0.04%)</title><rect x="849.2" y="53" width="0.4" height="15.0" fill="rgb(222,222,2)" rx="2" ry="2" />
<text  x="852.19" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:510 (2 samples, 0.07%)</title><rect x="1128.0" y="149" width="0.8" height="15.0" fill="rgb(251,150,50)" rx="2" ry="2" />
<text  x="1130.96" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1511 (10 samples, 0.35%)</title><rect x="553.5" y="69" width="4.1" height="15.0" fill="rgb(228,193,43)" rx="2" ry="2" />
<text  x="556.47" y="79.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.newString:760 (2 samples, 0.07%)</title><rect x="965.8" y="101" width="0.9" height="15.0" fill="rgb(240,177,44)" rx="2" ry="2" />
<text  x="968.83" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1573 (1 samples, 0.04%)</title><rect x="721.4" y="69" width="0.4" height="15.0" fill="rgb(218,70,20)" rx="2" ry="2" />
<text  x="724.39" y="79.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run:642 (2,819 samples, 98.81%)</title><rect x="10.0" y="453" width="1165.9" height="15.0" fill="rgb(225,104,48)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >java.util.concurrent.ThreadPoolExecutor$Worker.run:642</text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1467 (3 samples, 0.11%)</title><rect x="454.6" y="53" width="1.3" height="15.0" fill="rgb(243,51,46)" rx="2" ry="2" />
<text  x="457.62" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:68 (2 samples, 0.07%)</title><rect x="212.7" y="117" width="0.8" height="15.0" fill="rgb(228,73,6)" rx="2" ry="2" />
<text  x="215.66" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1531 (3 samples, 0.11%)</title><rect x="569.2" y="69" width="1.2" height="15.0" fill="rgb(215,229,16)" rx="2" ry="2" />
<text  x="572.19" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:650 (21 samples, 0.74%)</title><rect x="785.1" y="53" width="8.7" height="15.0" fill="rgb(238,178,1)" rx="2" ry="2" />
<text  x="788.09" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:586 (13 samples, 0.46%)</title><rect x="973.7" y="101" width="5.4" height="15.0" fill="rgb(210,86,29)" rx="2" ry="2" />
<text  x="976.69" y="111.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:227 (1 samples, 0.04%)</title><rect x="1177.6" y="389" width="0.4" height="15.0" fill="rgb(252,189,47)" rx="2" ry="2" />
<text  x="1180.59" y="399.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4530 (1 samples, 0.04%)</title><rect x="1105.6" y="117" width="0.4" height="15.0" fill="rgb(212,142,32)" rx="2" ry="2" />
<text  x="1108.63" y="127.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BaseRunner.runBenchmark:233 (5 samples, 0.18%)</title><rect x="1184.6" y="405" width="2.1" height="15.0" fill="rgb(225,18,47)" rx="2" ry="2" />
<text  x="1187.62" y="415.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.stopProfilers:260 (4 samples, 0.14%)</title><rect x="1185.0" y="357" width="1.7" height="15.0" fill="rgb(215,54,49)" rx="2" ry="2" />
<text  x="1188.04" y="367.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:397 (1 samples, 0.04%)</title><rect x="905.0" y="53" width="0.4" height="15.0" fill="rgb(226,106,51)" rx="2" ry="2" />
<text  x="908.03" y="63.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (4 samples, 0.14%)</title><rect x="1069.6" y="69" width="1.7" height="15.0" fill="rgb(238,212,50)" rx="2" ry="2" />
<text  x="1072.64" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.longValue:4349 (2 samples, 0.07%)</title><rect x="960.5" y="117" width="0.8" height="15.0" fill="rgb(244,91,3)" rx="2" ry="2" />
<text  x="963.45" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:406 (5 samples, 0.18%)</title><rect x="901.7" y="53" width="2.1" height="15.0" fill="rgb(244,116,6)" rx="2" ry="2" />
<text  x="904.72" y="63.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.ForkedRunner.run:72 (5 samples, 0.18%)</title><rect x="1184.6" y="453" width="2.1" height="15.0" fill="rgb(247,41,38)" rx="2" ry="2" />
<text  x="1187.62" y="463.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1469 (4 samples, 0.14%)</title><rect x="528.7" y="53" width="1.6" height="15.0" fill="rgb(252,114,23)" rx="2" ry="2" />
<text  x="531.65" y="63.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:249 (7 samples, 0.25%)</title><rect x="1147.8" y="133" width="2.9" height="15.0" fill="rgb(231,183,35)" rx="2" ry="2" />
<text  x="1150.81" y="143.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl:156 (2,819 samples, 98.81%)</title><rect x="10.0" y="309" width="1165.9" height="15.0" fill="rgb(250,205,4)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl:156</text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:168 (5 samples, 0.18%)</title><rect x="955.1" y="101" width="2.0" height="15.0" fill="rgb(219,37,39)" rx="2" ry="2" />
<text  x="958.08" y="111.5" ></text>
</g>
<g >
<title>java.io.FilterInputStream.read:95 (4 samples, 0.14%)</title><rect x="1188.3" y="453" width="1.7" height="15.0" fill="rgb(235,23,22)" rx="2" ry="2" />
<text  x="1191.35" y="463.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.compare:268 (8 samples, 0.28%)</title><rect x="364.9" y="69" width="3.3" height="15.0" fill="rgb(250,198,46)" rx="2" ry="2" />
<text  x="367.87" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1510 (14 samples, 0.49%)</title><rect x="547.7" y="69" width="5.8" height="15.0" fill="rgb(247,177,24)" rx="2" ry="2" />
<text  x="550.68" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (4 samples, 0.14%)</title><rect x="980.3" y="53" width="1.7" height="15.0" fill="rgb(238,27,26)" rx="2" ry="2" />
<text  x="983.30" y="63.5" ></text>
</g>
<g >
<title>org.sample.BenchmarkPublicKeys.sm2p256v1_compressed:21 (2,788 samples, 97.72%)</title><rect x="11.2" y="213" width="1153.2" height="15.0" fill="rgb(206,58,49)" rx="2" ry="2" />
<text  x="14.24" y="223.5" >org.sample.BenchmarkPublicKeys.sm2p256v1_compressed:21</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1637 (1 samples, 0.04%)</title><rect x="831.4" y="69" width="0.4" height="15.0" fill="rgb(233,206,30)" rx="2" ry="2" />
<text  x="834.41" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1488 (2 samples, 0.07%)</title><rect x="443.0" y="69" width="0.9" height="15.0" fill="rgb(219,124,18)" rx="2" ry="2" />
<text  x="446.04" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1497 (11 samples, 0.39%)</title><rect x="516.2" y="69" width="4.6" height="15.0" fill="rgb(221,223,32)" rx="2" ry="2" />
<text  x="519.25" y="79.5" ></text>
</g>
<g >
<title>java.util.concurrent.ThreadPoolExecutor.runWorker:1144 (2,819 samples, 98.81%)</title><rect x="10.0" y="437" width="1165.9" height="15.0" fill="rgb(223,41,29)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >java.util.concurrent.ThreadPoolExecutor.runWorker:1144</text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:702 (14 samples, 0.49%)</title><rect x="862.0" y="37" width="5.8" height="15.0" fill="rgb(228,150,28)" rx="2" ry="2" />
<text  x="865.02" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:112 (20 samples, 0.70%)</title><rect x="401.7" y="69" width="8.3" height="15.0" fill="rgb(216,73,53)" rx="2" ry="2" />
<text  x="404.68" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (1 samples, 0.04%)</title><rect x="515.8" y="53" width="0.4" height="15.0" fill="rgb(231,183,5)" rx="2" ry="2" />
<text  x="518.83" y="63.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOf:3537 (3 samples, 0.11%)</title><rect x="1066.7" y="69" width="1.3" height="15.0" fill="rgb(250,59,22)" rx="2" ry="2" />
<text  x="1069.75" y="79.5" ></text>
</g>
<g >
<title>java.math.BigInteger.&lt;init&gt;:1138 (4 samples, 0.14%)</title><rect x="917.4" y="101" width="1.7" height="15.0" fill="rgb(227,151,35)" rx="2" ry="2" />
<text  x="920.44" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1141 (2 samples, 0.07%)</title><rect x="143.2" y="101" width="0.8" height="15.0" fill="rgb(244,32,47)" rx="2" ry="2" />
<text  x="146.18" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1550 (15 samples, 0.53%)</title><rect x="594.0" y="69" width="6.2" height="15.0" fill="rgb(207,100,43)" rx="2" ry="2" />
<text  x="597.00" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:588 (1 samples, 0.04%)</title><rect x="1019.6" y="101" width="0.4" height="15.0" fill="rgb(229,114,24)" rx="2" ry="2" />
<text  x="1022.60" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1192 (14 samples, 0.49%)</title><rect x="156.4" y="181" width="5.8" height="15.0" fill="rgb(226,198,40)" rx="2" ry="2" />
<text  x="159.41" y="191.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4139 (15 samples, 0.53%)</title><rect x="174.6" y="133" width="6.2" height="15.0" fill="rgb(250,32,31)" rx="2" ry="2" />
<text  x="177.61" y="143.5" ></text>
</g>
<g >
<title>java.lang.ProcessImpl.waitForInterruptibly:-1 (4 samples, 0.14%)</title><rect x="1185.0" y="277" width="1.7" height="15.0" fill="rgb(248,132,34)" rx="2" ry="2" />
<text  x="1188.04" y="287.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (3 samples, 0.11%)</title><rect x="1058.5" y="69" width="1.2" height="15.0" fill="rgb(247,184,11)" rx="2" ry="2" />
<text  x="1061.48" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.consumer.EventLog.update:91 (1 samples, 0.04%)</title><rect x="1176.8" y="405" width="0.4" height="15.0" fill="rgb(233,14,21)" rx="2" ry="2" />
<text  x="1179.76" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:170 (4 samples, 0.14%)</title><rect x="957.1" y="101" width="1.7" height="15.0" fill="rgb(254,190,47)" rx="2" ry="2" />
<text  x="960.14" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:190 (1 samples, 0.04%)</title><rect x="915.0" y="117" width="0.4" height="15.0" fill="rgb(225,73,25)" rx="2" ry="2" />
<text  x="917.96" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.normalize:403 (4 samples, 0.14%)</title><rect x="906.7" y="53" width="1.6" height="15.0" fill="rgb(237,210,34)" rx="2" ry="2" />
<text  x="909.68" y="63.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.periodicTask:503 (18 samples, 0.63%)</title><rect x="1177.2" y="421" width="7.4" height="15.0" fill="rgb(237,158,42)" rx="2" ry="2" />
<text  x="1180.18" y="431.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:114 (4 samples, 0.14%)</title><rect x="410.0" y="69" width="1.6" height="15.0" fill="rgb(213,68,51)" rx="2" ry="2" />
<text  x="412.95" y="79.5" ></text>
</g>
<g >
<title>java.util.concurrent.FutureTask.run:317 (2,819 samples, 98.81%)</title><rect x="10.0" y="421" width="1165.9" height="15.0" fill="rgb(246,27,38)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >java.util.concurrent.FutureTask.run:317</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1212 (43 samples, 1.51%)</title><rect x="398.4" y="85" width="17.8" height="15.0" fill="rgb(236,190,2)" rx="2" ry="2" />
<text  x="401.37" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.mod:2829 (257 samples, 9.01%)</title><rect x="43.1" y="181" width="106.3" height="15.0" fill="rgb(232,175,35)" rx="2" ry="2" />
<text  x="46.09" y="191.5" >java.math.Big..</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:141 (4 samples, 0.14%)</title><rect x="54.3" y="101" width="1.6" height="15.0" fill="rgb(245,229,44)" rx="2" ry="2" />
<text  x="57.26" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1538 (13 samples, 0.46%)</title><rect x="577.0" y="69" width="5.4" height="15.0" fill="rgb(237,32,32)" rx="2" ry="2" />
<text  x="580.05" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:651 (1 samples, 0.04%)</title><rect x="841.7" y="53" width="0.5" height="15.0" fill="rgb(254,193,49)" rx="2" ry="2" />
<text  x="844.75" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainderKnuth:2491 (5 samples, 0.18%)</title><rect x="48.5" y="149" width="2.0" height="15.0" fill="rgb(242,157,35)" rx="2" ry="2" />
<text  x="51.46" y="159.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4529 (7 samples, 0.25%)</title><rect x="1102.7" y="117" width="2.9" height="15.0" fill="rgb(209,16,47)" rx="2" ry="2" />
<text  x="1105.73" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:242 (2 samples, 0.07%)</title><rect x="977.0" y="85" width="0.8" height="15.0" fill="rgb(213,105,32)" rx="2" ry="2" />
<text  x="980.00" y="95.5" ></text>
</g>
<g >
<title>java.math.BigInteger.remainder:2482 (257 samples, 9.01%)</title><rect x="43.1" y="165" width="106.3" height="15.0" fill="rgb(254,115,35)" rx="2" ry="2" />
<text  x="46.09" y="175.5" >java.math.Big..</text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:523 (3 samples, 0.11%)</title><rect x="1133.8" y="149" width="1.2" height="15.0" fill="rgb(230,226,47)" rx="2" ry="2" />
<text  x="1136.75" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.clear:247 (3 samples, 0.11%)</title><rect x="55.9" y="101" width="1.3" height="15.0" fill="rgb(233,31,27)" rx="2" ry="2" />
<text  x="58.91" y="111.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.JVM.emitEvent:-1 (16 samples, 0.56%)</title><rect x="1178.0" y="357" width="6.6" height="15.0" fill="rgb(253,138,43)" rx="2" ry="2" />
<text  x="1181.01" y="367.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:533 (3 samples, 0.11%)</title><rect x="1162.3" y="149" width="1.2" height="15.0" fill="rgb(254,158,23)" rx="2" ry="2" />
<text  x="1165.29" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1208 (206 samples, 7.22%)</title><rect x="58.8" y="117" width="85.2" height="15.0" fill="rgb(252,209,3)" rx="2" ry="2" />
<text  x="61.80" y="127.5" >java.math...</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1232 (1,135 samples, 39.78%)</title><rect x="441.4" y="85" width="469.4" height="15.0" fill="rgb(227,136,8)" rx="2" ry="2" />
<text  x="444.38" y="95.5" >java.math.MutableBigInteger.divideKnuth:1232</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1128 (8 samples, 0.28%)</title><rect x="134.1" y="101" width="3.3" height="15.0" fill="rgb(252,155,11)" rx="2" ry="2" />
<text  x="137.08" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.valueOf:1190 (17 samples, 0.60%)</title><rect x="149.4" y="181" width="7.0" height="15.0" fill="rgb(247,156,21)" rx="2" ry="2" />
<text  x="152.38" y="191.5" ></text>
</g>
<g >
<title>java.io.FileInputStream.readBytes:-1 (4 samples, 0.14%)</title><rect x="1186.7" y="437" width="1.6" height="15.0" fill="rgb(250,183,35)" rx="2" ry="2" />
<text  x="1189.69" y="447.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.toString:453 (20 samples, 0.70%)</title><rect x="1102.7" y="149" width="8.3" height="15.0" fill="rgb(254,31,48)" rx="2" ry="2" />
<text  x="1105.73" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1183 (93 samples, 3.26%)</title><rect x="321.0" y="85" width="38.5" height="15.0" fill="rgb(211,197,52)" rx="2" ry="2" />
<text  x="324.03" y="95.5" >jav..</text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4150 (93 samples, 3.26%)</title><rect x="229.2" y="133" width="38.5" height="15.0" fill="rgb(232,204,53)" rx="2" ry="2" />
<text  x="232.21" y="143.5" >jav..</text>
</g>
<g >
<title>java.util.Arrays.fill:3181 (1 samples, 0.04%)</title><rect x="953.4" y="85" width="0.4" height="15.0" fill="rgb(248,113,46)" rx="2" ry="2" />
<text  x="956.42" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:112 (3 samples, 0.11%)</title><rect x="146.1" y="101" width="1.2" height="15.0" fill="rgb(210,64,54)" rx="2" ry="2" />
<text  x="149.07" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (24 samples, 0.84%)</title><rect x="490.2" y="53" width="9.9" height="15.0" fill="rgb(214,147,38)" rx="2" ry="2" />
<text  x="493.19" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1557 (13 samples, 0.46%)</title><rect x="707.7" y="69" width="5.4" height="15.0" fill="rgb(226,86,18)" rx="2" ry="2" />
<text  x="710.74" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1473 (1 samples, 0.04%)</title><rect x="544.4" y="53" width="0.4" height="15.0" fill="rgb(236,50,12)" rx="2" ry="2" />
<text  x="547.37" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:113 (1 samples, 0.04%)</title><rect x="147.3" y="101" width="0.4" height="15.0" fill="rgb(251,172,48)" rx="2" ry="2" />
<text  x="150.32" y="111.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal:244 (3 samples, 0.11%)</title><rect x="977.8" y="85" width="1.3" height="15.0" fill="rgb(231,165,39)" rx="2" ry="2" />
<text  x="980.82" y="95.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler.runIteration:325 (1 samples, 0.04%)</title><rect x="1184.6" y="373" width="0.4" height="15.0" fill="rgb(227,227,3)" rx="2" ry="2" />
<text  x="1187.62" y="383.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:263 (1 samples, 0.04%)</title><rect x="1071.3" y="69" width="0.4" height="15.0" fill="rgb(242,69,50)" rx="2" ry="2" />
<text  x="1074.30" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458 (2,819 samples, 98.81%)</title><rect x="10.0" y="373" width="1165.9" height="15.0" fill="rgb(249,109,19)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call:458</text>
</g>
<g >
<title>jdk.jfr.internal.RequestEngine.run_requests:238 (16 samples, 0.56%)</title><rect x="1178.0" y="389" width="6.6" height="15.0" fill="rgb(236,229,25)" rx="2" ry="2" />
<text  x="1181.01" y="399.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:262 (1 samples, 0.04%)</title><rect x="977.0" y="69" width="0.4" height="15.0" fill="rgb(223,67,32)" rx="2" ry="2" />
<text  x="980.00" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:1487 (20 samples, 0.70%)</title><rect x="1102.7" y="133" width="8.3" height="15.0" fill="rgb(244,69,47)" rx="2" ry="2" />
<text  x="1105.73" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:652 (6 samples, 0.21%)</title><rect x="795.0" y="53" width="2.5" height="15.0" fill="rgb(233,174,37)" rx="2" ry="2" />
<text  x="798.01" y="63.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_thrpt_jmhStub:121 (12 samples, 0.42%)</title><rect x="1164.8" y="229" width="4.9" height="15.0" fill="rgb(206,139,51)" rx="2" ry="2" />
<text  x="1167.77" y="239.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.bigIntegerToHex:67 (1 samples, 0.04%)</title><rect x="1111.0" y="181" width="0.4" height="15.0" fill="rgb(253,51,46)" rx="2" ry="2" />
<text  x="1114.00" y="191.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3894 (3 samples, 0.11%)</title><rect x="931.9" y="85" width="1.3" height="15.0" fill="rgb(246,87,34)" rx="2" ry="2" />
<text  x="934.91" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1168 (230 samples, 8.06%)</title><rect x="52.6" y="133" width="95.1" height="15.0" fill="rgb(226,220,12)" rx="2" ry="2" />
<text  x="55.60" y="143.5" >java.math.M..</text>
</g>
<g >
<title>java.util.concurrent.Executors$RunnableAdapter.call:577 (2,819 samples, 98.81%)</title><rect x="10.0" y="405" width="1165.9" height="15.0" fill="rgb(233,121,47)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >java.util.concurrent.Executors$RunnableAdapter.call:577</text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.putStringAt:1749 (11 samples, 0.39%)</title><rect x="979.5" y="85" width="4.5" height="15.0" fill="rgb(232,105,31)" rx="2" ry="2" />
<text  x="982.48" y="95.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.bigIntegerToHex:66 (2,282 samples, 79.99%)</title><rect x="167.2" y="181" width="943.8" height="15.0" fill="rgb(231,202,2)" rx="2" ry="2" />
<text  x="170.17" y="191.5" >org.sample.SM2Util.bigIntegerToHex:66</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1562 (12 samples, 0.42%)</title><rect x="713.1" y="69" width="5.0" height="15.0" fill="rgb(250,169,13)" rx="2" ry="2" />
<text  x="716.12" y="79.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:141 (1 samples, 0.04%)</title><rect x="1027.9" y="117" width="0.4" height="15.0" fill="rgb(246,105,24)" rx="2" ry="2" />
<text  x="1030.87" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1119 (2 samples, 0.07%)</title><rect x="82.8" y="101" width="0.8" height="15.0" fill="rgb(234,54,38)" rx="2" ry="2" />
<text  x="85.79" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1624 (7 samples, 0.25%)</title><rect x="823.1" y="69" width="2.9" height="15.0" fill="rgb(235,170,7)" rx="2" ry="2" />
<text  x="826.14" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (6 samples, 0.21%)</title><rect x="991.9" y="53" width="2.5" height="15.0" fill="rgb(233,97,22)" rx="2" ry="2" />
<text  x="994.89" y="63.5" ></text>
</g>
<g >
<title>java.lang.reflect.Method.invoke:578 (2,819 samples, 98.81%)</title><rect x="10.0" y="341" width="1165.9" height="15.0" fill="rgb(232,197,25)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >java.lang.reflect.Method.invoke:578</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1635 (3 samples, 0.11%)</title><rect x="830.2" y="69" width="1.2" height="15.0" fill="rgb(215,223,42)" rx="2" ry="2" />
<text  x="833.17" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1138 (13 samples, 0.46%)</title><rect x="137.4" y="101" width="5.4" height="15.0" fill="rgb(227,24,43)" rx="2" ry="2" />
<text  x="140.39" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:191 (4 samples, 0.14%)</title><rect x="147.7" y="133" width="1.7" height="15.0" fill="rgb(236,160,15)" rx="2" ry="2" />
<text  x="150.73" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:701 (10 samples, 0.35%)</title><rect x="857.9" y="37" width="4.1" height="15.0" fill="rgb(218,111,17)" rx="2" ry="2" />
<text  x="860.88" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1613 (3 samples, 0.11%)</title><rect x="802.9" y="69" width="1.2" height="15.0" fill="rgb(206,114,2)" rx="2" ry="2" />
<text  x="805.87" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:359 (36 samples, 1.26%)</title><rect x="419.5" y="69" width="14.9" height="15.0" fill="rgb(238,170,28)" rx="2" ry="2" />
<text  x="422.46" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divide:1156 (2 samples, 0.07%)</title><rect x="271.4" y="101" width="0.8" height="15.0" fill="rgb(216,166,46)" rx="2" ry="2" />
<text  x="274.40" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1553 (16 samples, 0.56%)</title><rect x="600.2" y="69" width="6.6" height="15.0" fill="rgb(230,180,6)" rx="2" ry="2" />
<text  x="603.21" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1123 (9 samples, 0.32%)</title><rect x="87.3" y="101" width="3.8" height="15.0" fill="rgb(245,165,8)" rx="2" ry="2" />
<text  x="90.34" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1473 (2 samples, 0.07%)</title><rect x="502.2" y="53" width="0.8" height="15.0" fill="rgb(208,34,49)" rx="2" ry="2" />
<text  x="505.18" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4179 (2 samples, 0.07%)</title><rect x="1101.1" y="133" width="0.8" height="15.0" fill="rgb(216,142,16)" rx="2" ry="2" />
<text  x="1104.08" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:582 (1 samples, 0.04%)</title><rect x="973.3" y="101" width="0.4" height="15.0" fill="rgb(211,98,42)" rx="2" ry="2" />
<text  x="976.27" y="111.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:526 (16 samples, 0.56%)</title><rect x="1138.3" y="149" width="6.6" height="15.0" fill="rgb(237,33,9)" rx="2" ry="2" />
<text  x="1141.30" y="159.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:649 (3 samples, 0.11%)</title><rect x="840.1" y="53" width="1.2" height="15.0" fill="rgb(232,198,24)" rx="2" ry="2" />
<text  x="843.09" y="63.5" ></text>
</g>
<g >
<title>java.lang.StringLatin1.toUpperCase:531 (7 samples, 0.25%)</title><rect x="1159.4" y="149" width="2.9" height="15.0" fill="rgb(226,153,9)" rx="2" ry="2" />
<text  x="1162.39" y="159.5" ></text>
</g>
<g >
<title>java.util.Arrays.fill:3182 (3 samples, 0.11%)</title><rect x="953.8" y="85" width="1.3" height="15.0" fill="rgb(239,84,48)" rx="2" ry="2" />
<text  x="956.83" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1543 (1 samples, 0.04%)</title><rect x="584.5" y="69" width="0.4" height="15.0" fill="rgb(253,196,29)" rx="2" ry="2" />
<text  x="587.49" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1492 (12 samples, 0.42%)</title><rect x="447.2" y="69" width="4.9" height="15.0" fill="rgb(247,111,14)" rx="2" ry="2" />
<text  x="450.17" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (8 samples, 0.28%)</title><rect x="264.4" y="117" width="3.3" height="15.0" fill="rgb(240,179,8)" rx="2" ry="2" />
<text  x="267.36" y="127.5" ></text>
</g>
<g >
<title>java.security.spec.ECPoint.getAffineX:77 (1 samples, 0.04%)</title><rect x="166.8" y="181" width="0.4" height="15.0" fill="rgb(220,186,12)" rx="2" ry="2" />
<text  x="169.75" y="191.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (69 samples, 2.42%)</title><rect x="1071.7" y="101" width="28.5" height="15.0" fill="rgb(245,173,44)" rx="2" ry="2" />
<text  x="1074.71" y="111.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:123 (12 samples, 0.42%)</title><rect x="224.2" y="117" width="5.0" height="15.0" fill="rgb(250,22,27)" rx="2" ry="2" />
<text  x="227.24" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:164 (1 samples, 0.04%)</title><rect x="953.0" y="101" width="0.4" height="15.0" fill="rgb(210,23,37)" rx="2" ry="2" />
<text  x="956.01" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getMagnitudeArray:162 (12 samples, 0.42%)</title><rect x="921.6" y="101" width="4.9" height="15.0" fill="rgb(243,112,49)" rx="2" ry="2" />
<text  x="924.57" y="111.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:252 (1 samples, 0.04%)</title><rect x="1152.8" y="133" width="0.4" height="15.0" fill="rgb(226,137,11)" rx="2" ry="2" />
<text  x="1155.78" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1523 (2 samples, 0.07%)</title><rect x="559.7" y="69" width="0.8" height="15.0" fill="rgb(214,50,23)" rx="2" ry="2" />
<text  x="562.67" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4534 (12 samples, 0.42%)</title><rect x="1106.0" y="117" width="5.0" height="15.0" fill="rgb(240,183,7)" rx="2" ry="2" />
<text  x="1109.04" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:647 (12 samples, 0.42%)</title><rect x="752.0" y="53" width="5.0" height="15.0" fill="rgb(236,133,23)" rx="2" ry="2" />
<text  x="755.00" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4163 (7 samples, 0.25%)</title><rect x="968.7" y="133" width="2.9" height="15.0" fill="rgb(207,167,5)" rx="2" ry="2" />
<text  x="971.72" y="143.5" ></text>
</g>
<g >
<title>java.lang.String.&lt;init&gt;:4553 (7 samples, 0.25%)</title><rect x="1056.8" y="85" width="2.9" height="15.0" fill="rgb(209,82,33)" rx="2" ry="2" />
<text  x="1059.82" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1467 (2 samples, 0.07%)</title><rect x="524.1" y="53" width="0.8" height="15.0" fill="rgb(232,146,38)" rx="2" ry="2" />
<text  x="527.10" y="63.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4140 (17 samples, 0.60%)</title><rect x="180.8" y="133" width="7.0" height="15.0" fill="rgb(252,159,52)" rx="2" ry="2" />
<text  x="183.82" y="143.5" ></text>
</g>
<g >
<title>java.lang.String.coder:4559 (2 samples, 0.07%)</title><rect x="970.8" y="101" width="0.8" height="15.0" fill="rgb(252,180,30)" rx="2" ry="2" />
<text  x="973.79" y="111.5" ></text>
</g>
<g >
<title>java.lang.String.toUpperCase:3487 (114 samples, 4.00%)</title><rect x="1116.4" y="165" width="47.1" height="15.0" fill="rgb(223,125,15)" rx="2" ry="2" />
<text  x="1119.38" y="175.5" >java..</text>
</g>
<g >
<title>java.math.BigInteger.equals:4000 (49 samples, 1.72%)</title><rect x="22.8" y="181" width="20.3" height="15.0" fill="rgb(206,192,21)" rx="2" ry="2" />
<text  x="25.82" y="191.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1496 (3 samples, 0.11%)</title><rect x="515.0" y="69" width="1.2" height="15.0" fill="rgb(221,130,48)" rx="2" ry="2" />
<text  x="518.01" y="79.5" ></text>
</g>
<g >
<title>org.openjdk.jmh.profile.JavaFlightRecorderProfiler.beforeIteration:131 (1 samples, 0.04%)</title><rect x="1184.6" y="341" width="0.4" height="15.0" fill="rgb(244,158,14)" rx="2" ry="2" />
<text  x="1187.62" y="351.5" ></text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKey:39 (3 samples, 0.11%)</title><rect x="13.7" y="197" width="1.3" height="15.0" fill="rgb(238,96,35)" rx="2" ry="2" />
<text  x="16.72" y="207.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:68 (11 samples, 0.39%)</title><rect x="411.6" y="69" width="4.6" height="15.0" fill="rgb(251,140,17)" rx="2" ry="2" />
<text  x="414.61" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.copyAndShift:1470 (18 samples, 0.63%)</title><rect x="530.3" y="53" width="7.5" height="15.0" fill="rgb(234,158,13)" rx="2" ry="2" />
<text  x="533.31" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1513 (4 samples, 0.14%)</title><rect x="557.6" y="69" width="1.7" height="15.0" fill="rgb(242,80,54)" rx="2" ry="2" />
<text  x="560.61" y="79.5" ></text>
</g>
<g >
<title>jdk.jfr.internal.PlatformRecorder.isToDisk:511 (1 samples, 0.04%)</title><rect x="1175.9" y="405" width="0.5" height="15.0" fill="rgb(236,57,25)" rx="2" ry="2" />
<text  x="1178.94" y="415.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1122 (9 samples, 0.32%)</title><rect x="83.6" y="101" width="3.7" height="15.0" fill="rgb(252,170,13)" rx="2" ry="2" />
<text  x="86.62" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.toString:4090 (1 samples, 0.04%)</title><rect x="170.1" y="165" width="0.4" height="15.0" fill="rgb(253,77,24)" rx="2" ry="2" />
<text  x="173.06" y="175.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.primitiveLeftShift:699 (1 samples, 0.04%)</title><rect x="855.0" y="37" width="0.4" height="15.0" fill="rgb(225,75,31)" rx="2" ry="2" />
<text  x="857.98" y="47.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:650 (1 samples, 0.04%)</title><rect x="841.3" y="53" width="0.4" height="15.0" fill="rgb(215,196,49)" rx="2" ry="2" />
<text  x="844.34" y="63.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.toBigInteger:189 (3 samples, 0.11%)</title><rect x="948.9" y="117" width="1.2" height="15.0" fill="rgb(216,5,8)" rx="2" ry="2" />
<text  x="951.87" y="127.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.inflateIfNeededFor:1732 (7 samples, 0.25%)</title><rect x="1072.5" y="69" width="2.9" height="15.0" fill="rgb(218,107,3)" rx="2" ry="2" />
<text  x="1075.54" y="79.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.newCapacity:263 (1 samples, 0.04%)</title><rect x="977.4" y="69" width="0.4" height="15.0" fill="rgb(228,158,41)" rx="2" ry="2" />
<text  x="980.41" y="79.5" ></text>
</g>
<g >
<title>java.lang.Object.&lt;init&gt;:45 (79 samples, 2.77%)</title><rect x="231.7" y="101" width="32.7" height="15.0" fill="rgb(224,100,47)" rx="2" ry="2" />
<text  x="234.69" y="111.5" >ja..</text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1594 (12 samples, 0.42%)</title><rect x="747.0" y="69" width="5.0" height="15.0" fill="rgb(235,193,32)" rx="2" ry="2" />
<text  x="750.03" y="79.5" ></text>
</g>
<g >
<title>java.lang.String.getBytes:4472 (40 samples, 1.40%)</title><rect x="1083.7" y="69" width="16.5" height="15.0" fill="rgb(239,51,7)" rx="2" ry="2" />
<text  x="1086.70" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1578 (30 samples, 1.05%)</title><rect x="721.8" y="69" width="12.4" height="15.0" fill="rgb(217,207,4)" rx="2" ry="2" />
<text  x="724.81" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1675 (66 samples, 2.31%)</title><rect x="876.5" y="69" width="27.3" height="15.0" fill="rgb(251,28,50)" rx="2" ry="2" />
<text  x="879.49" y="79.5" >j..</text>
</g>
<g >
<title>java.math.MutableBigInteger.&lt;init&gt;:122 (21 samples, 0.74%)</title><rect x="215.6" y="117" width="8.6" height="15.0" fill="rgb(211,191,7)" rx="2" ry="2" />
<text  x="218.56" y="127.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4157 (2 samples, 0.07%)</title><rect x="961.3" y="133" width="0.8" height="15.0" fill="rgb(219,107,11)" rx="2" ry="2" />
<text  x="964.28" y="143.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append:587 (98 samples, 3.43%)</title><rect x="979.1" y="101" width="40.5" height="15.0" fill="rgb(246,118,46)" rx="2" ry="2" />
<text  x="982.06" y="111.5" >jav..</text>
</g>
<g >
<title>org.sample.SM2Util.getHexPublicKey:37 (6 samples, 0.21%)</title><rect x="11.2" y="197" width="2.5" height="15.0" fill="rgb(224,31,4)" rx="2" ry="2" />
<text  x="14.24" y="207.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:155 (5 samples, 0.18%)</title><rect x="962.5" y="117" width="2.1" height="15.0" fill="rgb(239,9,21)" rx="2" ry="2" />
<text  x="965.52" y="127.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.mulsub:655 (1 samples, 0.04%)</title><rect x="797.5" y="53" width="0.4" height="15.0" fill="rgb(208,116,17)" rx="2" ry="2" />
<text  x="800.49" y="63.5" ></text>
</g>
<g >
<title>java.lang.Long.toString:156 (2 samples, 0.07%)</title><rect x="1030.4" y="117" width="0.8" height="15.0" fill="rgb(208,103,47)" rx="2" ry="2" />
<text  x="1033.35" y="127.5" ></text>
</g>
<g >
<title>org.sample.jmh_generated.BenchmarkPublicKeys_sm2p256v1_compressed_jmhTest.sm2p256v1_compressed_thrpt_jmhStub:120 (1 samples, 0.04%)</title><rect x="1164.4" y="229" width="0.4" height="15.0" fill="rgb(224,157,2)" rx="2" ry="2" />
<text  x="1167.36" y="239.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:250 (5 samples, 0.18%)</title><rect x="1150.7" y="133" width="2.1" height="15.0" fill="rgb(244,122,54)" rx="2" ry="2" />
<text  x="1153.71" y="143.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange:3823 (1 samples, 0.04%)</title><rect x="1110.6" y="101" width="0.4" height="15.0" fill="rgb(231,35,14)" rx="2" ry="2" />
<text  x="1113.59" y="111.5" ></text>
</g>
<g >
<title>java.math.BigInteger.smallToString:4160 (16 samples, 0.56%)</title><rect x="962.1" y="133" width="6.6" height="15.0" fill="rgb(222,133,12)" rx="2" ry="2" />
<text  x="965.11" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.getLowestSetBit:364 (2 samples, 0.07%)</title><rect x="440.6" y="69" width="0.8" height="15.0" fill="rgb(245,108,30)" rx="2" ry="2" />
<text  x="443.56" y="79.5" ></text>
</g>
<g >
<title>java.lang.CharacterDataLatin1.toUpperCaseEx:249 (1 samples, 0.04%)</title><rect x="1129.2" y="133" width="0.4" height="15.0" fill="rgb(238,2,11)" rx="2" ry="2" />
<text  x="1132.20" y="143.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1205 (6 samples, 0.21%)</title><rect x="390.9" y="85" width="2.5" height="15.0" fill="rgb(233,88,24)" rx="2" ry="2" />
<text  x="393.93" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideOneWord:1110 (3 samples, 0.11%)</title><rect x="69.1" y="101" width="1.3" height="15.0" fill="rgb(236,128,47)" rx="2" ry="2" />
<text  x="72.14" y="111.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideMagnitude:1581 (7 samples, 0.25%)</title><rect x="744.1" y="69" width="2.9" height="15.0" fill="rgb(238,75,34)" rx="2" ry="2" />
<text  x="747.14" y="79.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.divideKnuth:1207 (4 samples, 0.14%)</title><rect x="393.4" y="85" width="1.7" height="15.0" fill="rgb(227,29,3)" rx="2" ry="2" />
<text  x="396.41" y="95.5" ></text>
</g>
<g >
<title>java.math.MutableBigInteger.rightShift:551 (1 samples, 0.04%)</title><rect x="854.2" y="53" width="0.4" height="15.0" fill="rgb(216,1,0)" rx="2" ry="2" />
<text  x="857.16" y="63.5" ></text>
</g>
</g>
</svg>
